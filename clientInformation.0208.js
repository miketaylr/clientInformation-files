!(function (e) {
  function t(n) {
    if (r[n]) return r[n].exports;
    var i = (r[n] = { exports: {}, id: n, loaded: !1 });
    return e[n].call(i.exports, i, i.exports, t), (i.loaded = !0), i.exports;
  }
  var r = {};
  return (t.m = e), (t.c = r), (t.p = ""), t(0);
})(
  (function (e) {
    for (var t in e)
      if (Object.prototype.hasOwnProperty.call(e, t))
        switch (typeof e[t]) {
          case "function":
            break;
          case "object":
            e[t] = (function (t) {
              var r = t.slice(1),
                n = e[t[0]];
              return function (e, t, i) {
                n.apply(this, [e, t, i].concat(r));
              };
            })(e[t]);
            break;
          default:
            e[t] = e[e[t]];
        }
    return e;
  })([
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i =
          Object.assign ||
          function (e) {
            for (var t = 1; t < arguments.length; t++) {
              var r = arguments[t];
              for (var n in r)
                Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
            }
            return e;
          },
        s = r(258),
        a = n(s),
        o = r(226);
      onmessage = function (e) {
        var t = e.data,
          r = t.code,
          n = t.filename,
          s = t.options,
          u = void 0;
        try {
          var l = o.transform(r, i({ plugins: a.default }, s)).code;
          u = { filename: n, type: "code", code: l };
        } catch (e) {
          u = {
            filename: n,
            type: "error",
            error: { message: e.message.replace("unknown", e.name) },
          };
        }
        postMessage(JSON.stringify(u));
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        var t = te["is" + e];
        t ||
          (t = te["is" + e] = function (t, r) {
            return te.is(e, t, r);
          }),
          (te["assert" + e] = function (r, n) {
            if (((n = n || {}), !t(r, n)))
              throw new Error(
                "Expected type " +
                  (0, M.default)(e) +
                  " with option " +
                  (0, M.default)(n)
              );
          });
      }
      function a(e, t, r) {
        if (!t) return !1;
        var n = o(t.type, e);
        return !!n && ("undefined" == typeof r || te.shallowEqual(t, r));
      }
      function o(e, t) {
        if (e === t) return !0;
        if (te.ALIAS_KEYS[t]) return !1;
        var r = te.FLIPPED_ALIAS_KEYS[t];
        if (r) {
          if (r[0] === e) return !0;
          for (
            var n = r,
              i = Array.isArray(n),
              s = 0,
              n = i ? n : (0, O.default)(n);
            ;

          ) {
            var a;
            if (i) {
              if (s >= n.length) break;
              a = n[s++];
            } else {
              if (((s = n.next()), s.done)) break;
              a = s.value;
            }
            var o = a;
            if (e === o) return !0;
          }
        }
        return !1;
      }
      function u(e, t, r) {
        if (e) {
          var n = te.NODE_FIELDS[e.type];
          if (n) {
            var i = n[t];
            i &&
              i.validate &&
              ((i.optional && null == r) || i.validate(e, t, r));
          }
        }
      }
      function l(e, t) {
        for (
          var r = (0, I.default)(t),
            n = r,
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, O.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a;
          if (e[o] !== t[o]) return !1;
        }
        return !0;
      }
      function c(e, t, r) {
        return (
          (e.object = te.memberExpression(e.object, e.property, e.computed)),
          (e.property = t),
          (e.computed = !!r),
          e
        );
      }
      function f(e, t) {
        return (e.object = te.memberExpression(t, e.object)), e;
      }
      function p(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : "body";
        return (e[t] = te.toBlock(e[t], e));
      }
      function h(e) {
        if (!e) return e;
        var t = {};
        for (var r in e) "_" !== r[0] && (t[r] = e[r]);
        return t;
      }
      function d(e) {
        var t = h(e);
        return delete t.loc, t;
      }
      function m(e) {
        if (!e) return e;
        var t = {};
        for (var r in e)
          if ("_" !== r[0]) {
            var n = e[r];
            n &&
              (n.type
                ? (n = te.cloneDeep(n))
                : Array.isArray(n) && (n = n.map(te.cloneDeep))),
              (t[r] = n);
          }
        return t;
      }
      function v(e, t) {
        var r = e.split(".");
        return function (e) {
          if (!te.isMemberExpression(e)) return !1;
          for (var n = [e], i = 0; n.length; ) {
            var s = n.shift();
            if (t && i === r.length) return !0;
            if (te.isIdentifier(s)) {
              if (r[i] !== s.name) return !1;
            } else {
              if (!te.isStringLiteral(s)) {
                if (te.isMemberExpression(s)) {
                  if (s.computed && !te.isStringLiteral(s.property)) return !1;
                  n.push(s.object), n.push(s.property);
                  continue;
                }
                return !1;
              }
              if (r[i] !== s.value) return !1;
            }
            if (++i > r.length) return !1;
          }
          return !0;
        };
      }
      function y(e) {
        for (
          var t = te.COMMENT_KEYS,
            r = Array.isArray(t),
            n = 0,
            t = r ? t : (0, O.default)(t);
          ;

        ) {
          var i;
          if (r) {
            if (n >= t.length) break;
            i = t[n++];
          } else {
            if (((n = t.next()), n.done)) break;
            i = n.value;
          }
          var s = i;
          delete e[s];
        }
        return e;
      }
      function g(e, t) {
        return b(e, t), E(e, t), x(e, t), e;
      }
      function b(e, t) {
        A("trailingComments", e, t);
      }
      function E(e, t) {
        A("leadingComments", e, t);
      }
      function x(e, t) {
        A("innerComments", e, t);
      }
      function A(e, t, r) {
        t &&
          r &&
          (t[e] = (0, z.default)((0, q.default)([].concat(t[e], r[e]))));
      }
      function D(e, t) {
        if (!e || !t) return e;
        for (
          var r = te.INHERIT_KEYS.optional,
            n = Array.isArray(r),
            i = 0,
            r = n ? r : (0, O.default)(r);
          ;

        ) {
          var s;
          if (n) {
            if (i >= r.length) break;
            s = r[i++];
          } else {
            if (((i = r.next()), i.done)) break;
            s = i.value;
          }
          var a = s;
          null == e[a] && (e[a] = t[a]);
        }
        for (var o in t) "_" === o[0] && (e[o] = t[o]);
        for (
          var u = te.INHERIT_KEYS.force,
            l = Array.isArray(u),
            c = 0,
            u = l ? u : (0, O.default)(u);
          ;

        ) {
          var f;
          if (l) {
            if (c >= u.length) break;
            f = u[c++];
          } else {
            if (((c = u.next()), c.done)) break;
            f = c.value;
          }
          var p = f;
          e[p] = t[p];
        }
        return te.inheritsComments(e, t), e;
      }
      function C(e) {
        if (!S(e)) throw new TypeError("Not a valid node " + (e && e.type));
      }
      function S(e) {
        return !(!e || !Q.VISITOR_KEYS[e.type]);
      }
      function _(e, t, r) {
        if (e) {
          var n = te.VISITOR_KEYS[e.type];
          if (n) {
            (r = r || {}), t(e, r);
            for (
              var i = n,
                s = Array.isArray(i),
                a = 0,
                i = s ? i : (0, O.default)(i);
              ;

            ) {
              var o;
              if (s) {
                if (a >= i.length) break;
                o = i[a++];
              } else {
                if (((a = i.next()), a.done)) break;
                o = a.value;
              }
              var u = o,
                l = e[u];
              if (Array.isArray(l))
                for (
                  var c = l,
                    f = Array.isArray(c),
                    p = 0,
                    c = f ? c : (0, O.default)(c);
                  ;

                ) {
                  var h;
                  if (f) {
                    if (p >= c.length) break;
                    h = c[p++];
                  } else {
                    if (((p = c.next()), p.done)) break;
                    h = p.value;
                  }
                  var d = h;
                  _(d, t, r);
                }
              else _(l, t, r);
            }
          }
        }
      }
      function w(e, t) {
        t = t || {};
        for (
          var r = t.preserveComments ? se : ae,
            n = r,
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, O.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a;
          null != e[o] && (e[o] = void 0);
        }
        for (var u in e) "_" === u[0] && null != e[u] && (e[u] = void 0);
        for (
          var l = (0, P.default)(e),
            c = l,
            f = Array.isArray(c),
            p = 0,
            c = f ? c : (0, O.default)(c);
          ;

        ) {
          var h;
          if (f) {
            if (p >= c.length) break;
            h = c[p++];
          } else {
            if (((p = c.next()), p.done)) break;
            h = p.value;
          }
          var d = h;
          e[d] = null;
        }
      }
      function F(e, t) {
        return _(e, w, t), e;
      }
      (t.__esModule = !0),
        (t.createTypeAnnotationBasedOnTypeof = t.removeTypeDuplicates = t.createUnionTypeAnnotation = t.valueToNode = t.toBlock = t.toExpression = t.toStatement = t.toBindingIdentifierName = t.toIdentifier = t.toKeyAlias = t.toSequenceExpression = t.toComputedKey = t.isNodesEquivalent = t.isImmutable = t.isScope = t.isSpecifierDefault = t.isVar = t.isBlockScoped = t.isLet = t.isValidIdentifier = t.isReferenced = t.isBinding = t.getOuterBindingIdentifiers = t.getBindingIdentifiers = t.TYPES = t.react = t.DEPRECATED_KEYS = t.BUILDER_KEYS = t.NODE_FIELDS = t.ALIAS_KEYS = t.VISITOR_KEYS = t.NOT_LOCAL_BINDING = t.BLOCK_SCOPED_SYMBOL = t.INHERIT_KEYS = t.UNARY_OPERATORS = t.STRING_UNARY_OPERATORS = t.NUMBER_UNARY_OPERATORS = t.BOOLEAN_UNARY_OPERATORS = t.BINARY_OPERATORS = t.NUMBER_BINARY_OPERATORS = t.BOOLEAN_BINARY_OPERATORS = t.COMPARISON_BINARY_OPERATORS = t.EQUALITY_BINARY_OPERATORS = t.BOOLEAN_NUMBER_BINARY_OPERATORS = t.UPDATE_OPERATORS = t.LOGICAL_OPERATORS = t.COMMENT_KEYS = t.FOR_INIT_KEYS = t.FLATTENABLE_KEYS = t.STATEMENT_OR_BLOCK_KEYS = void 0);
      var k = r(295),
        P = i(k),
        T = r(2),
        O = i(T),
        B = r(17),
        I = i(B),
        N = r(32),
        M = i(N),
        R = r(101);
      Object.defineProperty(t, "STATEMENT_OR_BLOCK_KEYS", {
        enumerable: !0,
        get: function () {
          return R.STATEMENT_OR_BLOCK_KEYS;
        },
      }),
        Object.defineProperty(t, "FLATTENABLE_KEYS", {
          enumerable: !0,
          get: function () {
            return R.FLATTENABLE_KEYS;
          },
        }),
        Object.defineProperty(t, "FOR_INIT_KEYS", {
          enumerable: !0,
          get: function () {
            return R.FOR_INIT_KEYS;
          },
        }),
        Object.defineProperty(t, "COMMENT_KEYS", {
          enumerable: !0,
          get: function () {
            return R.COMMENT_KEYS;
          },
        }),
        Object.defineProperty(t, "LOGICAL_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.LOGICAL_OPERATORS;
          },
        }),
        Object.defineProperty(t, "UPDATE_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.UPDATE_OPERATORS;
          },
        }),
        Object.defineProperty(t, "BOOLEAN_NUMBER_BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.BOOLEAN_NUMBER_BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "EQUALITY_BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.EQUALITY_BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "COMPARISON_BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.COMPARISON_BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "BOOLEAN_BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.BOOLEAN_BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "NUMBER_BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.NUMBER_BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "BINARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.BINARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "BOOLEAN_UNARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.BOOLEAN_UNARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "NUMBER_UNARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.NUMBER_UNARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "STRING_UNARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.STRING_UNARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "UNARY_OPERATORS", {
          enumerable: !0,
          get: function () {
            return R.UNARY_OPERATORS;
          },
        }),
        Object.defineProperty(t, "INHERIT_KEYS", {
          enumerable: !0,
          get: function () {
            return R.INHERIT_KEYS;
          },
        }),
        Object.defineProperty(t, "BLOCK_SCOPED_SYMBOL", {
          enumerable: !0,
          get: function () {
            return R.BLOCK_SCOPED_SYMBOL;
          },
        }),
        Object.defineProperty(t, "NOT_LOCAL_BINDING", {
          enumerable: !0,
          get: function () {
            return R.NOT_LOCAL_BINDING;
          },
        }),
        (t.is = a),
        (t.isType = o),
        (t.validate = u),
        (t.shallowEqual = l),
        (t.appendToMemberExpression = c),
        (t.prependToMemberExpression = f),
        (t.ensureBlock = p),
        (t.clone = h),
        (t.cloneWithoutLoc = d),
        (t.cloneDeep = m),
        (t.buildMatchMemberExpression = v),
        (t.removeComments = y),
        (t.inheritsComments = g),
        (t.inheritTrailingComments = b),
        (t.inheritLeadingComments = E),
        (t.inheritInnerComments = x),
        (t.inherits = D),
        (t.assertNode = C),
        (t.isNode = S),
        (t.traverseFast = _),
        (t.removeProperties = w),
        (t.removePropertiesDeep = F);
      var L = r(161);
      Object.defineProperty(t, "getBindingIdentifiers", {
        enumerable: !0,
        get: function () {
          return L.getBindingIdentifiers;
        },
      }),
        Object.defineProperty(t, "getOuterBindingIdentifiers", {
          enumerable: !0,
          get: function () {
            return L.getOuterBindingIdentifiers;
          },
        });
      var j = r(331);
      Object.defineProperty(t, "isBinding", {
        enumerable: !0,
        get: function () {
          return j.isBinding;
        },
      }),
        Object.defineProperty(t, "isReferenced", {
          enumerable: !0,
          get: function () {
            return j.isReferenced;
          },
        }),
        Object.defineProperty(t, "isValidIdentifier", {
          enumerable: !0,
          get: function () {
            return j.isValidIdentifier;
          },
        }),
        Object.defineProperty(t, "isLet", {
          enumerable: !0,
          get: function () {
            return j.isLet;
          },
        }),
        Object.defineProperty(t, "isBlockScoped", {
          enumerable: !0,
          get: function () {
            return j.isBlockScoped;
          },
        }),
        Object.defineProperty(t, "isVar", {
          enumerable: !0,
          get: function () {
            return j.isVar;
          },
        }),
        Object.defineProperty(t, "isSpecifierDefault", {
          enumerable: !0,
          get: function () {
            return j.isSpecifierDefault;
          },
        }),
        Object.defineProperty(t, "isScope", {
          enumerable: !0,
          get: function () {
            return j.isScope;
          },
        }),
        Object.defineProperty(t, "isImmutable", {
          enumerable: !0,
          get: function () {
            return j.isImmutable;
          },
        }),
        Object.defineProperty(t, "isNodesEquivalent", {
          enumerable: !0,
          get: function () {
            return j.isNodesEquivalent;
          },
        });
      var V = r(321);
      Object.defineProperty(t, "toComputedKey", {
        enumerable: !0,
        get: function () {
          return V.toComputedKey;
        },
      }),
        Object.defineProperty(t, "toSequenceExpression", {
          enumerable: !0,
          get: function () {
            return V.toSequenceExpression;
          },
        }),
        Object.defineProperty(t, "toKeyAlias", {
          enumerable: !0,
          get: function () {
            return V.toKeyAlias;
          },
        }),
        Object.defineProperty(t, "toIdentifier", {
          enumerable: !0,
          get: function () {
            return V.toIdentifier;
          },
        }),
        Object.defineProperty(t, "toBindingIdentifierName", {
          enumerable: !0,
          get: function () {
            return V.toBindingIdentifierName;
          },
        }),
        Object.defineProperty(t, "toStatement", {
          enumerable: !0,
          get: function () {
            return V.toStatement;
          },
        }),
        Object.defineProperty(t, "toExpression", {
          enumerable: !0,
          get: function () {
            return V.toExpression;
          },
        }),
        Object.defineProperty(t, "toBlock", {
          enumerable: !0,
          get: function () {
            return V.toBlock;
          },
        }),
        Object.defineProperty(t, "valueToNode", {
          enumerable: !0,
          get: function () {
            return V.valueToNode;
          },
        });
      var U = r(329);
      Object.defineProperty(t, "createUnionTypeAnnotation", {
        enumerable: !0,
        get: function () {
          return U.createUnionTypeAnnotation;
        },
      }),
        Object.defineProperty(t, "removeTypeDuplicates", {
          enumerable: !0,
          get: function () {
            return U.removeTypeDuplicates;
          },
        }),
        Object.defineProperty(t, "createTypeAnnotationBasedOnTypeof", {
          enumerable: !0,
          get: function () {
            return U.createTypeAnnotationBasedOnTypeof;
          },
        });
      var G = r(553),
        W = i(G),
        Y = r(512),
        q = i(Y),
        K = r(87),
        H = i(K),
        J = r(88),
        X = i(J),
        $ = r(536),
        z = i($);
      r(326);
      var Q = r(26),
        Z = r(330),
        ee = n(Z),
        te = t;
      (t.VISITOR_KEYS = Q.VISITOR_KEYS),
        (t.ALIAS_KEYS = Q.ALIAS_KEYS),
        (t.NODE_FIELDS = Q.NODE_FIELDS),
        (t.BUILDER_KEYS = Q.BUILDER_KEYS),
        (t.DEPRECATED_KEYS = Q.DEPRECATED_KEYS),
        (t.react = ee);
      for (var re in te.VISITOR_KEYS) s(re);
      (te.FLIPPED_ALIAS_KEYS = {}),
        (0, X.default)(te.ALIAS_KEYS, function (e, t) {
          (0, X.default)(e, function (e) {
            var r = (te.FLIPPED_ALIAS_KEYS[e] = te.FLIPPED_ALIAS_KEYS[e] || []);
            r.push(t);
          });
        }),
        (0, X.default)(te.FLIPPED_ALIAS_KEYS, function (e, t) {
          (te[t.toUpperCase() + "_TYPES"] = e), s(t);
        });
      t.TYPES = (0, I.default)(te.VISITOR_KEYS)
        .concat((0, I.default)(te.FLIPPED_ALIAS_KEYS))
        .concat((0, I.default)(te.DEPRECATED_KEYS));
      (0, X.default)(te.BUILDER_KEYS, function (e, t) {
        function r() {
          if (arguments.length > e.length)
            throw new Error(
              "t." +
                t +
                ": Too many arguments passed. Received " +
                arguments.length +
                " but can receive no more than " +
                e.length
            );
          var r = {};
          r.type = t;
          for (
            var n = 0,
              i = e,
              s = Array.isArray(i),
              a = 0,
              i = s ? i : (0, O.default)(i);
            ;

          ) {
            var o;
            if (s) {
              if (a >= i.length) break;
              o = i[a++];
            } else {
              if (((a = i.next()), a.done)) break;
              o = a.value;
            }
            var l = o,
              c = te.NODE_FIELDS[t][l],
              f = arguments[n++];
            void 0 === f && (f = (0, H.default)(c.default)), (r[l] = f);
          }
          for (var p in r) u(r, p, r[p]);
          return r;
        }
        (te[t] = r), (te[t[0].toLowerCase() + t.slice(1)] = r);
      });
      var ne = function (e) {
        function t(e) {
          return function () {
            return e.apply(this, arguments);
          };
        }
        var r = te.DEPRECATED_KEYS[e];
        (te[e] = te[e[0].toLowerCase() + e.slice(1)] = t(te[r])),
          (te["is" + e] = t(te["is" + r])),
          (te["assert" + e] = t(te["assert" + r]));
      };
      for (var ie in te.DEPRECATED_KEYS) ne(ie);
      (0, W.default)(te), (0, W.default)(te.VISITOR_KEYS);
      var se = ["tokens", "start", "end", "loc", "raw", "rawValue"],
        ae = te.COMMENT_KEYS.concat(["comments"]).concat(se);
    },
    function (e, t, r) {
      e.exports = { default: r(341), __esModule: !0 };
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function (e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        });
    },
    function (e, t) {
      var r = (e.exports = { version: "2.4.0" });
      "number" == typeof __e && (__e = r);
    },
    function (e, t) {
      var r = Array.isArray;
      e.exports = r;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(298),
        s = n(i),
        a = r(34),
        o = n(a),
        u =
          "function" == typeof o.default && "symbol" == typeof s.default
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof o.default &&
                  e.constructor === o.default &&
                  e !== o.default.prototype
                  ? "symbol"
                  : typeof e;
              };
      t.default =
        "function" == typeof o.default && "symbol" === u(s.default)
          ? function (e) {
              return "undefined" == typeof e ? "undefined" : u(e);
            }
          : function (e) {
              return e &&
                "function" == typeof o.default &&
                e.constructor === o.default &&
                e !== o.default.prototype
                ? "symbol"
                : "undefined" == typeof e
                ? "undefined"
                : u(e);
            };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t, r, n, i) {
        if (e) {
          if (
            (t || (t = {}),
            !t.noScope && !r && "Program" !== e.type && "File" !== e.type)
          )
            throw new Error(y.get("traverseNeedsParent", e.type));
          m.explode(t), s.node(e, t, r, n, i);
        }
      }
      function a(e, t) {
        e.node.type === t.type && ((t.has = !0), e.stop());
      }
      (t.__esModule = !0), (t.visitors = t.Hub = t.Scope = t.NodePath = void 0);
      var o = r(2),
        u = i(o),
        l = r(35);
      Object.defineProperty(t, "NodePath", {
        enumerable: !0,
        get: function () {
          return i(l).default;
        },
      });
      var c = r(100);
      Object.defineProperty(t, "Scope", {
        enumerable: !0,
        get: function () {
          return i(c).default;
        },
      });
      var f = r(158);
      Object.defineProperty(t, "Hub", {
        enumerable: !0,
        get: function () {
          return i(f).default;
        },
      }),
        (t.default = s);
      var p = r(302),
        h = i(p),
        d = r(319),
        m = n(d),
        v = r(16),
        y = n(v),
        g = r(89),
        b = i(g),
        E = r(1),
        x = n(E),
        A = r(67),
        D = n(A);
      (t.visitors = m),
        (s.visitors = m),
        (s.verify = m.verify),
        (s.explode = m.explode),
        (s.NodePath = r(35)),
        (s.Scope = r(100)),
        (s.Hub = r(158)),
        (s.cheap = function (e, t) {
          return x.traverseFast(e, t);
        }),
        (s.node = function (e, t, r, n, i, s) {
          var a = x.VISITOR_KEYS[e.type];
          if (a)
            for (
              var o = new h.default(r, t, n, i),
                l = a,
                c = Array.isArray(l),
                f = 0,
                l = c ? l : (0, u.default)(l);
              ;

            ) {
              var p;
              if (c) {
                if (f >= l.length) break;
                p = l[f++];
              } else {
                if (((f = l.next()), f.done)) break;
                p = f.value;
              }
              var d = p;
              if ((!s || !s[d]) && o.visit(e, d)) return;
            }
        }),
        (s.clearNode = function (e, t) {
          x.removeProperties(e, t), D.path.delete(e);
        }),
        (s.removeProperties = function (e, t) {
          return x.traverseFast(e, s.clearNode, t), e;
        }),
        (s.hasType = function (e, t, r, n) {
          if ((0, b.default)(n, e.type)) return !1;
          if (e.type === r) return !0;
          var i = { has: !1, type: r };
          return s(e, { blacklist: n, enter: a }, t, i), i.has;
        }),
        (s.clearCache = function () {
          D.clear();
        }),
        (s.clearCache.clearPath = D.clearPath),
        (s.clearCache.clearScope = D.clearScope),
        (s.copyCache = function (e, t) {
          D.path.has(e) && D.path.set(t, D.path.get(e));
        });
    },
    function (e, t, r) {
      var n = r(115)("wks"),
        i = r(75),
        s = r(13).Symbol,
        a = "function" == typeof s,
        o = (e.exports = function (e) {
          return n[e] || (n[e] = (a && s[e]) || (a ? s : i)("Symbol." + e));
        });
      o.store = n;
    },
    function (e, t) {
      function r(e) {
        var t = typeof e;
        return null != e && ("object" == t || "function" == t);
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return null != e && "object" == typeof e;
      }
      e.exports = r;
    },
    function (e, t) {
      function r() {
        throw new Error("setTimeout has not been defined");
      }
      function n() {
        throw new Error("clearTimeout has not been defined");
      }
      function i(e) {
        if (c === setTimeout) return setTimeout(e, 0);
        if ((c === r || !c) && setTimeout)
          return (c = setTimeout), setTimeout(e, 0);
        try {
          return c(e, 0);
        } catch (t) {
          try {
            return c.call(null, e, 0);
          } catch (t) {
            return c.call(this, e, 0);
          }
        }
      }
      function s(e) {
        if (f === clearTimeout) return clearTimeout(e);
        if ((f === n || !f) && clearTimeout)
          return (f = clearTimeout), clearTimeout(e);
        try {
          return f(e);
        } catch (t) {
          try {
            return f.call(null, e);
          } catch (t) {
            return f.call(this, e);
          }
        }
      }
      function a() {
        m &&
          h &&
          ((m = !1), h.length ? (d = h.concat(d)) : (v = -1), d.length && o());
      }
      function o() {
        if (!m) {
          var e = i(a);
          m = !0;
          for (var t = d.length; t; ) {
            for (h = d, d = []; ++v < t; ) h && h[v].run();
            (v = -1), (t = d.length);
          }
          (h = null), (m = !1), s(e);
        }
      }
      function u(e, t) {
        (this.fun = e), (this.array = t);
      }
      function l() {}
      var c,
        f,
        p = (e.exports = {});
      !(function () {
        try {
          c = "function" == typeof setTimeout ? setTimeout : r;
        } catch (e) {
          c = r;
        }
        try {
          f = "function" == typeof clearTimeout ? clearTimeout : n;
        } catch (e) {
          f = n;
        }
      })();
      var h,
        d = [],
        m = !1,
        v = -1;
      (p.nextTick = function (e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
        d.push(new u(e, t)), 1 !== d.length || m || i(o);
      }),
        (u.prototype.run = function () {
          this.fun.apply(null, this.array);
        }),
        (p.title = "browser"),
        (p.browser = !0),
        (p.env = {}),
        (p.argv = []),
        (p.version = ""),
        (p.versions = {}),
        (p.on = l),
        (p.addListener = l),
        (p.once = l),
        (p.off = l),
        (p.removeListener = l),
        (p.removeAllListeners = l),
        (p.emit = l),
        (p.binding = function (e) {
          throw new Error("process.binding is not supported");
        }),
        (p.cwd = function () {
          return "/";
        }),
        (p.chdir = function (e) {
          throw new Error("process.chdir is not supported");
        }),
        (p.umask = function () {
          return 0;
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        e = (0, l.default)(e);
        var r = e,
          n = r.program;
        return (
          t.length && (0, m.default)(e, A, null, t),
          n.body.length > 1 ? n.body : n.body[0]
        );
      }
      t.__esModule = !0;
      var a = r(34),
        o = i(a);
      t.default = function (e, t) {
        var r = void 0;
        try {
          throw new Error();
        } catch (e) {
          e.stack && (r = e.stack.split("\n").slice(1).join("\n"));
        }
        t = (0, f.default)(
          {
            allowReturnOutsideFunction: !0,
            allowSuperOutsideMethod: !0,
            preserveComments: !1,
          },
          t
        );
        var n = function () {
          var i = void 0;
          try {
            (i = y.parse(e, t)),
              (i = m.default.removeProperties(i, {
                preserveComments: t.preserveComments,
              })),
              m.default.cheap(i, function (e) {
                e[E] = !0;
              });
          } catch (e) {
            throw ((e.stack = e.stack + "from\n" + r), e);
          }
          return (
            (n = function () {
              return i;
            }),
            i
          );
        };
        return function () {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          return s(n(), t);
        };
      };
      var u = r(510),
        l = i(u),
        c = r(142),
        f = i(c),
        p = r(209),
        h = i(p),
        d = r(7),
        m = i(d),
        v = r(102),
        y = n(v),
        g = r(1),
        b = n(g),
        E = "_fromTemplate",
        x = (0, o.default)(),
        A = {
          noScope: !0,
          enter: function (e, t) {
            var r = e.node;
            if (r[x]) return e.skip();
            b.isExpressionStatement(r) && (r = r.expression);
            var n = void 0;
            if (b.isIdentifier(r) && r[E])
              if ((0, h.default)(t[0], r.name)) n = t[0][r.name];
              else if ("$" === r.name[0]) {
                var i = +r.name.slice(1);
                t[i] && (n = t[i]);
              }
            null === n && e.remove(), n && ((n[x] = !0), e.replaceInline(n));
          },
          exit: function (e) {
            var t = e.node;
            t.loc || m.default.clearNode(t);
          },
        };
      e.exports = t.default;
    },
    function (e, t) {
      var r = (e.exports =
        "undefined" != typeof window && window.Math == Math
          ? window
          : "undefined" != typeof self && self.Math == Math
          ? self
          : Function("return this")());
      "number" == typeof __g && (__g = r);
    },
    function (e, t, r) {
      function n(e) {
        return null == e
          ? void 0 === e
            ? u
            : o
          : ((e = Object(e)), l && l in e ? s(e) : a(e));
      }
      var i = r(42),
        s = r(467),
        a = r(493),
        o = "[object Null]",
        u = "[object Undefined]",
        l = i ? i.toStringTag : void 0;
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(197),
        i = "object" == typeof self && self && self.Object === Object && self,
        s = n || i || Function("return this")();
      e.exports = s;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        for (
          var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
          n < t;
          n++
        )
          r[n - 1] = arguments[n];
        var i = f[e];
        if (!i)
          throw new ReferenceError("Unknown message " + (0, u.default)(e));
        return (
          (r = a(r)),
          i.replace(/\$(\d+)/g, function (e, t) {
            return r[t - 1];
          })
        );
      }
      function a(e) {
        return e.map(function (e) {
          if (null != e && e.inspect) return e.inspect();
          try {
            return (0, u.default)(e) || e + "";
          } catch (t) {
            return c.inspect(e);
          }
        });
      }
      (t.__esModule = !0), (t.MESSAGES = void 0);
      var o = r(32),
        u = i(o);
      (t.get = s), (t.parseArgs = a);
      var l = r(62),
        c = n(l),
        f = (t.MESSAGES = {
          tailCallReassignmentDeopt:
            "Function reference has been reassigned, so it will probably be dereferenced, therefore we can't optimise this with confidence",
          classesIllegalBareSuper: "Illegal use of bare super",
          classesIllegalSuperCall:
            "Direct super call is illegal in non-constructor, use super.$1() instead",
          scopeDuplicateDeclaration: "Duplicate declaration $1",
          settersNoRest: "Setters aren't allowed to have a rest",
          noAssignmentsInForHead: "No assignments allowed in for-in/of head",
          expectedMemberExpressionOrIdentifier:
            "Expected type MemberExpression or Identifier",
          invalidParentForThisNode:
            "We don't know how to handle this node within the current parent - please open an issue",
          readOnly: "$1 is read-only",
          unknownForHead: "Unknown node type $1 in ForStatement",
          didYouMean: "Did you mean $1?",
          codeGeneratorDeopt:
            "Note: The code generator has deoptimised the styling of $1 as it exceeds the max of $2.",
          missingTemplatesDirectory:
            "no templates directory - this is most likely the result of a broken `npm publish`. Please report to https://github.com/babel/babel/issues",
          unsupportedOutputType: "Unsupported output type $1",
          illegalMethodName: "Illegal method name $1",
          lostTrackNodePath:
            "We lost track of this node's position, likely because the AST was directly manipulated",
          modulesIllegalExportName: "Illegal export $1",
          modulesDuplicateDeclarations:
            "Duplicate module declarations with the same source but in different scopes",
          undeclaredVariable: "Reference to undeclared variable $1",
          undeclaredVariableType:
            "Referencing a type alias outside of a type annotation",
          undeclaredVariableSuggestion:
            "Reference to undeclared variable $1 - did you mean $2?",
          traverseNeedsParent:
            "You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a $1 node without passing scope and parentPath.",
          traverseVerifyRootFunction:
            "You passed `traverse()` a function when it expected a visitor object, are you sure you didn't mean `{ enter: Function }`?",
          traverseVerifyVisitorProperty:
            "You passed `traverse()` a visitor object with the property $1 that has the invalid property $2",
          traverseVerifyNodeType:
            "You gave us a visitor for the node type $1 but it's not a valid type",
          pluginNotObject:
            "Plugin $2 specified in $1 was expected to return an object when invoked but returned $3",
          pluginNotFunction:
            "Plugin $2 specified in $1 was expected to return a function but returned $3",
          pluginUnknown:
            "Unknown plugin $1 specified in $2 at $3, attempted to resolve relative to $4",
          pluginInvalidProperty:
            "Plugin $2 specified in $1 provided an invalid property of $3",
        });
    },
    function (e, t, r) {
      e.exports = { default: r(348), __esModule: !0 };
    },
    function (e, t, r) {
      var n = r(21);
      e.exports = function (e) {
        if (!n(e)) throw TypeError(e + " is not an object!");
        return e;
      };
    },
    function (e, t, r) {
      e.exports = !r(36)(function () {
        return (
          7 !=
          Object.defineProperty({}, "a", {
            get: function () {
              return 7;
            },
          }).a
        );
      });
    },
    function (e, t, r) {
      var n = r(13),
        i = r(4),
        s = r(53),
        a = r(28),
        o = "prototype",
        u = function (e, t, r) {
          var l,
            c,
            f,
            p = e & u.F,
            h = e & u.G,
            d = e & u.S,
            m = e & u.P,
            v = e & u.B,
            y = e & u.W,
            g = h ? i : i[t] || (i[t] = {}),
            b = g[o],
            E = h ? n : d ? n[t] : (n[t] || {})[o];
          h && (r = t);
          for (l in r)
            (c = !p && E && void 0 !== E[l]),
              (c && l in g) ||
                ((f = c ? E[l] : r[l]),
                (g[l] =
                  h && "function" != typeof E[l]
                    ? r[l]
                    : v && c
                    ? s(f, n)
                    : y && E[l] == f
                    ? (function (e) {
                        var t = function (t, r, n) {
                          if (this instanceof e) {
                            switch (arguments.length) {
                              case 0:
                                return new e();
                              case 1:
                                return new e(t);
                              case 2:
                                return new e(t, r);
                            }
                            return new e(t, r, n);
                          }
                          return e.apply(this, arguments);
                        };
                        return (t[o] = e[o]), t;
                      })(f)
                    : m && "function" == typeof f
                    ? s(Function.call, f)
                    : f),
                m &&
                  (((g.virtual || (g.virtual = {}))[l] = f),
                  e & u.R && b && !b[l] && a(b, l, f)));
        };
      (u.F = 1),
        (u.G = 2),
        (u.S = 4),
        (u.P = 8),
        (u.B = 16),
        (u.W = 32),
        (u.U = 64),
        (u.R = 128),
        (e.exports = u);
    },
    function (e, t) {
      e.exports = function (e) {
        return "object" == typeof e ? null !== e : "function" == typeof e;
      };
    },
    function (e, t, r) {
      var n = r(18),
        i = r(165),
        s = r(118),
        a = Object.defineProperty;
      t.f = r(19)
        ? Object.defineProperty
        : function (e, t, r) {
            if ((n(e), (t = s(t, !0)), n(r), i))
              try {
                return a(e, t, r);
              } catch (e) {}
            if ("get" in r || "set" in r)
              throw TypeError("Accessors not supported!");
            return "value" in r && (e[t] = r.value), e;
          };
    },
    function (e, t, r) {
      function n(e) {
        return null != e && s(e.length) && !i(e);
      }
      var i = r(92),
        s = r(143);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return a(e) ? i(e) : s(e);
      }
      var i = r(180),
        s = r(430),
        a = r(23);
      e.exports = n;
    },
    function (e, t, r) {
      (function (e) {
        function r(e, t) {
          for (var r = 0, n = e.length - 1; n >= 0; n--) {
            var i = e[n];
            "." === i
              ? e.splice(n, 1)
              : ".." === i
              ? (e.splice(n, 1), r++)
              : r && (e.splice(n, 1), r--);
          }
          if (t) for (; r--; r) e.unshift("..");
          return e;
        }
        function n(e, t) {
          if (e.filter) return e.filter(t);
          for (var r = [], n = 0; n < e.length; n++)
            t(e[n], n, e) && r.push(e[n]);
          return r;
        }
        var i = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
          s = function (e) {
            return i.exec(e).slice(1);
          };
        (t.resolve = function () {
          for (
            var t = "", i = !1, s = arguments.length - 1;
            s >= -1 && !i;
            s--
          ) {
            var a = s >= 0 ? arguments[s] : e.cwd();
            if ("string" != typeof a)
              throw new TypeError("Arguments to path.resolve must be strings");
            a && ((t = a + "/" + t), (i = "/" === a.charAt(0)));
          }
          return (
            (t = r(
              n(t.split("/"), function (e) {
                return !!e;
              }),
              !i
            ).join("/")),
            (i ? "/" : "") + t || "."
          );
        }),
          (t.normalize = function (e) {
            var i = t.isAbsolute(e),
              s = "/" === a(e, -1);
            return (
              (e = r(
                n(e.split("/"), function (e) {
                  return !!e;
                }),
                !i
              ).join("/")),
              e || i || (e = "."),
              e && s && (e += "/"),
              (i ? "/" : "") + e
            );
          }),
          (t.isAbsolute = function (e) {
            return "/" === e.charAt(0);
          }),
          (t.join = function () {
            var e = Array.prototype.slice.call(arguments, 0);
            return t.normalize(
              n(e, function (e, t) {
                if ("string" != typeof e)
                  throw new TypeError("Arguments to path.join must be strings");
                return e;
              }).join("/")
            );
          }),
          (t.relative = function (e, r) {
            function n(e) {
              for (var t = 0; t < e.length && "" === e[t]; t++);
              for (var r = e.length - 1; r >= 0 && "" === e[r]; r--);
              return t > r ? [] : e.slice(t, r - t + 1);
            }
            (e = t.resolve(e).substr(1)), (r = t.resolve(r).substr(1));
            for (
              var i = n(e.split("/")),
                s = n(r.split("/")),
                a = Math.min(i.length, s.length),
                o = a,
                u = 0;
              u < a;
              u++
            )
              if (i[u] !== s[u]) {
                o = u;
                break;
              }
            for (var l = [], u = o; u < i.length; u++) l.push("..");
            return (l = l.concat(s.slice(o))), l.join("/");
          }),
          (t.sep = "/"),
          (t.delimiter = ":"),
          (t.dirname = function (e) {
            var t = s(e),
              r = t[0],
              n = t[1];
            return r || n ? (n && (n = n.substr(0, n.length - 1)), r + n) : ".";
          }),
          (t.basename = function (e, t) {
            var r = s(e)[2];
            return (
              t &&
                r.substr(-1 * t.length) === t &&
                (r = r.substr(0, r.length - t.length)),
              r
            );
          }),
          (t.extname = function (e) {
            return s(e)[3];
          });
        var a =
          "b" === "ab".substr(-1)
            ? function (e, t, r) {
                return e.substr(t, r);
              }
            : function (e, t, r) {
                return t < 0 && (t = e.length + t), e.substr(t, r);
              };
      }.call(t, r(11)));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        return Array.isArray(e)
          ? "array"
          : null === e
          ? "null"
          : void 0 === e
          ? "undefined"
          : "undefined" == typeof e
          ? "undefined"
          : (0, g.default)(e);
      }
      function a(e) {
        function t(t, r, n) {
          if (Array.isArray(n))
            for (var i = 0; i < n.length; i++) e(t, r + "[" + i + "]", n[i]);
        }
        return (t.each = e), t;
      }
      function o() {
        function e(e, t, n) {
          if (r.indexOf(n) < 0)
            throw new TypeError(
              "Property " +
                t +
                " expected value to be one of " +
                (0, v.default)(r) +
                " but got " +
                (0, v.default)(n)
            );
        }
        for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
          r[n] = arguments[n];
        return (e.oneOf = r), e;
      }
      function u() {
        function e(e, t, n) {
          for (
            var i = !1,
              s = r,
              a = Array.isArray(s),
              o = 0,
              s = a ? s : (0, d.default)(s);
            ;

          ) {
            var u;
            if (a) {
              if (o >= s.length) break;
              u = s[o++];
            } else {
              if (((o = s.next()), o.done)) break;
              u = o.value;
            }
            var l = u;
            if (E.is(l, n)) {
              i = !0;
              break;
            }
          }
          if (!i)
            throw new TypeError(
              "Property " +
                t +
                " of " +
                e.type +
                " expected node to be of a type " +
                (0, v.default)(r) +
                " but instead got " +
                (0, v.default)(n && n.type)
            );
        }
        for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
          r[n] = arguments[n];
        return (e.oneOfNodeTypes = r), e;
      }
      function l() {
        function e(e, t, n) {
          for (
            var i = !1,
              a = r,
              o = Array.isArray(a),
              u = 0,
              a = o ? a : (0, d.default)(a);
            ;

          ) {
            var l;
            if (o) {
              if (u >= a.length) break;
              l = a[u++];
            } else {
              if (((u = a.next()), u.done)) break;
              l = u.value;
            }
            var c = l;
            if (s(n) === c || E.is(c, n)) {
              i = !0;
              break;
            }
          }
          if (!i)
            throw new TypeError(
              "Property " +
                t +
                " of " +
                e.type +
                " expected node to be of a type " +
                (0, v.default)(r) +
                " but instead got " +
                (0, v.default)(n && n.type)
            );
        }
        for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
          r[n] = arguments[n];
        return (e.oneOfNodeOrValueTypes = r), e;
      }
      function c(e) {
        function t(t, r, n) {
          var i = s(n) === e;
          if (!i)
            throw new TypeError(
              "Property " + r + " expected type of " + e + " but got " + s(n)
            );
        }
        return (t.type = e), t;
      }
      function f() {
        function e() {
          for (
            var e = r,
              t = Array.isArray(e),
              n = 0,
              e = t ? e : (0, d.default)(e);
            ;

          ) {
            var i;
            if (t) {
              if (n >= e.length) break;
              i = e[n++];
            } else {
              if (((n = e.next()), n.done)) break;
              i = n.value;
            }
            var s = i;
            s.apply(void 0, arguments);
          }
        }
        for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
          r[n] = arguments[n];
        return (e.chainOf = r), e;
      }
      function p(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          r = (t.inherits && _[t.inherits]) || {};
        (t.fields = t.fields || r.fields || {}),
          (t.visitor = t.visitor || r.visitor || []),
          (t.aliases = t.aliases || r.aliases || []),
          (t.builder = t.builder || r.builder || t.visitor || []),
          t.deprecatedAlias && (S[t.deprecatedAlias] = e);
        for (
          var n = t.visitor.concat(t.builder),
            i = Array.isArray(n),
            a = 0,
            n = i ? n : (0, d.default)(n);
          ;

        ) {
          var o;
          if (i) {
            if (a >= n.length) break;
            o = n[a++];
          } else {
            if (((a = n.next()), a.done)) break;
            o = a.value;
          }
          var u = o;
          t.fields[u] = t.fields[u] || {};
        }
        for (var l in t.fields) {
          var f = t.fields[l];
          t.builder.indexOf(l) === -1 && (f.optional = !0),
            void 0 === f.default
              ? (f.default = null)
              : f.validate || (f.validate = c(s(f.default)));
        }
        (x[e] = t.visitor),
          (C[e] = t.builder),
          (D[e] = t.fields),
          (A[e] = t.aliases),
          (_[e] = t);
      }
      (t.__esModule = !0),
        (t.DEPRECATED_KEYS = t.BUILDER_KEYS = t.NODE_FIELDS = t.ALIAS_KEYS = t.VISITOR_KEYS = void 0);
      var h = r(2),
        d = i(h),
        m = r(32),
        v = i(m),
        y = r(6),
        g = i(y);
      (t.assertEach = a),
        (t.assertOneOf = o),
        (t.assertNodeType = u),
        (t.assertNodeOrValueType = l),
        (t.assertValueType = c),
        (t.chain = f),
        (t.default = p);
      var b = r(1),
        E = n(b),
        x = (t.VISITOR_KEYS = {}),
        A = (t.ALIAS_KEYS = {}),
        D = (t.NODE_FIELDS = {}),
        C = (t.BUILDER_KEYS = {}),
        S = (t.DEPRECATED_KEYS = {}),
        _ = {};
    },
    function (e, t) {
      var r = {}.hasOwnProperty;
      e.exports = function (e, t) {
        return r.call(e, t);
      };
    },
    function (e, t, r) {
      var n = r(22),
        i = r(72);
      e.exports = r(19)
        ? function (e, t, r) {
            return n.f(e, t, i(1, r));
          }
        : function (e, t, r) {
            return (e[t] = r), e;
          };
    },
    function (e, t, r) {
      function n(e, t, r, n) {
        var a = !r;
        r || (r = {});
        for (var o = -1, u = t.length; ++o < u; ) {
          var l = t[o],
            c = n ? n(r[l], e[l], l, r, e) : void 0;
          void 0 === c && (c = e[l]), a ? s(r, l, c) : i(r, l, c);
        }
        return r;
      }
      var i = r(127),
        s = r(128);
      e.exports = n;
    },
    function (e, t) {
      "use strict";
      e.exports = {
        filename: {
          type: "filename",
          description:
            "filename to use when reading from stdin - this will be used in source-maps, errors etc",
          default: "unknown",
          shorthand: "f",
        },
        filenameRelative: { hidden: !0, type: "string" },
        inputSourceMap: { hidden: !0 },
        env: { hidden: !0, default: {} },
        mode: { description: "", hidden: !0 },
        retainLines: {
          type: "boolean",
          default: !1,
          description: "retain line numbers - will result in really ugly code",
        },
        highlightCode: {
          description:
            "enable/disable ANSI syntax highlighting of code frames (on by default)",
          type: "boolean",
          default: !0,
        },
        suppressDeprecationMessages: {
          type: "boolean",
          default: !1,
          hidden: !0,
        },
        presets: { type: "list", description: "", default: [] },
        plugins: { type: "list", default: [], description: "" },
        ignore: {
          type: "list",
          description: "list of glob paths to **not** compile",
          default: [],
        },
        only: {
          type: "list",
          description: "list of glob paths to **only** compile",
        },
        code: { hidden: !0, default: !0, type: "boolean" },
        metadata: { hidden: !0, default: !0, type: "boolean" },
        ast: { hidden: !0, default: !0, type: "boolean" },
        extends: { type: "string", hidden: !0 },
        comments: {
          type: "boolean",
          default: !0,
          description: "write comments to generated output (true by default)",
        },
        shouldPrintComment: {
          hidden: !0,
          description:
            "optional callback to control whether a comment should be inserted, when this is used the comments option is ignored",
        },
        wrapPluginVisitorMethod: {
          hidden: !0,
          description: "optional callback to wrap all visitor methods",
        },
        compact: {
          type: "booleanString",
          default: "auto",
          description:
            "do not include superfluous whitespace characters and line terminators [true|false|auto]",
        },
        minified: {
          type: "boolean",
          default: !1,
          description: "save as much bytes when printing [true|false]",
        },
        sourceMap: { alias: "sourceMaps", hidden: !0 },
        sourceMaps: {
          type: "booleanString",
          description: "[true|false|inline]",
          default: !1,
          shorthand: "s",
        },
        sourceMapTarget: {
          type: "string",
          description: "set `file` on returned source map",
        },
        sourceFileName: {
          type: "string",
          description: "set `sources[0]` on returned source map",
        },
        sourceRoot: {
          type: "filename",
          description: "the root from which all sources are relative",
        },
        babelrc: {
          description:
            "Whether or not to look up .babelrc and .babelignore files",
          type: "boolean",
          default: !0,
        },
        sourceType: { description: "", default: "module" },
        auxiliaryCommentBefore: {
          type: "string",
          description: "print a comment before any injected non-user code",
        },
        auxiliaryCommentAfter: {
          type: "string",
          description: "print a comment after any injected non-user code",
        },
        resolveModuleSource: { hidden: !0 },
        getModuleId: { hidden: !0 },
        moduleRoot: {
          type: "filename",
          description:
            "optional prefix for the AMD module formatter that will be prepend to the filename on module definitions",
        },
        moduleIds: {
          type: "boolean",
          default: !1,
          shorthand: "M",
          description: "insert an explicit id for modules",
        },
        moduleId: {
          description: "specify a custom name for module ids",
          type: "string",
        },
        passPerPreset: {
          description:
            "Whether to spawn a traversal pass per a preset. By default all presets are merged.",
          type: "boolean",
          default: !1,
          hidden: !0,
        },
        parserOpts: {
          description:
            "Options to pass into the parser, or to change parsers (parserOpts.parser)",
          default: !1,
        },
        generatorOpts: {
          description:
            "Options to pass into the generator, or to change generators (generatorOpts.generator)",
          default: !1,
        },
      };
    },
    function (e, t, r) {
      (function (n) {
        "use strict";
        function i(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
          return (t.default = e), t;
        }
        function s(e) {
          return e && e.__esModule ? e : { default: e };
        }
        t.__esModule = !0;
        var a = r(301),
          o = s(a),
          u = r(32),
          l = s(u),
          c = r(66),
          f = s(c),
          p = r(2),
          h = s(p),
          d = r(6),
          m = s(d),
          v = r(3),
          y = s(v),
          g = r(148),
          b = i(g),
          E = r(65),
          x = s(E),
          A = r(16),
          D = i(A),
          C = r(49),
          S = r(93),
          _ = s(S),
          w = r(511),
          F = s(w),
          k = r(87),
          P = s(k),
          T = r(227),
          O = s(T),
          B = r(30),
          I = s(B),
          N = r(51),
          M = s(N),
          R = r(48),
          L = s(R),
          j = r(25),
          V = s(j),
          U = (function () {
            function e(t) {
              (0, y.default)(this, e),
                (this.resolvedConfigs = []),
                (this.options = e.createBareOptions()),
                (this.log = t);
            }
            return (
              (e.memoisePluginContainer = function (t, r, n, i) {
                for (
                  var s = e.memoisedPlugins,
                    a = Array.isArray(s),
                    o = 0,
                    s = a ? s : (0, h.default)(s);
                  ;

                ) {
                  var u;
                  if (a) {
                    if (o >= s.length) break;
                    u = s[o++];
                  } else {
                    if (((o = s.next()), o.done)) break;
                    u = o.value;
                  }
                  var l = u;
                  if (l.container === t) return l.plugin;
                }
                var c = void 0;
                if (
                  ((c = "function" == typeof t ? t(b) : t),
                  "object" ===
                    ("undefined" == typeof c ? "undefined" : (0, m.default)(c)))
                ) {
                  var f = new x.default(c, i);
                  return e.memoisedPlugins.push({ container: t, plugin: f }), f;
                }
                throw new TypeError(
                  D.get(
                    "pluginNotObject",
                    r,
                    n,
                    "undefined" == typeof c ? "undefined" : (0, m.default)(c)
                  ) +
                    r +
                    n
                );
              }),
              (e.createBareOptions = function () {
                var e = {};
                for (var t in I.default) {
                  var r = I.default[t];
                  e[t] = (0, P.default)(r.default);
                }
                return e;
              }),
              (e.normalisePlugin = function (t, r, n, i) {
                if (
                  ((t = t.__esModule ? t.default : t),
                  !(t instanceof x.default))
                ) {
                  if (
                    "function" != typeof t &&
                    "object" !==
                      ("undefined" == typeof t
                        ? "undefined"
                        : (0, m.default)(t))
                  )
                    throw new TypeError(
                      D.get(
                        "pluginNotFunction",
                        r,
                        n,
                        "undefined" == typeof t
                          ? "undefined"
                          : (0, m.default)(t)
                      )
                    );
                  t = e.memoisePluginContainer(t, r, n, i);
                }
                return t.init(r, n), t;
              }),
              (e.normalisePlugins = function (t, n, i) {
                return i.map(function (i, s) {
                  var a = void 0,
                    o = void 0;
                  if (!i) throw new TypeError("Falsy value found in plugins");
                  Array.isArray(i) ? ((a = i[0]), (o = i[1])) : (a = i);
                  var u = "string" == typeof a ? a : t + "$" + s;
                  if ("string" == typeof a) {
                    var l =
                      (0, _.default)("babel-plugin-" + a, n) ||
                      (0, _.default)(a, n);
                    if (!l)
                      throw new ReferenceError(
                        D.get("pluginUnknown", a, t, s, n)
                      );
                    a = r(150)(l);
                  }
                  return (a = e.normalisePlugin(a, t, s, u)), [a, o];
                });
              }),
              (e.prototype.mergeOptions = function (t) {
                var r = this,
                  i = t.options,
                  s = t.extending,
                  a = t.alias,
                  o = t.loc,
                  u = t.dirname;
                if (((a = a || "foreign"), i)) {
                  ("object" !==
                    ("undefined" == typeof i
                      ? "undefined"
                      : (0, m.default)(i)) ||
                    Array.isArray(i)) &&
                    this.log.error("Invalid options type for " + a, TypeError);
                  var l = (0, F.default)(i, function (e) {
                    if (e instanceof x.default) return e;
                  });
                  (u = u || n.cwd()), (o = o || a);
                  for (var c in l) {
                    var p = I.default[c];
                    if (!p && this.log)
                      if (M.default[c])
                        this.log.error(
                          "Using removed Babel 5 option: " +
                            a +
                            "." +
                            c +
                            " - " +
                            M.default[c].message,
                          ReferenceError
                        );
                      else {
                        var h =
                            "Unknown option: " +
                            a +
                            "." +
                            c +
                            ". Check out http://babeljs.io/docs/usage/options/ for more information about options.",
                          d =
                            "A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\n\nInvalid:\n  `{ presets: [{option: value}] }`\nValid:\n  `{ presets: [['presetName', {option: value}]] }`\n\nFor more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options.";
                        this.log.error(h + "\n\n" + d, ReferenceError);
                      }
                  }
                  (0, C.normaliseOptions)(l),
                    l.plugins &&
                      (l.plugins = e.normalisePlugins(o, u, l.plugins)),
                    l.presets &&
                      (l.passPerPreset
                        ? (l.presets = this.resolvePresets(
                            l.presets,
                            u,
                            function (e, t) {
                              r.mergeOptions({
                                options: e,
                                extending: e,
                                alias: t,
                                loc: t,
                                dirname: u,
                              });
                            }
                          ))
                        : (this.mergePresets(l.presets, u), delete l.presets)),
                    i === s
                      ? (0, f.default)(s, l)
                      : (0, O.default)(s || this.options, l);
                }
              }),
              (e.prototype.mergePresets = function (e, t) {
                var r = this;
                this.resolvePresets(e, t, function (e, t) {
                  r.mergeOptions({
                    options: e,
                    alias: t,
                    loc: t,
                    dirname: V.default.dirname(t || ""),
                  });
                });
              }),
              (e.prototype.resolvePresets = function (e, t, n) {
                return e.map(function (e) {
                  var i = void 0;
                  if (Array.isArray(e)) {
                    if (e.length > 2)
                      throw new Error(
                        "Unexpected extra options " +
                          (0, l.default)(e.slice(2)) +
                          " passed to preset."
                      );
                    var s = e;
                    (e = s[0]), (i = s[1]);
                  }
                  var a = void 0;
                  try {
                    if ("string" == typeof e) {
                      if (
                        ((a =
                          (0, _.default)("babel-preset-" + e, t) ||
                          (0, _.default)(e, t)),
                        !a)
                      ) {
                        var u = e.match(/^(@[^\/]+)\/(.+)$/);
                        if (u) {
                          var c = u[1],
                            f = u[2];
                          (e = c + "/babel-preset-" + f),
                            (a = (0, _.default)(e, t));
                        }
                      }
                      if (!a)
                        throw new Error(
                          "Couldn't find preset " +
                            (0, l.default)(e) +
                            " relative to directory " +
                            (0, l.default)(t)
                        );
                      e = r(150)(a);
                    }
                    if (
                      "object" ===
                        ("undefined" == typeof e
                          ? "undefined"
                          : (0, m.default)(e)) &&
                      e.__esModule
                    )
                      if (e.default) e = e.default;
                      else {
                        var p = e,
                          h = (p.__esModule, (0, o.default)(p, ["__esModule"]));
                        e = h;
                      }
                    if (
                      ("object" ===
                        ("undefined" == typeof e
                          ? "undefined"
                          : (0, m.default)(e)) &&
                        e.buildPreset &&
                        (e = e.buildPreset),
                      "function" != typeof e && void 0 !== i)
                    )
                      throw new Error(
                        "Options " +
                          (0, l.default)(i) +
                          " passed to " +
                          (a || "a preset") +
                          " which does not accept options."
                      );
                    if (
                      ("function" == typeof e && (e = e(b, i)),
                      "object" !==
                        ("undefined" == typeof e
                          ? "undefined"
                          : (0, m.default)(e)))
                    )
                      throw new Error("Unsupported preset format: " + e + ".");
                    n && n(e, a);
                  } catch (e) {
                    throw (
                      (a &&
                        (e.message +=
                          " (While processing preset: " +
                          (0, l.default)(a) +
                          ")"),
                      e)
                    );
                  }
                  return e;
                });
              }),
              (e.prototype.normaliseOptions = function () {
                var e = this.options;
                for (var t in I.default) {
                  var r = I.default[t],
                    n = e[t];
                  (!n && r.optional) ||
                    (r.alias ? (e[r.alias] = e[r.alias] || n) : (e[t] = n));
                }
              }),
              (e.prototype.init = function () {
                for (
                  var e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : {},
                    t = (0, L.default)(e, this.log),
                    r = Array.isArray(t),
                    n = 0,
                    t = r ? t : (0, h.default)(t);
                  ;

                ) {
                  var i;
                  if (r) {
                    if (n >= t.length) break;
                    i = t[n++];
                  } else {
                    if (((n = t.next()), n.done)) break;
                    i = n.value;
                  }
                  var s = i;
                  this.mergeOptions(s);
                }
                return this.normaliseOptions(e), this.options;
              }),
              e
            );
          })();
        (t.default = U), (U.memoisedPlugins = []), (e.exports = t.default);
      }.call(t, r(11)));
    },
    function (e, t, r) {
      e.exports = { default: r(342), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(346), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(351), __esModule: !0 };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s),
        o = r(3),
        u = i(o),
        l = r(159),
        c = n(l),
        f = r(390),
        p = i(f),
        h = r(397),
        d = i(h),
        m = r(7),
        v = i(m),
        y = r(142),
        g = i(y),
        b = r(100),
        E = i(b),
        x = r(1),
        A = n(x),
        D = r(67),
        C = (0, p.default)("babel"),
        S = (function () {
          function e(t, r) {
            (0, u.default)(this, e),
              (this.parent = r),
              (this.hub = t),
              (this.contexts = []),
              (this.data = {}),
              (this.shouldSkip = !1),
              (this.shouldStop = !1),
              (this.removed = !1),
              (this.state = null),
              (this.opts = null),
              (this.skipKeys = null),
              (this.parentPath = null),
              (this.context = null),
              (this.container = null),
              (this.listKey = null),
              (this.inList = !1),
              (this.parentKey = null),
              (this.key = null),
              (this.node = null),
              (this.scope = null),
              (this.type = null),
              (this.typeAnnotation = null);
          }
          return (
            (e.get = function (t) {
              var r = t.hub,
                n = t.parentPath,
                i = t.parent,
                s = t.container,
                a = t.listKey,
                o = t.key;
              !r && n && (r = n.hub),
                (0, d.default)(
                  i,
                  "To get a node path the parent needs to exist"
                );
              var u = s[o],
                l = D.path.get(i) || [];
              D.path.has(i) || D.path.set(i, l);
              for (var c = void 0, f = 0; f < l.length; f++) {
                var p = l[f];
                if (p.node === u) {
                  c = p;
                  break;
                }
              }
              return (
                c || ((c = new e(r, i)), l.push(c)), c.setup(n, s, a, o), c
              );
            }),
            (e.prototype.getScope = function (e) {
              var t = e;
              return this.isScope() && (t = new E.default(this, e)), t;
            }),
            (e.prototype.setData = function (e, t) {
              return (this.data[e] = t);
            }),
            (e.prototype.getData = function (e, t) {
              var r = this.data[e];
              return !r && t && (r = this.data[e] = t), r;
            }),
            (e.prototype.buildCodeFrameError = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : SyntaxError;
              return this.hub.file.buildCodeFrameError(this.node, e, t);
            }),
            (e.prototype.traverse = function (e, t) {
              (0, v.default)(this.node, e, this.scope, t, this);
            }),
            (e.prototype.mark = function (e, t) {
              this.hub.file.metadata.marked.push({
                type: e,
                message: t,
                loc: this.node.loc,
              });
            }),
            (e.prototype.set = function (e, t) {
              A.validate(this.node, e, t), (this.node[e] = t);
            }),
            (e.prototype.getPathLocation = function () {
              var e = [],
                t = this;
              do {
                var r = t.key;
                t.inList && (r = t.listKey + "[" + r + "]"), e.unshift(r);
              } while ((t = t.parentPath));
              return e.join(".");
            }),
            (e.prototype.debug = function (e) {
              C.enabled &&
                C(this.getPathLocation() + " " + this.type + ": " + e());
            }),
            e
          );
        })();
      (t.default = S),
        (0, g.default)(S.prototype, r(303)),
        (0, g.default)(S.prototype, r(309)),
        (0, g.default)(S.prototype, r(317)),
        (0, g.default)(S.prototype, r(307)),
        (0, g.default)(S.prototype, r(306)),
        (0, g.default)(S.prototype, r(312)),
        (0, g.default)(S.prototype, r(305)),
        (0, g.default)(S.prototype, r(316)),
        (0, g.default)(S.prototype, r(315)),
        (0, g.default)(S.prototype, r(308)),
        (0, g.default)(S.prototype, r(304));
      for (
        var _ = function () {
            if (F) {
              if (k >= w.length) return "break";
              P = w[k++];
            } else {
              if (((k = w.next()), k.done)) return "break";
              P = k.value;
            }
            var e = P,
              t = "is" + e;
            (S.prototype[t] = function (e) {
              return A[t](this.node, e);
            }),
              (S.prototype["assert" + e] = function (r) {
                if (!this[t](r))
                  throw new TypeError("Expected node path of type " + e);
              });
          },
          w = A.TYPES,
          F = Array.isArray(w),
          k = 0,
          w = F ? w : (0, a.default)(w);
        ;

      ) {
        var P,
          T = _();
        if ("break" === T) break;
      }
      var O = function (e) {
        if ("_" === e[0]) return "continue";
        A.TYPES.indexOf(e) < 0 && A.TYPES.push(e);
        var t = c[e];
        S.prototype["is" + e] = function (e) {
          return t.checkPath(this, e);
        };
      };
      for (var B in c) {
        O(B);
      }
      e.exports = t.default;
    },
    function (e, t) {
      e.exports = function (e) {
        try {
          return !!e();
        } catch (e) {
          return !0;
        }
      };
    },
    function (e, t, r) {
      var n = r(108),
        i = r(68);
      e.exports = function (e) {
        return n(i(e));
      };
    },
    function (e, t, r) {
      function n(e, t) {
        var r = s(e, t);
        return i(r) ? r : void 0;
      }
      var i = r(427),
        s = r(468);
      e.exports = n;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(296),
        s = n(i),
        a = r(33),
        o = n(a),
        u = r(6),
        l = n(u);
      t.default = function (e, t) {
        if ("function" != typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              ("undefined" == typeof t ? "undefined" : (0, l.default)(t))
          );
        (e.prototype = (0, o.default)(t && t.prototype, {
          constructor: {
            value: e,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
          t && (s.default ? (0, s.default)(e, t) : (e.__proto__ = t));
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(6),
        s = n(i);
      t.default = function (e, t) {
        if (!e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return !t ||
          ("object" !==
            ("undefined" == typeof t ? "undefined" : (0, s.default)(t)) &&
            "function" != typeof t)
          ? e
          : t;
      };
    },
    function (e, t, r) {
      var n = r(171),
        i = r(107);
      e.exports =
        Object.keys ||
        function (e) {
          return n(e, i);
        };
    },
    function (e, t, r) {
      var n = r(15),
        i = n.Symbol;
      e.exports = i;
    },
    function (e, t) {
      function r(e, t) {
        return e === t || (e !== e && t !== t);
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return a(e) ? i(e, !0) : s(e);
      }
      var i = r(180),
        s = r(431),
        a = r(23);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = i(e),
          r = t % 1;
        return t === t ? (r ? t - r : t) : 0;
      }
      var i = r(532);
      e.exports = n;
    },
    function (e, t) {},
    function (e, t, r) {
      (function (e) {
        "use strict";
        function n(e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (null != e)
            for (var r in e)
              Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
          return (t.default = e), t;
        }
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        (t.__esModule = !0), (t.File = void 0);
        var s = r(6),
          a = i(s),
          o = r(2),
          u = i(o),
          l = r(33),
          c = i(l),
          f = r(66),
          p = i(f),
          h = r(3),
          d = i(h),
          m = r(40),
          v = i(m),
          y = r(39),
          g = i(y),
          b = r(155),
          E = i(b),
          x = r(96),
          A = n(x),
          D = r(340),
          C = i(D),
          S = r(31),
          _ = i(S),
          w = r(233),
          F = i(w),
          k = r(7),
          P = i(k),
          T = r(224),
          O = i(T),
          B = r(151),
          I = i(B),
          N = r(147),
          M = i(N),
          R = r(207),
          L = i(R),
          j = r(95),
          V = i(j),
          U = r(94),
          G = i(U),
          W = r(102),
          Y = r(97),
          q = n(Y),
          K = r(25),
          H = i(K),
          J = r(1),
          X = n(J),
          $ = r(93),
          z = i($),
          Q = r(230),
          Z = i(Q),
          ee = r(231),
          te = i(ee),
          re = /^#!.*/,
          ne = [[Z.default], [te.default]],
          ie = {
            enter: function (e, t) {
              var r = e.node.loc;
              r && ((t.loc = r), e.stop());
            },
          },
          se = (function (t) {
            function n() {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                r = arguments[1];
              (0, d.default)(this, n);
              var i = (0, v.default)(this, t.call(this));
              return (
                (i.pipeline = r),
                (i.log = new V.default(i, e.filename || "unknown")),
                (i.opts = i.initOptions(e)),
                (i.parserOpts = {
                  sourceType: i.opts.sourceType,
                  sourceFileName: i.opts.filename,
                  plugins: [],
                }),
                (i.pluginVisitors = []),
                (i.pluginPasses = []),
                i.buildPluginsForOptions(i.opts),
                i.opts.passPerPreset &&
                  ((i.perPresetOpts = []),
                  i.opts.presets.forEach(function (e) {
                    var t = (0, p.default)((0, c.default)(i.opts), e);
                    i.perPresetOpts.push(t), i.buildPluginsForOptions(t);
                  })),
                (i.metadata = {
                  usedHelpers: [],
                  marked: [],
                  modules: {
                    imports: [],
                    exports: { exported: [], specifiers: [] },
                  },
                }),
                (i.dynamicImportTypes = {}),
                (i.dynamicImportIds = {}),
                (i.dynamicImports = []),
                (i.declarations = {}),
                (i.usedHelpers = {}),
                (i.path = null),
                (i.ast = {}),
                (i.code = ""),
                (i.shebang = ""),
                (i.hub = new k.Hub(i)),
                i
              );
            }
            return (
              (0, g.default)(n, t),
              (n.prototype.getMetadata = function () {
                for (
                  var e = !1,
                    t = this.ast.program.body,
                    r = Array.isArray(t),
                    n = 0,
                    t = r ? t : (0, u.default)(t);
                  ;

                ) {
                  var i;
                  if (r) {
                    if (n >= t.length) break;
                    i = t[n++];
                  } else {
                    if (((n = t.next()), n.done)) break;
                    i = n.value;
                  }
                  var s = i;
                  if (X.isModuleDeclaration(s)) {
                    e = !0;
                    break;
                  }
                }
                e && this.path.traverse(A, this);
              }),
              (n.prototype.initOptions = function (e) {
                (e = new _.default(this.log, this.pipeline).init(e)),
                  e.inputSourceMap && (e.sourceMaps = !0),
                  e.moduleId && (e.moduleIds = !0),
                  (e.basename = H.default.basename(
                    e.filename,
                    H.default.extname(e.filename)
                  )),
                  (e.ignore = q.arrayify(e.ignore, q.regexify)),
                  e.only && (e.only = q.arrayify(e.only, q.regexify)),
                  (0, L.default)(e, { moduleRoot: e.sourceRoot }),
                  (0, L.default)(e, { sourceRoot: e.moduleRoot }),
                  (0, L.default)(e, { filenameRelative: e.filename });
                var t = H.default.basename(e.filenameRelative);
                return (
                  (0, L.default)(e, { sourceFileName: t, sourceMapTarget: t }),
                  e
                );
              }),
              (n.prototype.buildPluginsForOptions = function (e) {
                if (Array.isArray(e.plugins)) {
                  for (
                    var t = e.plugins.concat(ne),
                      r = [],
                      n = [],
                      i = t,
                      s = Array.isArray(i),
                      a = 0,
                      i = s ? i : (0, u.default)(i);
                    ;

                  ) {
                    var o;
                    if (s) {
                      if (a >= i.length) break;
                      o = i[a++];
                    } else {
                      if (((a = i.next()), a.done)) break;
                      o = a.value;
                    }
                    var l = o,
                      c = l[0],
                      f = l[1];
                    r.push(c.visitor),
                      n.push(new F.default(this, c, f)),
                      c.manipulateOptions &&
                        c.manipulateOptions(e, this.parserOpts, this);
                  }
                  this.pluginVisitors.push(r), this.pluginPasses.push(n);
                }
              }),
              (n.prototype.getModuleName = function () {
                var e = this.opts;
                if (!e.moduleIds) return null;
                if (null != e.moduleId && !e.getModuleId) return e.moduleId;
                var t = e.filenameRelative,
                  r = "";
                if (
                  (null != e.moduleRoot && (r = e.moduleRoot + "/"),
                  !e.filenameRelative)
                )
                  return r + e.filename.replace(/^\//, "");
                if (null != e.sourceRoot) {
                  var n = new RegExp("^" + e.sourceRoot + "/?");
                  t = t.replace(n, "");
                }
                return (
                  (t = t.replace(/\.(\w*?)$/, "")),
                  (r += t),
                  (r = r.replace(/\\/g, "/")),
                  e.getModuleId ? e.getModuleId(r) || r : r
                );
              }),
              (n.prototype.resolveModuleSource = function e(t) {
                var e = this.opts.resolveModuleSource;
                return e && (t = e(t, this.opts.filename)), t;
              }),
              (n.prototype.addImport = function (e, t) {
                var r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : t,
                  n = e + ":" + t,
                  i = this.dynamicImportIds[n];
                if (!i) {
                  (e = this.resolveModuleSource(e)),
                    (i = this.dynamicImportIds[
                      n
                    ] = this.scope.generateUidIdentifier(r));
                  var s = [];
                  "*" === t
                    ? s.push(X.importNamespaceSpecifier(i))
                    : "default" === t
                    ? s.push(X.importDefaultSpecifier(i))
                    : s.push(X.importSpecifier(i, X.identifier(t)));
                  var a = X.importDeclaration(s, X.stringLiteral(e));
                  (a._blockHoist = 3), this.path.unshiftContainer("body", a);
                }
                return i;
              }),
              (n.prototype.addHelper = function (e) {
                var t = this.declarations[e];
                if (t) return t;
                this.usedHelpers[e] ||
                  (this.metadata.usedHelpers.push(e),
                  (this.usedHelpers[e] = !0));
                var r = this.get("helperGenerator"),
                  n = this.get("helpersNamespace");
                if (r) {
                  var i = r(e);
                  if (i) return i;
                } else if (n) return X.memberExpression(n, X.identifier(e));
                var s = (0, E.default)(e),
                  a = (this.declarations[e] = this.scope.generateUidIdentifier(
                    e
                  ));
                return (
                  X.isFunctionExpression(s) && !s.id
                    ? ((s.body._compact = !0),
                      (s._generated = !0),
                      (s.id = a),
                      (s.type = "FunctionDeclaration"),
                      this.path.unshiftContainer("body", s))
                    : ((s._compact = !0),
                      this.scope.push({ id: a, init: s, unique: !0 })),
                  a
                );
              }),
              (n.prototype.addTemplateObject = function (e, t, r) {
                var n = r.elements.map(function (e) {
                    return e.value;
                  }),
                  i = e + "_" + r.elements.length + "_" + n.join(","),
                  s = this.declarations[i];
                if (s) return s;
                var a = (this.declarations[
                    i
                  ] = this.scope.generateUidIdentifier("templateObject")),
                  o = this.addHelper(e),
                  u = X.callExpression(o, [t, r]);
                return (
                  (u._compact = !0),
                  this.scope.push({ id: a, init: u, _blockHoist: 1.9 }),
                  a
                );
              }),
              (n.prototype.buildCodeFrameError = function (e, t) {
                var r =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : SyntaxError,
                  n = e && (e.loc || e._loc),
                  i = new r(t);
                return (
                  n
                    ? (i.loc = n.start)
                    : ((0, P.default)(e, ie, this.scope, i),
                      (i.message +=
                        " (This is an error on an internal node. Probably an internal error"),
                      i.loc && (i.message += ". Location has been estimated."),
                      (i.message += ")")),
                  i
                );
              }),
              (n.prototype.mergeSourceMap = function (e) {
                var t = this.opts.inputSourceMap;
                if (!t) return e;
                var r = (function () {
                  var r = new O.default.SourceMapConsumer(t),
                    n = new O.default.SourceMapConsumer(e),
                    i = new O.default.SourceMapGenerator({
                      file: r.file,
                      sourceRoot: r.sourceRoot,
                    }),
                    s = n.sources[0];
                  r.eachMapping(function (e) {
                    var t = n.generatedPositionFor({
                      line: e.generatedLine,
                      column: e.generatedColumn,
                      source: s,
                    });
                    null != t.column &&
                      i.addMapping({
                        source: e.source,
                        original:
                          null == e.source
                            ? null
                            : {
                                line: e.originalLine,
                                column: e.originalColumn,
                              },
                        generated: t,
                      });
                  });
                  var a = i.toJSON();
                  return (t.mappings = a.mappings), { v: t };
                })();
                return "object" ===
                  ("undefined" == typeof r ? "undefined" : (0, a.default)(r))
                  ? r.v
                  : void 0;
              }),
              (n.prototype.parse = function (t) {
                var n = W.parse,
                  i = this.opts.parserOpts;
                if (
                  i &&
                  ((i = (0, p.default)({}, this.parserOpts, i)), i.parser)
                ) {
                  if ("string" == typeof i.parser) {
                    var s = H.default.dirname(this.opts.filename) || e.cwd(),
                      a = (0, z.default)(i.parser, s);
                    if (!a)
                      throw new Error(
                        "Couldn't find parser " +
                          i.parser +
                          ' with "parse" method relative to directory ' +
                          s
                      );
                    n = r(149)(a).parse;
                  } else n = i.parser;
                  i.parser = {
                    parse: function (e) {
                      return (0, W.parse)(e, i);
                    },
                  };
                }
                this.log.debug("Parse start");
                var o = n(t, i || this.parserOpts);
                return this.log.debug("Parse stop"), o;
              }),
              (n.prototype._addAst = function (e) {
                (this.path = k.NodePath.get({
                  hub: this.hub,
                  parentPath: null,
                  parent: e,
                  container: e,
                  key: "program",
                }).setContext()),
                  (this.scope = this.path.scope),
                  (this.ast = e),
                  this.getMetadata();
              }),
              (n.prototype.addAst = function (e) {
                this.log.debug("Start set AST"),
                  this._addAst(e),
                  this.log.debug("End set AST");
              }),
              (n.prototype.transform = function () {
                for (var e = 0; e < this.pluginPasses.length; e++) {
                  var t = this.pluginPasses[e];
                  this.call("pre", t),
                    this.log.debug("Start transform traverse");
                  var r = P.default.visitors.merge(
                    this.pluginVisitors[e],
                    t,
                    this.opts.wrapPluginVisitorMethod
                  );
                  (0, P.default)(this.ast, r, this.scope),
                    this.log.debug("End transform traverse"),
                    this.call("post", t);
                }
                return this.generate();
              }),
              (n.prototype.wrap = function (t, r) {
                t += "";
                try {
                  return this.shouldIgnore()
                    ? this.makeResult({ code: t, ignored: !0 })
                    : r();
                } catch (r) {
                  if (r._babel) throw r;
                  r._babel = !0;
                  var n = (r.message = this.opts.filename + ": " + r.message),
                    i = r.loc;
                  if (
                    (i &&
                      ((r.codeFrame = (0, M.default)(
                        t,
                        i.line,
                        i.column + 1,
                        this.opts
                      )),
                      (n += "\n" + r.codeFrame)),
                    e.browser && (r.message = n),
                    r.stack)
                  ) {
                    var s = r.stack.replace(r.message, n);
                    r.stack = s;
                  }
                  throw r;
                }
              }),
              (n.prototype.addCode = function (e) {
                (e = (e || "") + ""),
                  (e = this.parseInputSourceMap(e)),
                  (this.code = e);
              }),
              (n.prototype.parseCode = function () {
                this.parseShebang();
                var e = this.parse(this.code);
                this.addAst(e);
              }),
              (n.prototype.shouldIgnore = function () {
                var e = this.opts;
                return q.shouldIgnore(e.filename, e.ignore, e.only);
              }),
              (n.prototype.call = function (e, t) {
                for (
                  var r = t,
                    n = Array.isArray(r),
                    i = 0,
                    r = n ? r : (0, u.default)(r);
                  ;

                ) {
                  var s;
                  if (n) {
                    if (i >= r.length) break;
                    s = r[i++];
                  } else {
                    if (((i = r.next()), i.done)) break;
                    s = i.value;
                  }
                  var a = s,
                    o = a.plugin,
                    l = o[e];
                  l && l.call(a, this);
                }
              }),
              (n.prototype.parseInputSourceMap = function (e) {
                var t = this.opts;
                if (t.inputSourceMap !== !1) {
                  var r = C.default.fromSource(e);
                  r &&
                    ((t.inputSourceMap = r.toObject()),
                    (e = C.default.removeComments(e)));
                }
                return e;
              }),
              (n.prototype.parseShebang = function () {
                var e = re.exec(this.code);
                e &&
                  ((this.shebang = e[0]),
                  (this.code = this.code.replace(re, "")));
              }),
              (n.prototype.makeResult = function (e) {
                var t = e.code,
                  r = e.map,
                  n = e.ast,
                  i = e.ignored,
                  s = {
                    metadata: null,
                    options: this.opts,
                    ignored: !!i,
                    code: null,
                    ast: null,
                    map: r || null,
                  };
                return (
                  this.opts.code && (s.code = t),
                  this.opts.ast && (s.ast = n),
                  this.opts.metadata && (s.metadata = this.metadata),
                  s
                );
              }),
              (n.prototype.generate = function () {
                var t = this.opts,
                  n = this.ast,
                  i = { ast: n };
                if (!t.code) return this.makeResult(i);
                var s = I.default;
                if (
                  t.generatorOpts.generator &&
                  ((s = t.generatorOpts.generator), "string" == typeof s)
                ) {
                  var a = H.default.dirname(this.opts.filename) || e.cwd(),
                    o = (0, z.default)(s, a);
                  if (!o)
                    throw new Error(
                      "Couldn't find generator " +
                        s +
                        ' with "print" method relative to directory ' +
                        a
                    );
                  s = r(149)(o).print;
                }
                this.log.debug("Generation start");
                var u = s(
                  n,
                  t.generatorOpts ? (0, p.default)(t, t.generatorOpts) : t,
                  this.code
                );
                return (
                  (i.code = u.code),
                  (i.map = u.map),
                  this.log.debug("Generation end"),
                  this.shebang && (i.code = this.shebang + "\n" + i.code),
                  i.map && (i.map = this.mergeSourceMap(i.map)),
                  ("inline" !== t.sourceMaps && "both" !== t.sourceMaps) ||
                    (i.code += "\n" + C.default.fromObject(i.map).toComment()),
                  "inline" === t.sourceMaps && (i.map = null),
                  this.makeResult(i)
                );
              }),
              n
            );
          })(G.default);
        (t.default = se), (t.File = se);
      }.call(t, r(11)));
    },
    function (e, t, r) {
      (function (n) {
        "use strict";
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function s(e) {
          var t = x[e];
          return null == t ? (x[e] = E.default.existsSync(e)) : t;
        }
        function a() {
          var e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            t = arguments[1],
            r = e.filename,
            n = new _(t);
          return (
            e.babelrc !== !1 && n.findConfigs(r),
            n.mergeConfig({
              options: e,
              alias: "base",
              dirname: r && g.default.dirname(r),
            }),
            n.configs
          );
        }
        t.__esModule = !0;
        var o = r(66),
          u = i(o),
          l = r(3),
          c = i(l);
        t.default = a;
        var f = r(93),
          p = i(f),
          h = r(403),
          d = i(h),
          m = r(540),
          v = i(m),
          y = r(25),
          g = i(y),
          b = r(46),
          E = i(b),
          x = {},
          A = {},
          D = ".babelignore",
          C = ".babelrc",
          S = "package.json",
          _ = (function () {
            function e(t) {
              (0, c.default)(this, e),
                (this.resolvedConfigs = []),
                (this.configs = []),
                (this.log = t);
            }
            return (
              (e.prototype.findConfigs = function (e) {
                if (e) {
                  (0, v.default)(e) || (e = g.default.join(n.cwd(), e));
                  for (var t = !1, r = !1; e !== (e = g.default.dirname(e)); ) {
                    if (!t) {
                      var i = g.default.join(e, C);
                      s(i) && (this.addConfig(i), (t = !0));
                      var a = g.default.join(e, S);
                      !t && s(a) && (t = this.addConfig(a, "babel", JSON));
                    }
                    if (!r) {
                      var o = g.default.join(e, D);
                      s(o) && (this.addIgnoreConfig(o), (r = !0));
                    }
                    if (r && t) return;
                  }
                }
              }),
              (e.prototype.addIgnoreConfig = function (e) {
                var t = E.default.readFileSync(e, "utf8"),
                  r = t.split("\n");
                (r = r
                  .map(function (e) {
                    return e.replace(/#(.*?)$/, "").trim();
                  })
                  .filter(function (e) {
                    return !!e;
                  })),
                  r.length &&
                    this.mergeConfig({
                      options: { ignore: r },
                      alias: e,
                      dirname: g.default.dirname(e),
                    });
              }),
              (e.prototype.addConfig = function (e, t) {
                var r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : d.default;
                if (this.resolvedConfigs.indexOf(e) >= 0) return !1;
                this.resolvedConfigs.push(e);
                var n = E.default.readFileSync(e, "utf8"),
                  i = void 0;
                try {
                  (i = A[n] = A[n] || r.parse(n)), t && (i = i[t]);
                } catch (t) {
                  throw (
                    ((t.message =
                      e + ": Error while parsing JSON - " + t.message),
                    t)
                  );
                }
                return (
                  this.mergeConfig({
                    options: i,
                    alias: e,
                    dirname: g.default.dirname(e),
                  }),
                  !!i
                );
              }),
              (e.prototype.mergeConfig = function (e) {
                var t = e.options,
                  r = e.alias,
                  i = e.loc,
                  s = e.dirname;
                if (!t) return !1;
                if (
                  ((t = (0, u.default)({}, t)),
                  (s = s || n.cwd()),
                  (i = i || r),
                  t.extends)
                ) {
                  var a = (0, p.default)(t.extends, s);
                  a
                    ? this.addConfig(a)
                    : this.log &&
                      this.log.error(
                        "Couldn't resolve extends clause of " +
                          t.extends +
                          " in " +
                          r
                      ),
                    delete t.extends;
                }
                this.configs.push({ options: t, alias: r, loc: i, dirname: s });
                var o = void 0,
                  l = n.env.BABEL_ENV || "production" || "development";
                t.env && ((o = t.env[l]), delete t.env),
                  this.mergeConfig({
                    options: o,
                    alias: r + ".env." + l,
                    dirname: s,
                  });
              }),
              e
            );
          })();
        e.exports = t.default;
      }.call(t, r(11)));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function s() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        for (var t in e) {
          var r = e[t];
          if (null != r) {
            var n = l.default[t];
            if ((n && n.alias && (n = l.default[n.alias]), n)) {
              var i = o[n.type];
              i && (r = i(r)), (e[t] = r);
            }
          }
        }
        return e;
      }
      (t.__esModule = !0), (t.config = void 0), (t.normaliseOptions = s);
      var a = r(50),
        o = i(a),
        u = r(30),
        l = n(u);
      t.config = l.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        return !!e;
      }
      function a(e) {
        return f.booleanify(e);
      }
      function o(e) {
        return f.list(e);
      }
      (t.__esModule = !0),
        (t.filename = void 0),
        (t.boolean = s),
        (t.booleanString = a),
        (t.list = o);
      var u = r(220),
        l = i(u),
        c = r(97),
        f = n(c);
      t.filename = l.default;
    },
    function (e, t) {
      "use strict";
      e.exports = {
        auxiliaryComment: {
          message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`",
        },
        blacklist: {
          message:
            "Put the specific transforms you want in the `plugins` option",
        },
        breakConfig: { message: "This is not a necessary option in Babel 6" },
        experimental: {
          message:
            "Put the specific transforms you want in the `plugins` option",
        },
        externalHelpers: {
          message:
            "Use the `external-helpers` plugin instead. Check out http://babeljs.io/docs/plugins/external-helpers/",
        },
        extra: { message: "" },
        jsxPragma: {
          message:
            "use the `pragma` option in the `react-jsx` plugin . Check out http://babeljs.io/docs/plugins/transform-react-jsx/",
        },
        loose: {
          message:
            "Specify the `loose` option for the relevant plugin you are using or use a preset that sets the option.",
        },
        metadataUsedHelpers: {
          message: "Not required anymore as this is enabled by default",
        },
        modules: {
          message:
            "Use the corresponding module transform plugin in the `plugins` option. Check out http://babeljs.io/docs/plugins/#modules",
        },
        nonStandard: {
          message:
            "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. Also check out the react preset http://babeljs.io/docs/plugins/preset-react/",
        },
        optional: {
          message:
            "Put the specific transforms you want in the `plugins` option",
        },
        sourceMapName: { message: "Use the `sourceMapTarget` option" },
        stage: {
          message:
            "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets",
        },
        whitelist: {
          message:
            "Put the specific transforms you want in the `plugins` option",
        },
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t, r, n) {
        if (e.selfReference) {
          if (!n.hasBinding(r.name) || n.hasGlobal(r.name)) {
            if (!p.isFunction(t)) return;
            var i = h;
            t.generator && (i = d);
            var s = i({
              FUNCTION: t,
              FUNCTION_ID: r,
              FUNCTION_KEY: n.generateUidIdentifier(r.name),
            }).expression;
            s.callee._skipModulesRemap = !0;
            for (
              var a = s.callee.body.body[0].params,
                o = 0,
                l = (0, u.default)(t);
              o < l;
              o++
            )
              a.push(n.generateUidIdentifier("x"));
            return s;
          }
          n.rename(r.name);
        }
        (t.id = r), (n.getProgramParent().references[r.name] = !0);
      }
      function a(e, t, r) {
        var n = {
            selfAssignment: !1,
            selfReference: !1,
            outerDeclar: r.getBindingIdentifier(t),
            references: [],
            name: t,
          },
          i = r.getOwnBinding(t);
        return (
          i
            ? "param" === i.kind && (n.selfReference = !0)
            : (n.outerDeclar || r.hasGlobal(t)) && r.traverse(e, m, n),
          n
        );
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          var t = e.node,
            r = e.parent,
            n = e.scope,
            i = e.id;
          if (!t.id) {
            if (
              (!p.isObjectProperty(r) &&
                !p.isObjectMethod(r, { kind: "method" })) ||
              (r.computed && !p.isLiteral(r.key))
            ) {
              if (p.isVariableDeclarator(r)) {
                if (((i = r.id), p.isIdentifier(i))) {
                  var o = n.parent.getBinding(i.name);
                  if (o && o.constant && n.getBinding(i.name) === o)
                    return (t.id = i), void (t.id[p.NOT_LOCAL_BINDING] = !0);
                }
              } else if (p.isAssignmentExpression(r)) i = r.left;
              else if (!i) return;
            } else i = r.key;
            var u = void 0;
            if (i && p.isLiteral(i)) u = i.value;
            else {
              if (!i || !p.isIdentifier(i)) return;
              u = i.name;
            }
            (u = p.toBindingIdentifierName(u)),
              (i = p.identifier(u)),
              (i[p.NOT_LOCAL_BINDING] = !0);
            var l = a(t, u, n);
            return s(l, t, i, n) || t;
          }
        });
      var o = r(153),
        u = i(o),
        l = r(12),
        c = i(l),
        f = r(1),
        p = n(f),
        h = (0, c.default)(
          "\n  (function (FUNCTION_KEY) {\n    function FUNCTION_ID() {\n      return FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    }\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"
        ),
        d = (0, c.default)(
          "\n  (function (FUNCTION_KEY) {\n    function* FUNCTION_ID() {\n      return yield* FUNCTION_KEY.apply(this, arguments);\n    }\n\n    FUNCTION_ID.toString = function () {\n      return FUNCTION_KEY.toString();\n    };\n\n    return FUNCTION_ID;\n  })(FUNCTION)\n"
        ),
        m = {
          "ReferencedIdentifier|BindingIdentifier": function (e, t) {
            if (e.node.name === t.name) {
              var r = e.scope.getBindingIdentifier(t.name);
              r === t.outerDeclar && ((t.selfReference = !0), e.stop());
            }
          },
        };
      e.exports = t.default;
    },
    function (e, t, r) {
      var n = r(355);
      e.exports = function (e, t, r) {
        if ((n(e), void 0 === t)) return e;
        switch (r) {
          case 1:
            return function (r) {
              return e.call(t, r);
            };
          case 2:
            return function (r, n) {
              return e.call(t, r, n);
            };
          case 3:
            return function (r, n, i) {
              return e.call(t, r, n, i);
            };
        }
        return function () {
          return e.apply(t, arguments);
        };
      };
    },
    function (e, t) {
      e.exports = {};
    },
    function (e, t, r) {
      var n = r(75)("meta"),
        i = r(21),
        s = r(27),
        a = r(22).f,
        o = 0,
        u =
          Object.isExtensible ||
          function () {
            return !0;
          },
        l = !r(36)(function () {
          return u(Object.preventExtensions({}));
        }),
        c = function (e) {
          a(e, n, { value: { i: "O" + ++o, w: {} } });
        },
        f = function (e, t) {
          if (!i(e))
            return "symbol" == typeof e
              ? e
              : ("string" == typeof e ? "S" : "P") + e;
          if (!s(e, n)) {
            if (!u(e)) return "F";
            if (!t) return "E";
            c(e);
          }
          return e[n].i;
        },
        p = function (e, t) {
          if (!s(e, n)) {
            if (!u(e)) return !0;
            if (!t) return !1;
            c(e);
          }
          return e[n].w;
        },
        h = function (e) {
          return l && d.NEED && u(e) && !s(e, n) && c(e), e;
        },
        d = (e.exports = {
          KEY: n,
          NEED: !1,
          fastKey: f,
          getWeak: p,
          onFreeze: h,
        });
    },
    function (e, t, r) {
      r(378);
      for (
        var n = r(13),
          i = r(28),
          s = r(54),
          a = r(8)("toStringTag"),
          o = [
            "NodeList",
            "DOMTokenList",
            "MediaList",
            "StyleSheetList",
            "CSSRuleList",
          ],
          u = 0;
        u < 5;
        u++
      ) {
        var l = o[u],
          c = n[l],
          f = c && c.prototype;
        f && !f[a] && i(f, a, l), (s[l] = s.Array);
      }
    },
    function (e, t, r) {
      function n(e) {
        return "function" == typeof e
          ? e
          : null == e
          ? a
          : "object" == typeof e
          ? o(e)
            ? s(e[0], e[1])
            : i(e)
          : u(e);
      }
      var i = r(432),
        s = r(433),
        a = r(58),
        o = r(5),
        u = r(528);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return "symbol" == typeof e || (s(e) && i(e) == a);
      }
      var i = r(14),
        s = r(10),
        a = "[object Symbol]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return null == e ? "" : i(e);
      }
      var i = r(133);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t, r) {
        if (t in e) return e[t];
        if (3 === arguments.length) return r;
        throw new Error('"' + t + '" is a required argument.');
      }
      function n(e) {
        var t = e.match(v);
        return t
          ? { scheme: t[1], auth: t[2], host: t[3], port: t[4], path: t[5] }
          : null;
      }
      function i(e) {
        var t = "";
        return (
          e.scheme && (t += e.scheme + ":"),
          (t += "//"),
          e.auth && (t += e.auth + "@"),
          e.host && (t += e.host),
          e.port && (t += ":" + e.port),
          e.path && (t += e.path),
          t
        );
      }
      function s(e) {
        var r = e,
          s = n(e);
        if (s) {
          if (!s.path) return e;
          r = s.path;
        }
        for (
          var a,
            o = t.isAbsolute(r),
            u = r.split(/\/+/),
            l = 0,
            c = u.length - 1;
          c >= 0;
          c--
        )
          (a = u[c]),
            "." === a
              ? u.splice(c, 1)
              : ".." === a
              ? l++
              : l > 0 &&
                ("" === a
                  ? (u.splice(c + 1, l), (l = 0))
                  : (u.splice(c, 2), l--));
        return (
          (r = u.join("/")),
          "" === r && (r = o ? "/" : "."),
          s ? ((s.path = r), i(s)) : r
        );
      }
      function a(e, t) {
        "" === e && (e = "."), "" === t && (t = ".");
        var r = n(t),
          a = n(e);
        if ((a && (e = a.path || "/"), r && !r.scheme))
          return a && (r.scheme = a.scheme), i(r);
        if (r || t.match(y)) return t;
        if (a && !a.host && !a.path) return (a.host = t), i(a);
        var o = "/" === t.charAt(0) ? t : s(e.replace(/\/+$/, "") + "/" + t);
        return a ? ((a.path = o), i(a)) : o;
      }
      function o(e, t) {
        "" === e && (e = "."), (e = e.replace(/\/$/, ""));
        for (var r = 0; 0 !== t.indexOf(e + "/"); ) {
          var n = e.lastIndexOf("/");
          if (n < 0) return t;
          if (((e = e.slice(0, n)), e.match(/^([^\/]+:\/)?\/*$/))) return t;
          ++r;
        }
        return Array(r + 1).join("../") + t.substr(e.length + 1);
      }
      function u(e) {
        return e;
      }
      function l(e) {
        return f(e) ? "$" + e : e;
      }
      function c(e) {
        return f(e) ? e.slice(1) : e;
      }
      function f(e) {
        if (!e) return !1;
        var t = e.length;
        if (t < 9) return !1;
        if (
          95 !== e.charCodeAt(t - 1) ||
          95 !== e.charCodeAt(t - 2) ||
          111 !== e.charCodeAt(t - 3) ||
          116 !== e.charCodeAt(t - 4) ||
          111 !== e.charCodeAt(t - 5) ||
          114 !== e.charCodeAt(t - 6) ||
          112 !== e.charCodeAt(t - 7) ||
          95 !== e.charCodeAt(t - 8) ||
          95 !== e.charCodeAt(t - 9)
        )
          return !1;
        for (var r = t - 10; r >= 0; r--) if (36 !== e.charCodeAt(r)) return !1;
        return !0;
      }
      function p(e, t, r) {
        var n = e.source - t.source;
        return 0 !== n
          ? n
          : ((n = e.originalLine - t.originalLine),
            0 !== n
              ? n
              : ((n = e.originalColumn - t.originalColumn),
                0 !== n || r
                  ? n
                  : ((n = e.generatedColumn - t.generatedColumn),
                    0 !== n
                      ? n
                      : ((n = e.generatedLine - t.generatedLine),
                        0 !== n ? n : e.name - t.name))));
      }
      function h(e, t, r) {
        var n = e.generatedLine - t.generatedLine;
        return 0 !== n
          ? n
          : ((n = e.generatedColumn - t.generatedColumn),
            0 !== n || r
              ? n
              : ((n = e.source - t.source),
                0 !== n
                  ? n
                  : ((n = e.originalLine - t.originalLine),
                    0 !== n
                      ? n
                      : ((n = e.originalColumn - t.originalColumn),
                        0 !== n ? n : e.name - t.name))));
      }
      function d(e, t) {
        return e === t ? 0 : e > t ? 1 : -1;
      }
      function m(e, t) {
        var r = e.generatedLine - t.generatedLine;
        return 0 !== r
          ? r
          : ((r = e.generatedColumn - t.generatedColumn),
            0 !== r
              ? r
              : ((r = d(e.source, t.source)),
                0 !== r
                  ? r
                  : ((r = e.originalLine - t.originalLine),
                    0 !== r
                      ? r
                      : ((r = e.originalColumn - t.originalColumn),
                        0 !== r ? r : d(e.name, t.name)))));
      }
      t.getArg = r;
      var v = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,
        y = /^data:.+\,.+$/;
      (t.urlParse = n),
        (t.urlGenerate = i),
        (t.normalize = s),
        (t.join = a),
        (t.isAbsolute = function (e) {
          return "/" === e.charAt(0) || !!e.match(v);
        }),
        (t.relative = o);
      var g = (function () {
        var e = Object.create(null);
        return !("__proto__" in e);
      })();
      (t.toSetString = g ? u : l),
        (t.fromSetString = g ? u : c),
        (t.compareByOriginalPositions = p),
        (t.compareByGeneratedPositionsDeflated = h),
        (t.compareByGeneratedPositionsInflated = m);
    },
    function (e, t, r) {
      (function (e, n) {
        function i(e, r) {
          var n = { seen: [], stylize: a };
          return (
            arguments.length >= 3 && (n.depth = arguments[2]),
            arguments.length >= 4 && (n.colors = arguments[3]),
            m(r) ? (n.showHidden = r) : r && t._extend(n, r),
            x(n.showHidden) && (n.showHidden = !1),
            x(n.depth) && (n.depth = 2),
            x(n.colors) && (n.colors = !1),
            x(n.customInspect) && (n.customInspect = !0),
            n.colors && (n.stylize = s),
            u(n, e, n.depth)
          );
        }
        function s(e, t) {
          var r = i.styles[t];
          return r
            ? "[" + i.colors[r][0] + "m" + e + "[" + i.colors[r][1] + "m"
            : e;
        }
        function a(e, t) {
          return e;
        }
        function o(e) {
          var t = {};
          return (
            e.forEach(function (e, r) {
              t[e] = !0;
            }),
            t
          );
        }
        function u(e, r, n) {
          if (
            e.customInspect &&
            r &&
            _(r.inspect) &&
            r.inspect !== t.inspect &&
            (!r.constructor || r.constructor.prototype !== r)
          ) {
            var i = r.inspect(n, e);
            return b(i) || (i = u(e, i, n)), i;
          }
          var s = l(e, r);
          if (s) return s;
          var a = Object.keys(r),
            m = o(a);
          if (
            (e.showHidden && (a = Object.getOwnPropertyNames(r)),
            S(r) &&
              (a.indexOf("message") >= 0 || a.indexOf("description") >= 0))
          )
            return c(r);
          if (0 === a.length) {
            if (_(r)) {
              var v = r.name ? ": " + r.name : "";
              return e.stylize("[Function" + v + "]", "special");
            }
            if (A(r))
              return e.stylize(RegExp.prototype.toString.call(r), "regexp");
            if (C(r)) return e.stylize(Date.prototype.toString.call(r), "date");
            if (S(r)) return c(r);
          }
          var y = "",
            g = !1,
            E = ["{", "}"];
          if ((d(r) && ((g = !0), (E = ["[", "]"])), _(r))) {
            var x = r.name ? ": " + r.name : "";
            y = " [Function" + x + "]";
          }
          if (
            (A(r) && (y = " " + RegExp.prototype.toString.call(r)),
            C(r) && (y = " " + Date.prototype.toUTCString.call(r)),
            S(r) && (y = " " + c(r)),
            0 === a.length && (!g || 0 == r.length))
          )
            return E[0] + y + E[1];
          if (n < 0)
            return A(r)
              ? e.stylize(RegExp.prototype.toString.call(r), "regexp")
              : e.stylize("[Object]", "special");
          e.seen.push(r);
          var D;
          return (
            (D = g
              ? f(e, r, n, m, a)
              : a.map(function (t) {
                  return p(e, r, n, m, t, g);
                })),
            e.seen.pop(),
            h(D, y, E)
          );
        }
        function l(e, t) {
          if (x(t)) return e.stylize("undefined", "undefined");
          if (b(t)) {
            var r =
              "'" +
              JSON.stringify(t)
                .replace(/^"|"$/g, "")
                .replace(/'/g, "\\'")
                .replace(/\\"/g, '"') +
              "'";
            return e.stylize(r, "string");
          }
          return g(t)
            ? e.stylize("" + t, "number")
            : m(t)
            ? e.stylize("" + t, "boolean")
            : v(t)
            ? e.stylize("null", "null")
            : void 0;
        }
        function c(e) {
          return "[" + Error.prototype.toString.call(e) + "]";
        }
        function f(e, t, r, n, i) {
          for (var s = [], a = 0, o = t.length; a < o; ++a)
            k(t, String(a)) ? s.push(p(e, t, r, n, String(a), !0)) : s.push("");
          return (
            i.forEach(function (i) {
              i.match(/^\d+$/) || s.push(p(e, t, r, n, i, !0));
            }),
            s
          );
        }
        function p(e, t, r, n, i, s) {
          var a, o, l;
          if (
            ((l = Object.getOwnPropertyDescriptor(t, i) || { value: t[i] }),
            l.get
              ? (o = l.set
                  ? e.stylize("[Getter/Setter]", "special")
                  : e.stylize("[Getter]", "special"))
              : l.set && (o = e.stylize("[Setter]", "special")),
            k(n, i) || (a = "[" + i + "]"),
            o ||
              (e.seen.indexOf(l.value) < 0
                ? ((o = v(r) ? u(e, l.value, null) : u(e, l.value, r - 1)),
                  o.indexOf("\n") > -1 &&
                    (o = s
                      ? o
                          .split("\n")
                          .map(function (e) {
                            return "  " + e;
                          })
                          .join("\n")
                          .substr(2)
                      : "\n" +
                        o
                          .split("\n")
                          .map(function (e) {
                            return "   " + e;
                          })
                          .join("\n")))
                : (o = e.stylize("[Circular]", "special"))),
            x(a))
          ) {
            if (s && i.match(/^\d+$/)) return o;
            (a = JSON.stringify("" + i)),
              a.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)
                ? ((a = a.substr(1, a.length - 2)), (a = e.stylize(a, "name")))
                : ((a = a
                    .replace(/'/g, "\\'")
                    .replace(/\\"/g, '"')
                    .replace(/(^"|"$)/g, "'")),
                  (a = e.stylize(a, "string")));
          }
          return a + ": " + o;
        }
        function h(e, t, r) {
          var n = 0,
            i = e.reduce(function (e, t) {
              return (
                n++,
                t.indexOf("\n") >= 0 && n++,
                e + t.replace(/\u001b\[\d\d?m/g, "").length + 1
              );
            }, 0);
          return i > 60
            ? r[0] +
                ("" === t ? "" : t + "\n ") +
                " " +
                e.join(",\n  ") +
                " " +
                r[1]
            : r[0] + t + " " + e.join(", ") + " " + r[1];
        }
        function d(e) {
          return Array.isArray(e);
        }
        function m(e) {
          return "boolean" == typeof e;
        }
        function v(e) {
          return null === e;
        }
        function y(e) {
          return null == e;
        }
        function g(e) {
          return "number" == typeof e;
        }
        function b(e) {
          return "string" == typeof e;
        }
        function E(e) {
          return "symbol" == typeof e;
        }
        function x(e) {
          return void 0 === e;
        }
        function A(e) {
          return D(e) && "[object RegExp]" === F(e);
        }
        function D(e) {
          return "object" == typeof e && null !== e;
        }
        function C(e) {
          return D(e) && "[object Date]" === F(e);
        }
        function S(e) {
          return D(e) && ("[object Error]" === F(e) || e instanceof Error);
        }
        function _(e) {
          return "function" == typeof e;
        }
        function w(e) {
          return (
            null === e ||
            "boolean" == typeof e ||
            "number" == typeof e ||
            "string" == typeof e ||
            "symbol" == typeof e ||
            "undefined" == typeof e
          );
        }
        function F(e) {
          return Object.prototype.toString.call(e);
        }
        function k(e, t) {
          return Object.prototype.hasOwnProperty.call(e, t);
        }
        var P = /%[sdj%]/g;
        (t.format = function (e) {
          if (!b(e)) {
            for (var t = [], r = 0; r < arguments.length; r++)
              t.push(i(arguments[r]));
            return t.join(" ");
          }
          for (
            var r = 1,
              n = arguments,
              s = n.length,
              a = String(e).replace(P, function (e) {
                if ("%%" === e) return "%";
                if (r >= s) return e;
                switch (e) {
                  case "%s":
                    return String(n[r++]);
                  case "%d":
                    return Number(n[r++]);
                  case "%j":
                    try {
                      return JSON.stringify(n[r++]);
                    } catch (e) {
                      return "[Circular]";
                    }
                  default:
                    return e;
                }
              }),
              o = n[r];
            r < s;
            o = n[++r]
          )
            a += v(o) || !D(o) ? " " + o : " " + i(o);
          return a;
        }),
          (t.deprecate = function (r, i) {
            function s() {
              if (!a) {
                if (n.throwDeprecation) throw new Error(i);
                n.traceDeprecation, (a = !0);
              }
              return r.apply(this, arguments);
            }
            if (x(e.process))
              return function () {
                return t.deprecate(r, i).apply(this, arguments);
              };
            if (n.noDeprecation === !0) return r;
            var a = !1;
            return s;
          });
        var T,
          O = {};
        (t.debuglog = function (e) {
          if (
            (x(T) && (T = n.env.NODE_DEBUG || ""), (e = e.toUpperCase()), !O[e])
          )
            if (new RegExp("\\b" + e + "\\b", "i").test(T)) {
              n.pid;
              O[e] = function () {
                t.format.apply(t, arguments);
              };
            } else O[e] = function () {};
          return O[e];
        }),
          (t.inspect = i),
          (i.colors = {
            bold: [1, 22],
            italic: [3, 23],
            underline: [4, 24],
            inverse: [7, 27],
            white: [37, 39],
            grey: [90, 39],
            black: [30, 39],
            blue: [34, 39],
            cyan: [36, 39],
            green: [32, 39],
            magenta: [35, 39],
            red: [31, 39],
            yellow: [33, 39],
          }),
          (i.styles = {
            special: "cyan",
            number: "yellow",
            boolean: "yellow",
            undefined: "grey",
            null: "bold",
            string: "green",
            date: "magenta",
            regexp: "red",
          }),
          (t.isArray = d),
          (t.isBoolean = m),
          (t.isNull = v),
          (t.isNullOrUndefined = y),
          (t.isNumber = g),
          (t.isString = b),
          (t.isSymbol = E),
          (t.isUndefined = x),
          (t.isRegExp = A),
          (t.isObject = D),
          (t.isDate = C),
          (t.isError = S),
          (t.isFunction = _),
          (t.isPrimitive = w),
          (t.isBuffer = r(556));
        (t.log = function () {}),
          (t.inherits = r(555)),
          (t._extend = function (e, t) {
            if (!t || !D(t)) return e;
            for (var r = Object.keys(t), n = r.length; n--; ) e[r[n]] = t[r[n]];
            return e;
          });
      }.call(
        t,
        (function () {
          return this;
        })(),
        r(11)
      ));
    },
    function (e, t) {
      e.exports = function (e) {
        return (
          e.webpackPolyfill ||
            ((e.deprecate = function () {}),
            (e.paths = []),
            (e.children = []),
            (e.webpackPolyfill = 1)),
          e
        );
      };
    },
    function (e, t, r) {
      (function (t) {
        "use strict";
        function n(e, t) {
          if (e === t) return 0;
          for (
            var r = e.length, n = t.length, i = 0, s = Math.min(r, n);
            i < s;
            ++i
          )
            if (e[i] !== t[i]) {
              (r = e[i]), (n = t[i]);
              break;
            }
          return r < n ? -1 : n < r ? 1 : 0;
        }
        function i(e) {
          return t.Buffer && "function" == typeof t.Buffer.isBuffer
            ? t.Buffer.isBuffer(e)
            : !(null == e || !e._isBuffer);
        }
        function s(e) {
          return Object.prototype.toString.call(e);
        }
        function a(e) {
          return (
            !i(e) &&
            "function" == typeof t.ArrayBuffer &&
            ("function" == typeof ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : !!e &&
                (e instanceof DataView ||
                  !!(e.buffer && e.buffer instanceof ArrayBuffer)))
          );
        }
        function o(e) {
          if (E.isFunction(e)) {
            if (D) return e.name;
            var t = e.toString(),
              r = t.match(S);
            return r && r[1];
          }
        }
        function u(e, t) {
          return "string" == typeof e ? (e.length < t ? e : e.slice(0, t)) : e;
        }
        function l(e) {
          if (D || !E.isFunction(e)) return E.inspect(e);
          var t = o(e),
            r = t ? ": " + t : "";
          return "[Function" + r + "]";
        }
        function c(e) {
          return (
            u(l(e.actual), 128) + " " + e.operator + " " + u(l(e.expected), 128)
          );
        }
        function f(e, t, r, n, i) {
          throw new C.AssertionError({
            message: r,
            actual: e,
            expected: t,
            operator: n,
            stackStartFunction: i,
          });
        }
        function p(e, t) {
          e || f(e, !0, t, "==", C.ok);
        }
        function h(e, t, r, o) {
          if (e === t) return !0;
          if (i(e) && i(t)) return 0 === n(e, t);
          if (E.isDate(e) && E.isDate(t)) return e.getTime() === t.getTime();
          if (E.isRegExp(e) && E.isRegExp(t))
            return (
              e.source === t.source &&
              e.global === t.global &&
              e.multiline === t.multiline &&
              e.lastIndex === t.lastIndex &&
              e.ignoreCase === t.ignoreCase
            );
          if (
            (null !== e && "object" == typeof e) ||
            (null !== t && "object" == typeof t)
          ) {
            if (
              a(e) &&
              a(t) &&
              s(e) === s(t) &&
              !(e instanceof Float32Array || e instanceof Float64Array)
            )
              return (
                0 === n(new Uint8Array(e.buffer), new Uint8Array(t.buffer))
              );
            if (i(e) !== i(t)) return !1;
            o = o || { actual: [], expected: [] };
            var u = o.actual.indexOf(e);
            return (
              (u !== -1 && u === o.expected.indexOf(t)) ||
              (o.actual.push(e), o.expected.push(t), m(e, t, r, o))
            );
          }
          return r ? e === t : e == t;
        }
        function d(e) {
          return "[object Arguments]" == Object.prototype.toString.call(e);
        }
        function m(e, t, r, n) {
          if (null === e || void 0 === e || null === t || void 0 === t)
            return !1;
          if (E.isPrimitive(e) || E.isPrimitive(t)) return e === t;
          if (r && Object.getPrototypeOf(e) !== Object.getPrototypeOf(t))
            return !1;
          var i = d(e),
            s = d(t);
          if ((i && !s) || (!i && s)) return !1;
          if (i) return (e = A.call(e)), (t = A.call(t)), h(e, t, r);
          var a,
            o,
            u = _(e),
            l = _(t);
          if (u.length !== l.length) return !1;
          for (u.sort(), l.sort(), o = u.length - 1; o >= 0; o--)
            if (u[o] !== l[o]) return !1;
          for (o = u.length - 1; o >= 0; o--)
            if (((a = u[o]), !h(e[a], t[a], r, n))) return !1;
          return !0;
        }
        function v(e, t, r) {
          h(e, t, !0) && f(e, t, r, "notDeepStrictEqual", v);
        }
        function y(e, t) {
          if (!e || !t) return !1;
          if ("[object RegExp]" == Object.prototype.toString.call(t))
            return t.test(e);
          try {
            if (e instanceof t) return !0;
          } catch (e) {}
          return !Error.isPrototypeOf(t) && t.call({}, e) === !0;
        }
        function g(e) {
          var t;
          try {
            e();
          } catch (e) {
            t = e;
          }
          return t;
        }
        function b(e, t, r, n) {
          var i;
          if ("function" != typeof t)
            throw new TypeError('"block" argument must be a function');
          "string" == typeof r && ((n = r), (r = null)),
            (i = g(t)),
            (n =
              (r && r.name ? " (" + r.name + ")." : ".") + (n ? " " + n : ".")),
            e && !i && f(i, r, "Missing expected exception" + n);
          var s = "string" == typeof n,
            a = !e && E.isError(i),
            o = !e && i && !r;
          if (
            (((a && s && y(i, r)) || o) &&
              f(i, r, "Got unwanted exception" + n),
            (e && i && r && !y(i, r)) || (!e && i))
          )
            throw i;
        }
        var E = r(62),
          x = Object.prototype.hasOwnProperty,
          A = Array.prototype.slice,
          D = (function () {
            return "foo" === function () {}.name;
          })(),
          C = (e.exports = p),
          S = /\s*function\s+([^\(\s]*)\s*/;
        (C.AssertionError = function (e) {
          (this.name = "AssertionError"),
            (this.actual = e.actual),
            (this.expected = e.expected),
            (this.operator = e.operator),
            e.message
              ? ((this.message = e.message), (this.generatedMessage = !1))
              : ((this.message = c(this)), (this.generatedMessage = !0));
          var t = e.stackStartFunction || f;
          if (Error.captureStackTrace) Error.captureStackTrace(this, t);
          else {
            var r = new Error();
            if (r.stack) {
              var n = r.stack,
                i = o(t),
                s = n.indexOf("\n" + i);
              if (s >= 0) {
                var a = n.indexOf("\n", s + 1);
                n = n.substring(a + 1);
              }
              this.stack = n;
            }
          }
        }),
          E.inherits(C.AssertionError, Error),
          (C.fail = f),
          (C.ok = p),
          (C.equal = function (e, t, r) {
            e != t && f(e, t, r, "==", C.equal);
          }),
          (C.notEqual = function (e, t, r) {
            e == t && f(e, t, r, "!=", C.notEqual);
          }),
          (C.deepEqual = function (e, t, r) {
            h(e, t, !1) || f(e, t, r, "deepEqual", C.deepEqual);
          }),
          (C.deepStrictEqual = function (e, t, r) {
            h(e, t, !0) || f(e, t, r, "deepStrictEqual", C.deepStrictEqual);
          }),
          (C.notDeepEqual = function (e, t, r) {
            h(e, t, !1) && f(e, t, r, "notDeepEqual", C.notDeepEqual);
          }),
          (C.notDeepStrictEqual = v),
          (C.strictEqual = function (e, t, r) {
            e !== t && f(e, t, r, "===", C.strictEqual);
          }),
          (C.notStrictEqual = function (e, t, r) {
            e === t && f(e, t, r, "!==", C.notStrictEqual);
          }),
          (C.throws = function (e, t, r) {
            b(!0, e, t, r);
          }),
          (C.doesNotThrow = function (e, t, r) {
            b(!1, e, t, r);
          }),
          (C.ifError = function (e) {
            if (e) throw e;
          });
        var _ =
          Object.keys ||
          function (e) {
            var t = [];
            for (var r in e) x.call(e, r) && t.push(r);
            return t;
          };
      }.call(
        t,
        (function () {
          return this;
        })()
      ));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s),
        o = r(3),
        u = i(o),
        l = r(40),
        c = i(l),
        f = r(39),
        p = i(f),
        h = r(31),
        d = i(h),
        m = r(16),
        v = n(m),
        y = r(94),
        g = i(y),
        b = r(7),
        E = i(b),
        x = r(142),
        A = i(x),
        D = r(87),
        C = i(D),
        S = ["enter", "exit"],
        _ = (function (e) {
          function t(r, n) {
            (0, u.default)(this, t);
            var i = (0, c.default)(this, e.call(this));
            return (
              (i.initialized = !1),
              (i.raw = (0, A.default)({}, r)),
              (i.key = i.take("name") || n),
              (i.manipulateOptions = i.take("manipulateOptions")),
              (i.post = i.take("post")),
              (i.pre = i.take("pre")),
              (i.visitor = i.normaliseVisitor(
                (0, C.default)(i.take("visitor")) || {}
              )),
              i
            );
          }
          return (
            (0, p.default)(t, e),
            (t.prototype.take = function (e) {
              var t = this.raw[e];
              return delete this.raw[e], t;
            }),
            (t.prototype.chain = function (e, t) {
              if (!e[t]) return this[t];
              if (!this[t]) return e[t];
              var r = [e[t], this[t]];
              return function () {
                for (
                  var e = void 0, t = arguments.length, n = Array(t), i = 0;
                  i < t;
                  i++
                )
                  n[i] = arguments[i];
                for (
                  var s = r,
                    o = Array.isArray(s),
                    u = 0,
                    s = o ? s : (0, a.default)(s);
                  ;

                ) {
                  var l;
                  if (o) {
                    if (u >= s.length) break;
                    l = s[u++];
                  } else {
                    if (((u = s.next()), u.done)) break;
                    l = u.value;
                  }
                  var c = l;
                  if (c) {
                    var f = c.apply(this, n);
                    null != f && (e = f);
                  }
                }
                return e;
              };
            }),
            (t.prototype.maybeInherit = function (e) {
              var t = this.take("inherits");
              t &&
                ((t = d.default.normalisePlugin(t, e, "inherits")),
                (this.manipulateOptions = this.chain(t, "manipulateOptions")),
                (this.post = this.chain(t, "post")),
                (this.pre = this.chain(t, "pre")),
                (this.visitor = E.default.visitors.merge([
                  t.visitor,
                  this.visitor,
                ])));
            }),
            (t.prototype.init = function (e, t) {
              if (!this.initialized) {
                (this.initialized = !0), this.maybeInherit(e);
                for (var r in this.raw)
                  throw new Error(v.get("pluginInvalidProperty", e, t, r));
              }
            }),
            (t.prototype.normaliseVisitor = function (e) {
              for (
                var t = S,
                  r = Array.isArray(t),
                  n = 0,
                  t = r ? t : (0, a.default)(t);
                ;

              ) {
                var i;
                if (r) {
                  if (n >= t.length) break;
                  i = t[n++];
                } else {
                  if (((n = t.next()), n.done)) break;
                  i = n.value;
                }
                var s = i;
                if (e[s])
                  throw new Error(
                    "Plugins aren't allowed to specify catch-all enter/exit handlers. Please target individual nodes."
                  );
              }
              return E.default.explode(e), e;
            }),
            t
          );
        })(g.default);
      (t.default = _), (e.exports = t.default);
    },
    function (e, t, r) {
      e.exports = { default: r(345), __esModule: !0 };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i() {
        s(), a();
      }
      function s() {
        t.path = l = new u.default();
      }
      function a() {
        t.scope = c = new u.default();
      }
      (t.__esModule = !0), (t.scope = t.path = void 0);
      var o = r(299),
        u = n(o);
      (t.clear = i), (t.clearPath = s), (t.clearScope = a);
      var l = (t.path = new u.default()),
        c = (t.scope = new u.default());
    },
    function (e, t) {
      e.exports = function (e) {
        if (void 0 == e) throw TypeError("Can't call method on  " + e);
        return e;
      };
    },
    function (e, t, r) {
      var n = r(53),
        i = r(366),
        s = r(365),
        a = r(18),
        o = r(117),
        u = r(172),
        l = {},
        c = {},
        t = (e.exports = function (e, t, r, f, p) {
          var h,
            d,
            m,
            v,
            y = p
              ? function () {
                  return e;
                }
              : u(e),
            g = n(r, f, t ? 2 : 1),
            b = 0;
          if ("function" != typeof y) throw TypeError(e + " is not iterable!");
          if (s(y)) {
            for (h = o(e.length); h > b; b++)
              if (
                ((v = t ? g(a((d = e[b]))[0], d[1]) : g(e[b])),
                v === l || v === c)
              )
                return v;
          } else
            for (m = y.call(e); !(d = m.next()).done; )
              if (((v = i(m, g, d.value, t)), v === l || v === c)) return v;
        });
      (t.BREAK = l), (t.RETURN = c);
    },
    function (e, t, r) {
      var n = r(18),
        i = r(369),
        s = r(107),
        a = r(114)("IE_PROTO"),
        o = function () {},
        u = "prototype",
        l = function () {
          var e,
            t = r(164)("iframe"),
            n = s.length,
            i = "<",
            a = ">";
          for (
            t.style.display = "none",
              r(364).appendChild(t),
              t.src = "javascript:",
              e = t.contentWindow.document,
              e.open(),
              e.write(
                i + "script" + a + "document.F=Object" + i + "/script" + a
              ),
              e.close(),
              l = e.F;
            n--;

          )
            delete l[u][s[n]];
          return l();
        };
      e.exports =
        Object.create ||
        function (e, t) {
          var r;
          return (
            null !== e
              ? ((o[u] = n(e)), (r = new o()), (o[u] = null), (r[a] = e))
              : (r = l()),
            void 0 === t ? r : i(r, t)
          );
        };
    },
    function (e, t) {
      t.f = {}.propertyIsEnumerable;
    },
    function (e, t) {
      e.exports = function (e, t) {
        return {
          enumerable: !(1 & e),
          configurable: !(2 & e),
          writable: !(4 & e),
          value: t,
        };
      };
    },
    function (e, t, r) {
      var n = r(22).f,
        i = r(27),
        s = r(8)("toStringTag");
      e.exports = function (e, t, r) {
        e &&
          !i((e = r ? e : e.prototype), s) &&
          n(e, s, { configurable: !0, value: t });
      };
    },
    function (e, t, r) {
      var n = r(68);
      e.exports = function (e) {
        return Object(n(e));
      };
    },
    function (e, t) {
      var r = 0,
        n = Math.random();
      e.exports = function (e) {
        return "Symbol(".concat(
          void 0 === e ? "" : e,
          ")_",
          (++r + n).toString(36)
        );
      };
    },
    46,
    function (e, t, r) {
      function n(e) {
        var t = -1,
          r = null == e ? 0 : e.length;
        for (this.clear(); ++t < r; ) {
          var n = e[t];
          this.set(n[0], n[1]);
        }
      }
      var i = r(480),
        s = r(481),
        a = r(482),
        o = r(483),
        u = r(484);
      (n.prototype.clear = i),
        (n.prototype.delete = s),
        (n.prototype.get = a),
        (n.prototype.has = o),
        (n.prototype.set = u),
        (e.exports = n);
    },
    function (e, t, r) {
      function n(e) {
        var t = (this.__data__ = new i(e));
        this.size = t.size;
      }
      var i = r(77),
        s = r(499),
        a = r(500),
        o = r(501),
        u = r(502),
        l = r(503);
      (n.prototype.clear = s),
        (n.prototype.delete = a),
        (n.prototype.get = o),
        (n.prototype.has = u),
        (n.prototype.set = l),
        (e.exports = n);
    },
    function (e, t) {
      function r(e, t) {
        for (var r = -1, n = null == e ? 0 : e.length, i = Array(n); ++r < n; )
          i[r] = t(e[r], r, e);
        return i;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t) {
        for (var r = e.length; r--; ) if (i(e[r][0], t)) return r;
        return -1;
      }
      var i = r(43);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(function (t, r) {
          var n = -1,
            i = r.length,
            a = i > 1 ? r[i - 1] : void 0,
            o = i > 2 ? r[2] : void 0;
          for (
            a = e.length > 3 && "function" == typeof a ? (i--, a) : void 0,
              o && s(r[0], r[1], o) && ((a = i < 3 ? void 0 : a), (i = 1)),
              t = Object(t);
            ++n < i;

          ) {
            var u = r[n];
            u && e(t, u, n, a);
          }
          return t;
        });
      }
      var i = r(132),
        s = r(139);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = e.__data__;
        return i(t) ? r["string" == typeof t ? "string" : "hash"] : r.map;
      }
      var i = r(478);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = e && e.constructor,
          r = ("function" == typeof t && t.prototype) || n;
        return e === r;
      }
      var n = Object.prototype;
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(38),
        i = n(Object, "create");
      e.exports = i;
    },
    function (e, t) {
      function r(e) {
        var t = -1,
          r = Array(e.size);
        return (
          e.forEach(function (e) {
            r[++t] = e;
          }),
          r
        );
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        if ("string" == typeof e || i(e)) return e;
        var t = e + "";
        return "0" == t && 1 / e == -s ? "-0" : t;
      }
      var i = r(59),
        s = 1 / 0;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(e, s);
      }
      var i = r(129),
        s = 4;
      e.exports = n;
    },
    function (e, t, r) {
      e.exports = r(519);
    },
    function (e, t, r) {
      function n(e, t, r, n) {
        (e = s(e) ? e : u(e)), (r = r && !n ? o(r) : 0);
        var c = e.length;
        return (
          r < 0 && (r = l(c + r, 0)),
          a(e) ? r <= c && e.indexOf(t, r) > -1 : !!c && i(e, t, r) > -1
        );
      }
      var i = r(131),
        s = r(23),
        a = r(144),
        o = r(45),
        u = r(216),
        l = Math.max;
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(423),
        i = r(10),
        s = Object.prototype,
        a = s.hasOwnProperty,
        o = s.propertyIsEnumerable,
        u = n(
          (function () {
            return arguments;
          })()
        )
          ? n
          : function (e) {
              return i(e) && a.call(e, "callee") && !o.call(e, "callee");
            };
      e.exports = u;
    },
    function (e, t, r) {
      (function (e) {
        var n = r(15),
          i = r(531),
          s = "object" == typeof t && t && !t.nodeType && t,
          a = s && "object" == typeof e && e && !e.nodeType && e,
          o = a && a.exports === s,
          u = o ? n.Buffer : void 0,
          l = u ? u.isBuffer : void 0,
          c = l || i;
        e.exports = c;
      }.call(t, r(63)(e)));
    },
    function (e, t, r) {
      function n(e) {
        if (!s(e)) return !1;
        var t = i(e);
        return t == o || t == u || t == a || t == l;
      }
      var i = r(14),
        s = r(9),
        a = "[object AsyncFunction]",
        o = "[object Function]",
        u = "[object GeneratorFunction]",
        l = "[object Proxy]";
      e.exports = n;
    },
    function (e, t, r) {
      (function (n) {
        "use strict";
        function i(e) {
          return e && e.__esModule ? e : { default: e };
        }
        t.__esModule = !0;
        var s = r(6),
          a = i(s);
        t.default = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : n.cwd();
          if (
            "object" ===
            ("undefined" == typeof u.default
              ? "undefined"
              : (0, a.default)(u.default))
          )
            return null;
          var r = f[t];
          if (!r) {
            r = new u.default();
            var i = c.default.join(t, ".babelrc");
            (r.id = i),
              (r.filename = i),
              (r.paths = u.default._nodeModulePaths(t)),
              (f[t] = r);
          }
          try {
            return u.default._resolveFilename(e, r);
          } catch (e) {
            return null;
          }
        };
        var o = r(46),
          u = i(o),
          l = r(25),
          c = i(l),
          f = {};
        e.exports = t.default;
      }.call(t, r(11)));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(99),
        s = n(i),
        a = r(3),
        o = n(a),
        u = r(40),
        l = n(u),
        c = r(39),
        f = n(c),
        p = (function (e) {
          function t() {
            (0, o.default)(this, t);
            var r = (0, l.default)(this, e.call(this));
            return (r.dynamicData = {}), r;
          }
          return (
            (0, f.default)(t, e),
            (t.prototype.setDynamic = function (e, t) {
              this.dynamicData[e] = t;
            }),
            (t.prototype.get = function (t) {
              if (this.has(t)) return e.prototype.get.call(this, t);
              if (Object.prototype.hasOwnProperty.call(this.dynamicData, t)) {
                var r = this.dynamicData[t]();
                return this.set(t, r), r;
              }
            }),
            t
          );
        })(s.default);
      (t.default = p), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = r(391),
        o = n(a),
        u = (0, o.default)("babel:verbose"),
        l = (0, o.default)("babel"),
        c = [],
        f = (function () {
          function e(t, r) {
            (0, s.default)(this, e), (this.filename = r), (this.file = t);
          }
          return (
            (e.prototype._buildMessage = function (e) {
              var t = "[BABEL] " + this.filename;
              return e && (t += ": " + e), t;
            }),
            (e.prototype.warn = function (e) {}),
            (e.prototype.error = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : Error;
              throw new t(this._buildMessage(e));
            }),
            (e.prototype.deprecate = function (e) {
              (this.file.opts && this.file.opts.suppressDeprecationMessages) ||
                ((e = this._buildMessage(e)), c.indexOf(e) >= 0 || c.push(e));
            }),
            (e.prototype.verbose = function (e) {
              u.enabled && u(this._buildMessage(e));
            }),
            (e.prototype.debug = function (e) {
              l.enabled && l(this._buildMessage(e));
            }),
            (e.prototype.deopt = function (e, t) {
              this.debug(t);
            }),
            e
          );
        })();
      (t.default = f), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        var r = e.node,
          n = r.source ? r.source.value : null,
          i = t.metadata.modules.exports,
          s = e.get("declaration");
        if (s.isStatement()) {
          var a = s.getBindingIdentifiers();
          for (var o in a)
            i.exported.push(o),
              i.specifiers.push({
                kind: "local",
                local: o,
                exported: e.isExportDefaultDeclaration() ? "default" : o,
              });
        }
        if (e.isExportNamedDeclaration() && r.specifiers)
          for (
            var l = r.specifiers,
              f = Array.isArray(l),
              p = 0,
              l = f ? l : (0, u.default)(l);
            ;

          ) {
            var h;
            if (f) {
              if (p >= l.length) break;
              h = l[p++];
            } else {
              if (((p = l.next()), p.done)) break;
              h = p.value;
            }
            var d = h,
              m = d.exported.name;
            i.exported.push(m),
              c.isExportDefaultSpecifier(d) &&
                i.specifiers.push({
                  kind: "external",
                  local: m,
                  exported: m,
                  source: n,
                }),
              c.isExportNamespaceSpecifier(d) &&
                i.specifiers.push({
                  kind: "external-namespace",
                  exported: m,
                  source: n,
                });
            var v = d.local;
            v &&
              (n &&
                i.specifiers.push({
                  kind: "external",
                  local: v.name,
                  exported: m,
                  source: n,
                }),
              n ||
                i.specifiers.push({
                  kind: "local",
                  local: v.name,
                  exported: m,
                }));
          }
        e.isExportAllDeclaration() &&
          i.specifiers.push({ kind: "external-all", source: n });
      }
      function a(e) {
        e.skip();
      }
      (t.__esModule = !0), (t.ImportDeclaration = t.ModuleDeclaration = void 0);
      var o = r(2),
        u = i(o);
      (t.ExportDeclaration = s), (t.Scope = a);
      var l = r(1),
        c = n(l);
      (t.ModuleDeclaration = {
        enter: function (e, t) {
          var r = e.node;
          r.source && (r.source.value = t.resolveModuleSource(r.source.value));
        },
      }),
        (t.ImportDeclaration = {
          exit: function (e, t) {
            var r = e.node,
              n = [],
              i = [];
            t.metadata.modules.imports.push({
              source: r.source.value,
              imported: i,
              specifiers: n,
            });
            for (
              var s = e.get("specifiers"),
                a = Array.isArray(s),
                o = 0,
                s = a ? s : (0, u.default)(s);
              ;

            ) {
              var l;
              if (a) {
                if (o >= s.length) break;
                l = s[o++];
              } else {
                if (((o = s.next()), o.done)) break;
                l = o.value;
              }
              var c = l,
                f = c.node.local.name;
              if (
                (c.isImportDefaultSpecifier() &&
                  (i.push("default"),
                  n.push({ kind: "named", imported: "default", local: f })),
                c.isImportSpecifier())
              ) {
                var p = c.node.imported.name;
                i.push(p), n.push({ kind: "named", imported: p, local: f });
              }
              c.isImportNamespaceSpecifier() &&
                (i.push("*"), n.push({ kind: "namespace", local: f }));
            }
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e, t) {
        var r = t || i.EXTENSIONS,
          n = k.default.extname(e);
        return (0, D.default)(r, n);
      }
      function s(e) {
        return e
          ? Array.isArray(e)
            ? e
            : "string" == typeof e
            ? e.split(",")
            : [e]
          : [];
      }
      function a(e) {
        if (!e) return new RegExp(/.^/);
        if (
          (Array.isArray(e) &&
            (e = new RegExp(e.map(m.default).join("|"), "i")),
          "string" == typeof e)
        ) {
          (e = (0, T.default)(e)),
            ((0, y.default)(e, "./") || (0, y.default)(e, "*/")) &&
              (e = e.slice(2)),
            (0, y.default)(e, "**/") && (e = e.slice(3));
          var t = x.default.makeRe(e, { nocase: !0 });
          return new RegExp(t.source.slice(1, -1), "i");
        }
        if ((0, w.default)(e)) return e;
        throw new TypeError("illegal type for regexify");
      }
      function o(e, t) {
        return e
          ? (0, b.default)(e)
            ? o([e], t)
            : (0, S.default)(e)
            ? o(s(e), t)
            : Array.isArray(e)
            ? (t && (e = e.map(t)), e)
            : [e]
          : [];
      }
      function u(e) {
        return (
          "true" === e || 1 == e || (!("false" === e || 0 == e || !e) && e)
        );
      }
      function l(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          r = arguments[2];
        if (((e = e.replace(/\\/g, "/")), r)) {
          for (
            var n = r,
              i = Array.isArray(n),
              s = 0,
              n = i ? n : (0, p.default)(n);
            ;

          ) {
            var a;
            if (i) {
              if (s >= n.length) break;
              a = n[s++];
            } else {
              if (((s = n.next()), s.done)) break;
              a = s.value;
            }
            var o = a;
            if (c(o, e)) return !1;
          }
          return !0;
        }
        if (t.length)
          for (
            var u = t,
              l = Array.isArray(u),
              f = 0,
              u = l ? u : (0, p.default)(u);
            ;

          ) {
            var h;
            if (l) {
              if (f >= u.length) break;
              h = u[f++];
            } else {
              if (((f = u.next()), f.done)) break;
              h = f.value;
            }
            var d = h;
            if (c(d, e)) return !0;
          }
        return !1;
      }
      function c(e, t) {
        return "function" == typeof e ? e(t) : e.test(t);
      }
      (t.__esModule = !0), (t.inspect = t.inherits = void 0);
      var f = r(2),
        p = n(f),
        h = r(62);
      Object.defineProperty(t, "inherits", {
        enumerable: !0,
        get: function () {
          return h.inherits;
        },
      }),
        Object.defineProperty(t, "inspect", {
          enumerable: !0,
          get: function () {
            return h.inspect;
          },
        }),
        (t.canCompile = i),
        (t.list = s),
        (t.regexify = a),
        (t.arrayify = o),
        (t.booleanify = u),
        (t.shouldIgnore = l);
      var d = r(514),
        m = n(d),
        v = r(530),
        y = n(v),
        g = r(210),
        b = n(g),
        E = r(537),
        x = n(E),
        A = r(89),
        D = n(A),
        C = r(144),
        S = n(C),
        _ = r(213),
        w = n(_),
        F = r(25),
        k = n(F),
        P = r(220),
        T = n(P);
      i.EXTENSIONS = [".js", ".jsx", ".es6", ".es"];
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function s(e) {
        e.variance &&
          ("plus" === e.variance
            ? this.token("+")
            : "minus" === e.variance && this.token("-")),
          this.word(e.name);
      }
      function a(e) {
        this.token("..."), this.print(e.argument, e);
      }
      function o(e) {
        var t = e.properties;
        this.token("{"),
          this.printInnerComments(e),
          t.length &&
            (this.space(),
            this.printList(t, e, { indent: !0, statement: !0 }),
            this.space()),
          this.token("}");
      }
      function u(e) {
        this.printJoin(e.decorators, e), this._method(e);
      }
      function l(e) {
        if ((this.printJoin(e.decorators, e), e.computed))
          this.token("["), this.print(e.key, e), this.token("]");
        else {
          if (
            y.isAssignmentPattern(e.value) &&
            y.isIdentifier(e.key) &&
            e.key.name === e.value.left.name
          )
            return void this.print(e.value, e);
          if (
            (this.print(e.key, e),
            e.shorthand &&
              y.isIdentifier(e.key) &&
              y.isIdentifier(e.value) &&
              e.key.name === e.value.name)
          )
            return;
        }
        this.token(":"), this.space(), this.print(e.value, e);
      }
      function c(e) {
        var t = e.elements,
          r = t.length;
        this.token("["), this.printInnerComments(e);
        for (var n = 0; n < t.length; n++) {
          var i = t[n];
          i
            ? (n > 0 && this.space(),
              this.print(i, e),
              n < r - 1 && this.token(","))
            : this.token(",");
        }
        this.token("]");
      }
      function f(e) {
        this.word("/" + e.pattern + "/" + e.flags);
      }
      function p(e) {
        this.word(e.value ? "true" : "false");
      }
      function h() {
        this.word("null");
      }
      function d(e) {
        var t = this.getPossibleRaw(e),
          r = e.value + "";
        null == t
          ? this.number(r)
          : this.format.minified
          ? this.number(t.length < r.length ? t : r)
          : this.number(t);
      }
      function m(e, t) {
        var r = this.getPossibleRaw(e);
        if (!this.format.minified && null != r) return void this.token(r);
        var n = {
          quotes: y.isJSX(t) ? "double" : this.format.quotes,
          wrap: !0,
        };
        this.format.jsonCompatibleStrings && (n.json = !0);
        var i = (0, b.default)(e.value, n);
        return this.token(i);
      }
      (t.__esModule = !0),
        (t.ArrayPattern = t.ObjectPattern = t.RestProperty = t.SpreadProperty = t.SpreadElement = void 0),
        (t.Identifier = s),
        (t.RestElement = a),
        (t.ObjectExpression = o),
        (t.ObjectMethod = u),
        (t.ObjectProperty = l),
        (t.ArrayExpression = c),
        (t.RegExpLiteral = f),
        (t.BooleanLiteral = p),
        (t.NullLiteral = h),
        (t.NumericLiteral = d),
        (t.StringLiteral = m);
      var v = r(1),
        y = i(v),
        g = r(400),
        b = n(g);
      (t.SpreadElement = a),
        (t.SpreadProperty = a),
        (t.RestProperty = a),
        (t.ObjectPattern = o),
        (t.ArrayPattern = c);
    },
    function (e, t, r) {
      e.exports = { default: r(343), __esModule: !0 };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t, r) {
        for (
          var n = N.scope.get(e.node) || [],
            i = n,
            s = Array.isArray(i),
            a = 0,
            i = s ? i : (0, v.default)(i);
          ;

        ) {
          var o;
          if (s) {
            if (a >= i.length) break;
            o = i[a++];
          } else {
            if (((a = i.next()), a.done)) break;
            o = a.value;
          }
          var u = o;
          if (u.parent === t && u.path === e) return u;
        }
        n.push(r), N.scope.has(e.node) || N.scope.set(e.node, n);
      }
      function a(e, t) {
        if (I.isModuleDeclaration(e))
          if (e.source) a(e.source, t);
          else if (e.specifiers && e.specifiers.length)
            for (
              var r = e.specifiers,
                n = Array.isArray(r),
                i = 0,
                r = n ? r : (0, v.default)(r);
              ;

            ) {
              var s;
              if (n) {
                if (i >= r.length) break;
                s = r[i++];
              } else {
                if (((i = r.next()), i.done)) break;
                s = i.value;
              }
              var o = s;
              a(o, t);
            }
          else e.declaration && a(e.declaration, t);
        else if (I.isModuleSpecifier(e)) a(e.local, t);
        else if (I.isMemberExpression(e)) a(e.object, t), a(e.property, t);
        else if (I.isIdentifier(e)) t.push(e.name);
        else if (I.isLiteral(e)) t.push(e.value);
        else if (I.isCallExpression(e)) a(e.callee, t);
        else if (I.isObjectExpression(e) || I.isObjectPattern(e))
          for (
            var u = e.properties,
              l = Array.isArray(u),
              c = 0,
              u = l ? u : (0, v.default)(u);
            ;

          ) {
            var f;
            if (l) {
              if (c >= u.length) break;
              f = u[c++];
            } else {
              if (((c = u.next()), c.done)) break;
              f = c.value;
            }
            var p = f;
            a(p.key || p.argument, t);
          }
      }
      t.__esModule = !0;
      var o = r(17),
        u = i(o),
        l = r(33),
        c = i(l),
        f = r(99),
        p = i(f),
        h = r(3),
        d = i(h),
        m = r(2),
        v = i(m),
        y = r(89),
        g = i(y),
        b = r(214),
        E = i(b),
        x = r(318),
        A = i(x),
        D = r(7),
        C = i(D),
        S = r(207),
        _ = i(S),
        w = r(16),
        F = n(w),
        k = r(160),
        P = i(k),
        T = r(320),
        O = i(T),
        B = r(1),
        I = n(B),
        N = r(67),
        M = 0,
        R = {
          For: function (e) {
            for (
              var t = I.FOR_INIT_KEYS,
                r = Array.isArray(t),
                n = 0,
                t = r ? t : (0, v.default)(t);
              ;

            ) {
              var i;
              if (r) {
                if (n >= t.length) break;
                i = t[n++];
              } else {
                if (((n = t.next()), n.done)) break;
                i = n.value;
              }
              var s = i,
                a = e.get(s);
              a.isVar() &&
                e.scope.getFunctionParent().registerBinding("var", a);
            }
          },
          Declaration: function (e) {
            e.isBlockScoped() ||
              (e.isExportDeclaration() &&
                e.get("declaration").isDeclaration()) ||
              e.scope.getFunctionParent().registerDeclaration(e);
          },
          ReferencedIdentifier: function (e, t) {
            t.references.push(e);
          },
          ForXStatement: function (e, t) {
            var r = e.get("left");
            (r.isPattern() || r.isIdentifier()) && t.constantViolations.push(r);
          },
          ExportDeclaration: {
            exit: function (e) {
              var t = e.node,
                r = e.scope,
                n = t.declaration;
              if (I.isClassDeclaration(n) || I.isFunctionDeclaration(n)) {
                var i = n.id;
                if (!i) return;
                var s = r.getBinding(i.name);
                s && s.reference(e);
              } else if (I.isVariableDeclaration(n))
                for (
                  var a = n.declarations,
                    o = Array.isArray(a),
                    u = 0,
                    a = o ? a : (0, v.default)(a);
                  ;

                ) {
                  var l;
                  if (o) {
                    if (u >= a.length) break;
                    l = a[u++];
                  } else {
                    if (((u = a.next()), u.done)) break;
                    l = u.value;
                  }
                  var c = l,
                    f = I.getBindingIdentifiers(c);
                  for (var p in f) {
                    var h = r.getBinding(p);
                    h && h.reference(e);
                  }
                }
            },
          },
          LabeledStatement: function (e) {
            e.scope.getProgramParent().addGlobal(e.node),
              e.scope.getBlockParent().registerDeclaration(e);
          },
          AssignmentExpression: function (e, t) {
            t.assignments.push(e);
          },
          UpdateExpression: function (e, t) {
            t.constantViolations.push(e.get("argument"));
          },
          UnaryExpression: function (e, t) {
            "delete" === e.node.operator &&
              t.constantViolations.push(e.get("argument"));
          },
          BlockScoped: function (e) {
            var t = e.scope;
            t.path === e && (t = t.parent),
              t.getBlockParent().registerDeclaration(e);
          },
          ClassDeclaration: function (e) {
            var t = e.node.id;
            if (t) {
              var r = t.name;
              e.scope.bindings[r] = e.scope.getBinding(r);
            }
          },
          Block: function (e) {
            for (
              var t = e.get("body"),
                r = t,
                n = Array.isArray(r),
                i = 0,
                r = n ? r : (0, v.default)(r);
              ;

            ) {
              var s;
              if (n) {
                if (i >= r.length) break;
                s = r[i++];
              } else {
                if (((i = r.next()), i.done)) break;
                s = i.value;
              }
              var a = s;
              a.isFunctionDeclaration() &&
                e.scope.getBlockParent().registerDeclaration(a);
            }
          },
        },
        L = 0,
        j = (function () {
          function e(t, r) {
            if (((0, d.default)(this, e), r && r.block === t.node)) return r;
            var n = s(t, r, this);
            return n
              ? n
              : ((this.uid = L++),
                (this.parent = r),
                (this.hub = t.hub),
                (this.parentBlock = t.parent),
                (this.block = t.node),
                (this.path = t),
                void (this.labels = new p.default()));
          }
          return (
            (e.prototype.traverse = function (e, t, r) {
              (0, C.default)(e, t, this, r, this.path);
            }),
            (e.prototype.generateDeclaredUidIdentifier = function () {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "temp",
                t = this.generateUidIdentifier(e);
              return this.push({ id: t }), t;
            }),
            (e.prototype.generateUidIdentifier = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "temp";
              return I.identifier(this.generateUid(e));
            }),
            (e.prototype.generateUid = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "temp";
              e = I.toIdentifier(e)
                .replace(/^_+/, "")
                .replace(/[0-9]+$/g, "");
              var t = void 0,
                r = 0;
              do (t = this._generateUid(e, r)), r++;
              while (
                this.hasLabel(t) ||
                this.hasBinding(t) ||
                this.hasGlobal(t) ||
                this.hasReference(t)
              );
              var n = this.getProgramParent();
              return (n.references[t] = !0), (n.uids[t] = !0), t;
            }),
            (e.prototype._generateUid = function (e, t) {
              var r = e;
              return t > 1 && (r += t), "_" + r;
            }),
            (e.prototype.generateUidIdentifierBasedOnNode = function (e, t) {
              var r = e;
              I.isAssignmentExpression(e)
                ? (r = e.left)
                : I.isVariableDeclarator(e)
                ? (r = e.id)
                : (I.isObjectProperty(r) || I.isObjectMethod(r)) && (r = r.key);
              var n = [];
              a(r, n);
              var i = n.join("$");
              return (
                (i = i.replace(/^_/, "") || t || "ref"),
                this.generateUidIdentifier(i.slice(0, 20))
              );
            }),
            (e.prototype.isStatic = function (e) {
              if (I.isThisExpression(e) || I.isSuper(e)) return !0;
              if (I.isIdentifier(e)) {
                var t = this.getBinding(e.name);
                return t ? t.constant : this.hasBinding(e.name);
              }
              return !1;
            }),
            (e.prototype.maybeGenerateMemoised = function (e, t) {
              if (this.isStatic(e)) return null;
              var r = this.generateUidIdentifierBasedOnNode(e);
              return t || this.push({ id: r }), r;
            }),
            (e.prototype.checkBlockScopedCollisions = function (e, t, r, n) {
              if ("param" !== t && ("hoisted" !== t || "let" !== e.kind)) {
                var i = !1;
                if (
                  (i ||
                    (i =
                      "let" === t ||
                      "let" === e.kind ||
                      "const" === e.kind ||
                      "module" === e.kind),
                  i ||
                    (i = "param" === e.kind && ("let" === t || "const" === t)),
                  i)
                )
                  throw this.hub.file.buildCodeFrameError(
                    n,
                    F.get("scopeDuplicateDeclaration", r),
                    TypeError
                  );
              }
            }),
            (e.prototype.rename = function (e, t, r) {
              var n = this.getBinding(e);
              if (n)
                return (
                  (t = t || this.generateUidIdentifier(e).name),
                  new A.default(n, e, t).rename(r)
                );
            }),
            (e.prototype._renameFromMap = function (e, t, r, n) {
              e[t] && ((e[r] = n), (e[t] = null));
            }),
            (e.prototype.dump = function () {
              var e = ((0, E.default)("-", 60), this);
              do for (var t in e.bindings) var r = e.bindings[t];
              while ((e = e.parent));
            }),
            (e.prototype.toArray = function (e, t) {
              var r = this.hub.file;
              if (I.isIdentifier(e)) {
                var n = this.getBinding(e.name);
                if (n && n.constant && n.path.isGenericType("Array")) return e;
              }
              if (I.isArrayExpression(e)) return e;
              if (I.isIdentifier(e, { name: "arguments" }))
                return I.callExpression(
                  I.memberExpression(
                    I.memberExpression(
                      I.memberExpression(
                        I.identifier("Array"),
                        I.identifier("prototype")
                      ),
                      I.identifier("slice")
                    ),
                    I.identifier("call")
                  ),
                  [e]
                );
              var i = "toArray",
                s = [e];
              return (
                t === !0
                  ? (i = "toConsumableArray")
                  : t && (s.push(I.numericLiteral(t)), (i = "slicedToArray")),
                I.callExpression(r.addHelper(i), s)
              );
            }),
            (e.prototype.hasLabel = function (e) {
              return !!this.getLabel(e);
            }),
            (e.prototype.getLabel = function (e) {
              return this.labels.get(e);
            }),
            (e.prototype.registerLabel = function (e) {
              this.labels.set(e.node.label.name, e);
            }),
            (e.prototype.registerDeclaration = function (e) {
              if (e.isLabeledStatement()) this.registerLabel(e);
              else if (e.isFunctionDeclaration())
                this.registerBinding("hoisted", e.get("id"), e);
              else if (e.isVariableDeclaration())
                for (
                  var t = e.get("declarations"),
                    r = t,
                    n = Array.isArray(r),
                    i = 0,
                    r = n ? r : (0, v.default)(r);
                  ;

                ) {
                  var s;
                  if (n) {
                    if (i >= r.length) break;
                    s = r[i++];
                  } else {
                    if (((i = r.next()), i.done)) break;
                    s = i.value;
                  }
                  var a = s;
                  this.registerBinding(e.node.kind, a);
                }
              else if (e.isClassDeclaration()) this.registerBinding("let", e);
              else if (e.isImportDeclaration())
                for (
                  var o = e.get("specifiers"),
                    u = o,
                    l = Array.isArray(u),
                    c = 0,
                    u = l ? u : (0, v.default)(u);
                  ;

                ) {
                  var f;
                  if (l) {
                    if (c >= u.length) break;
                    f = u[c++];
                  } else {
                    if (((c = u.next()), c.done)) break;
                    f = c.value;
                  }
                  var p = f;
                  this.registerBinding("module", p);
                }
              else if (e.isExportDeclaration()) {
                var h = e.get("declaration");
                (h.isClassDeclaration() ||
                  h.isFunctionDeclaration() ||
                  h.isVariableDeclaration()) &&
                  this.registerDeclaration(h);
              } else this.registerBinding("unknown", e);
            }),
            (e.prototype.buildUndefinedNode = function () {
              return this.hasBinding("undefined")
                ? I.unaryExpression("void", I.numericLiteral(0), !0)
                : I.identifier("undefined");
            }),
            (e.prototype.registerConstantViolation = function (e) {
              var t = e.getBindingIdentifiers();
              for (var r in t) {
                var n = this.getBinding(r);
                n && n.reassign(e);
              }
            }),
            (e.prototype.registerBinding = function (e, t) {
              var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : t;
              if (!e) throw new ReferenceError("no `kind`");
              if (t.isVariableDeclaration())
                for (
                  var n = t.get("declarations"),
                    i = n,
                    s = Array.isArray(i),
                    a = 0,
                    i = s ? i : (0, v.default)(i);
                  ;

                ) {
                  var o;
                  if (s) {
                    if (a >= i.length) break;
                    o = i[a++];
                  } else {
                    if (((a = i.next()), a.done)) break;
                    o = a.value;
                  }
                  var u = o;
                  this.registerBinding(e, u);
                }
              else {
                var l = this.getProgramParent(),
                  c = t.getBindingIdentifiers(!0);
                for (var f in c)
                  for (
                    var p = c[f],
                      h = Array.isArray(p),
                      d = 0,
                      p = h ? p : (0, v.default)(p);
                    ;

                  ) {
                    var m;
                    if (h) {
                      if (d >= p.length) break;
                      m = p[d++];
                    } else {
                      if (((d = p.next()), d.done)) break;
                      m = d.value;
                    }
                    var y = m,
                      g = this.getOwnBinding(f);
                    if (g) {
                      if (g.identifier === y) continue;
                      this.checkBlockScopedCollisions(g, e, f, y);
                    }
                    g && g.path.isFlow() && (g = null),
                      (l.references[f] = !0),
                      (this.bindings[f] = new P.default({
                        identifier: y,
                        existing: g,
                        scope: this,
                        path: r,
                        kind: e,
                      }));
                  }
              }
            }),
            (e.prototype.addGlobal = function (e) {
              this.globals[e.name] = e;
            }),
            (e.prototype.hasUid = function (e) {
              var t = this;
              do if (t.uids[e]) return !0;
              while ((t = t.parent));
              return !1;
            }),
            (e.prototype.hasGlobal = function (e) {
              var t = this;
              do if (t.globals[e]) return !0;
              while ((t = t.parent));
              return !1;
            }),
            (e.prototype.hasReference = function (e) {
              var t = this;
              do if (t.references[e]) return !0;
              while ((t = t.parent));
              return !1;
            }),
            (e.prototype.isPure = function (e, t) {
              if (I.isIdentifier(e)) {
                var r = this.getBinding(e.name);
                return !!r && (!t || r.constant);
              }
              if (I.isClass(e))
                return (
                  !(e.superClass && !this.isPure(e.superClass, t)) &&
                  this.isPure(e.body, t)
                );
              if (I.isClassBody(e)) {
                for (
                  var n = e.body,
                    i = Array.isArray(n),
                    s = 0,
                    n = i ? n : (0, v.default)(n);
                  ;

                ) {
                  var a;
                  if (i) {
                    if (s >= n.length) break;
                    a = n[s++];
                  } else {
                    if (((s = n.next()), s.done)) break;
                    a = s.value;
                  }
                  var o = a;
                  if (!this.isPure(o, t)) return !1;
                }
                return !0;
              }
              if (I.isBinary(e))
                return this.isPure(e.left, t) && this.isPure(e.right, t);
              if (I.isArrayExpression(e)) {
                for (
                  var u = e.elements,
                    l = Array.isArray(u),
                    c = 0,
                    u = l ? u : (0, v.default)(u);
                  ;

                ) {
                  var f;
                  if (l) {
                    if (c >= u.length) break;
                    f = u[c++];
                  } else {
                    if (((c = u.next()), c.done)) break;
                    f = c.value;
                  }
                  var p = f;
                  if (!this.isPure(p, t)) return !1;
                }
                return !0;
              }
              if (I.isObjectExpression(e)) {
                for (
                  var h = e.properties,
                    d = Array.isArray(h),
                    m = 0,
                    h = d ? h : (0, v.default)(h);
                  ;

                ) {
                  var y;
                  if (d) {
                    if (m >= h.length) break;
                    y = h[m++];
                  } else {
                    if (((m = h.next()), m.done)) break;
                    y = m.value;
                  }
                  var g = y;
                  if (!this.isPure(g, t)) return !1;
                }
                return !0;
              }
              return I.isClassMethod(e)
                ? !(e.computed && !this.isPure(e.key, t)) &&
                    "get" !== e.kind &&
                    "set" !== e.kind
                : I.isClassProperty(e) || I.isObjectProperty(e)
                ? !(e.computed && !this.isPure(e.key, t)) &&
                  this.isPure(e.value, t)
                : I.isUnaryExpression(e)
                ? this.isPure(e.argument, t)
                : I.isPureish(e);
            }),
            (e.prototype.setData = function (e, t) {
              return (this.data[e] = t);
            }),
            (e.prototype.getData = function (e) {
              var t = this;
              do {
                var r = t.data[e];
                if (null != r) return r;
              } while ((t = t.parent));
            }),
            (e.prototype.removeData = function (e) {
              var t = this;
              do {
                var r = t.data[e];
                null != r && (t.data[e] = null);
              } while ((t = t.parent));
            }),
            (e.prototype.init = function () {
              this.references || this.crawl();
            }),
            (e.prototype.crawl = function () {
              M++, this._crawl(), M--;
            }),
            (e.prototype._crawl = function () {
              var e = this.path;
              if (
                ((this.references = (0, c.default)(null)),
                (this.bindings = (0, c.default)(null)),
                (this.globals = (0, c.default)(null)),
                (this.uids = (0, c.default)(null)),
                (this.data = (0, c.default)(null)),
                e.isLoop())
              )
                for (
                  var t = I.FOR_INIT_KEYS,
                    r = Array.isArray(t),
                    n = 0,
                    t = r ? t : (0, v.default)(t);
                  ;

                ) {
                  var i;
                  if (r) {
                    if (n >= t.length) break;
                    i = t[n++];
                  } else {
                    if (((n = t.next()), n.done)) break;
                    i = n.value;
                  }
                  var s = i,
                    a = e.get(s);
                  a.isBlockScoped() && this.registerBinding(a.node.kind, a);
                }
              if (
                (e.isFunctionExpression() &&
                  e.has("id") &&
                  (e.get("id").node[I.NOT_LOCAL_BINDING] ||
                    this.registerBinding("local", e.get("id"), e)),
                e.isClassExpression() &&
                  e.has("id") &&
                  (e.get("id").node[I.NOT_LOCAL_BINDING] ||
                    this.registerBinding("local", e)),
                e.isFunction())
              )
                for (
                  var o = e.get("params"),
                    u = o,
                    l = Array.isArray(u),
                    f = 0,
                    u = l ? u : (0, v.default)(u);
                  ;

                ) {
                  var p;
                  if (l) {
                    if (f >= u.length) break;
                    p = u[f++];
                  } else {
                    if (((f = u.next()), f.done)) break;
                    p = f.value;
                  }
                  var h = p;
                  this.registerBinding("param", h);
                }
              e.isCatchClause() && this.registerBinding("let", e);
              var d = this.getProgramParent();
              if (!d.crawling) {
                var m = {
                  references: [],
                  constantViolations: [],
                  assignments: [],
                };
                (this.crawling = !0), e.traverse(R, m), (this.crawling = !1);
                for (
                  var y = m.assignments,
                    g = Array.isArray(y),
                    b = 0,
                    y = g ? y : (0, v.default)(y);
                  ;

                ) {
                  var E;
                  if (g) {
                    if (b >= y.length) break;
                    E = y[b++];
                  } else {
                    if (((b = y.next()), b.done)) break;
                    E = b.value;
                  }
                  var x = E,
                    A = x.getBindingIdentifiers(),
                    D = void 0;
                  for (var C in A)
                    x.scope.getBinding(C) ||
                      ((D = D || x.scope.getProgramParent()),
                      D.addGlobal(A[C]));
                  x.scope.registerConstantViolation(x);
                }
                for (
                  var S = m.references,
                    _ = Array.isArray(S),
                    w = 0,
                    S = _ ? S : (0, v.default)(S);
                  ;

                ) {
                  var F;
                  if (_) {
                    if (w >= S.length) break;
                    F = S[w++];
                  } else {
                    if (((w = S.next()), w.done)) break;
                    F = w.value;
                  }
                  var k = F,
                    P = k.scope.getBinding(k.node.name);
                  P
                    ? P.reference(k)
                    : k.scope.getProgramParent().addGlobal(k.node);
                }
                for (
                  var T = m.constantViolations,
                    O = Array.isArray(T),
                    B = 0,
                    T = O ? T : (0, v.default)(T);
                  ;

                ) {
                  var N;
                  if (O) {
                    if (B >= T.length) break;
                    N = T[B++];
                  } else {
                    if (((B = T.next()), B.done)) break;
                    N = B.value;
                  }
                  var M = N;
                  M.scope.registerConstantViolation(M);
                }
              }
            }),
            (e.prototype.push = function (e) {
              var t = this.path;
              t.isBlockStatement() ||
                t.isProgram() ||
                (t = this.getBlockParent().path),
                t.isSwitchStatement() && (t = this.getFunctionParent().path),
                (t.isLoop() || t.isCatchClause() || t.isFunction()) &&
                  (I.ensureBlock(t.node), (t = t.get("body")));
              var r = e.unique,
                n = e.kind || "var",
                i = null == e._blockHoist ? 2 : e._blockHoist,
                s = "declaration:" + n + ":" + i,
                a = !r && t.getData(s);
              if (!a) {
                var o = I.variableDeclaration(n, []);
                (o._generated = !0), (o._blockHoist = i);
                var u = t.unshiftContainer("body", [o]);
                (a = u[0]), r || t.setData(s, a);
              }
              var l = I.variableDeclarator(e.id, e.init);
              a.node.declarations.push(l),
                this.registerBinding(n, a.get("declarations").pop());
            }),
            (e.prototype.getProgramParent = function () {
              var e = this;
              do if (e.path.isProgram()) return e;
              while ((e = e.parent));
              throw new Error("We couldn't find a Function or Program...");
            }),
            (e.prototype.getFunctionParent = function () {
              var e = this;
              do if (e.path.isFunctionParent()) return e;
              while ((e = e.parent));
              throw new Error("We couldn't find a Function or Program...");
            }),
            (e.prototype.getBlockParent = function () {
              var e = this;
              do if (e.path.isBlockParent()) return e;
              while ((e = e.parent));
              throw new Error(
                "We couldn't find a BlockStatement, For, Switch, Function, Loop or Program..."
              );
            }),
            (e.prototype.getAllBindings = function () {
              var e = (0, c.default)(null),
                t = this;
              do (0, _.default)(e, t.bindings), (t = t.parent);
              while (t);
              return e;
            }),
            (e.prototype.getAllBindingsOfKind = function () {
              for (
                var e = (0, c.default)(null),
                  t = arguments,
                  r = Array.isArray(t),
                  n = 0,
                  t = r ? t : (0, v.default)(t);
                ;

              ) {
                var i;
                if (r) {
                  if (n >= t.length) break;
                  i = t[n++];
                } else {
                  if (((n = t.next()), n.done)) break;
                  i = n.value;
                }
                var s = i,
                  a = this;
                do {
                  for (var o in a.bindings) {
                    var u = a.bindings[o];
                    u.kind === s && (e[o] = u);
                  }
                  a = a.parent;
                } while (a);
              }
              return e;
            }),
            (e.prototype.bindingIdentifierEquals = function (e, t) {
              return this.getBindingIdentifier(e) === t;
            }),
            (e.prototype.warnOnFlowBinding = function (e) {
              return 0 === M && e && e.path.isFlow(), e;
            }),
            (e.prototype.getBinding = function (e) {
              var t = this;
              do {
                var r = t.getOwnBinding(e);
                if (r) return this.warnOnFlowBinding(r);
              } while ((t = t.parent));
            }),
            (e.prototype.getOwnBinding = function (e) {
              return this.warnOnFlowBinding(this.bindings[e]);
            }),
            (e.prototype.getBindingIdentifier = function (e) {
              var t = this.getBinding(e);
              return t && t.identifier;
            }),
            (e.prototype.getOwnBindingIdentifier = function (e) {
              var t = this.bindings[e];
              return t && t.identifier;
            }),
            (e.prototype.hasOwnBinding = function (e) {
              return !!this.getOwnBinding(e);
            }),
            (e.prototype.hasBinding = function (t, r) {
              return (
                !!t &&
                (!!this.hasOwnBinding(t) ||
                  !!this.parentHasBinding(t, r) ||
                  !!this.hasUid(t) ||
                  !(r || !(0, g.default)(e.globals, t)) ||
                  !(r || !(0, g.default)(e.contextVariables, t)))
              );
            }),
            (e.prototype.parentHasBinding = function (e, t) {
              return this.parent && this.parent.hasBinding(e, t);
            }),
            (e.prototype.moveBindingTo = function (e, t) {
              var r = this.getBinding(e);
              r &&
                (r.scope.removeOwnBinding(e),
                (r.scope = t),
                (t.bindings[e] = r));
            }),
            (e.prototype.removeOwnBinding = function (e) {
              delete this.bindings[e];
            }),
            (e.prototype.removeBinding = function (e) {
              var t = this.getBinding(e);
              t && t.scope.removeOwnBinding(e);
              var r = this;
              do r.uids[e] && (r.uids[e] = !1);
              while ((r = r.parent));
            }),
            e
          );
        })();
      (j.globals = (0, u.default)(O.default.builtin)),
        (j.contextVariables = ["arguments", "undefined", "Infinity", "NaN"]),
        (t.default = j),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.__esModule = !0),
        (t.NOT_LOCAL_BINDING = t.BLOCK_SCOPED_SYMBOL = t.INHERIT_KEYS = t.UNARY_OPERATORS = t.STRING_UNARY_OPERATORS = t.NUMBER_UNARY_OPERATORS = t.BOOLEAN_UNARY_OPERATORS = t.BINARY_OPERATORS = t.NUMBER_BINARY_OPERATORS = t.BOOLEAN_BINARY_OPERATORS = t.COMPARISON_BINARY_OPERATORS = t.EQUALITY_BINARY_OPERATORS = t.BOOLEAN_NUMBER_BINARY_OPERATORS = t.UPDATE_OPERATORS = t.LOGICAL_OPERATORS = t.COMMENT_KEYS = t.FOR_INIT_KEYS = t.FLATTENABLE_KEYS = t.STATEMENT_OR_BLOCK_KEYS = void 0);
      var i = r(297),
        s = n(i),
        a =
          ((t.STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"]),
          (t.FLATTENABLE_KEYS = ["body", "expressions"]),
          (t.FOR_INIT_KEYS = ["left", "init"]),
          (t.COMMENT_KEYS = [
            "leadingComments",
            "trailingComments",
            "innerComments",
          ]),
          (t.LOGICAL_OPERATORS = ["||", "&&"]),
          (t.UPDATE_OPERATORS = ["++", "--"]),
          (t.BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="])),
        o = (t.EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="]),
        u = (t.COMPARISON_BINARY_OPERATORS = [].concat(o, [
          "in",
          "instanceof",
        ])),
        l = (t.BOOLEAN_BINARY_OPERATORS = [].concat(u, a)),
        c = (t.NUMBER_BINARY_OPERATORS = [
          "-",
          "/",
          "%",
          "*",
          "**",
          "&",
          "|",
          ">>",
          ">>>",
          "<<",
          "^",
        ]),
        f =
          ((t.BINARY_OPERATORS = ["+"].concat(c, l)),
          (t.BOOLEAN_UNARY_OPERATORS = ["delete", "!"])),
        p = (t.NUMBER_UNARY_OPERATORS = ["+", "-", "++", "--", "~"]),
        h = (t.STRING_UNARY_OPERATORS = ["typeof"]);
      (t.UNARY_OPERATORS = ["void"].concat(f, p, h)),
        (t.INHERIT_KEYS = {
          optional: ["typeAnnotation", "typeParameters", "returnType"],
          force: ["start", "loc", "end"],
        }),
        (t.BLOCK_SCOPED_SYMBOL = (0, s.default)("var used to be block scoped")),
        (t.NOT_LOCAL_BINDING = (0, s.default)(
          "should not be considered a local binding"
        ));
    },
    function (e, t) {
      "use strict";
      function r(e) {
        return (
          (e = e.split(" ")),
          function (t) {
            return e.indexOf(t) >= 0;
          }
        );
      }
      function n(e, t) {
        for (var r = 65536, n = 0; n < t.length; n += 2) {
          if (((r += t[n]), r > e)) return !1;
          if (((r += t[n + 1]), r >= e)) return !0;
        }
      }
      function i(e) {
        return e < 65
          ? 36 === e
          : e < 91 ||
              (e < 97
                ? 95 === e
                : e < 123 ||
                  (e <= 65535
                    ? e >= 170 && k.test(String.fromCharCode(e))
                    : n(e, T)));
      }
      function s(e) {
        return e < 48
          ? 36 === e
          : e < 58 ||
              (!(e < 65) &&
                (e < 91 ||
                  (e < 97
                    ? 95 === e
                    : e < 123 ||
                      (e <= 65535
                        ? e >= 170 && P.test(String.fromCharCode(e))
                        : n(e, T) || n(e, O)))));
      }
      function a(e) {
        var t = {};
        for (var r in B) t[r] = e && r in e ? e[r] : B[r];
        return t;
      }
      function o(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function u(e, t) {
        return new I(e, { beforeExpr: !0, binop: t });
      }
      function l(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        (t.keyword = e), (L[e] = R["_" + e] = new I(e, t));
      }
      function c(e) {
        return 10 === e || 13 === e || 8232 === e || 8233 === e;
      }
      function f(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function p(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function h(e, t) {
        for (var r = 1, n = 0; ; ) {
          V.lastIndex = n;
          var i = V.exec(e);
          if (!(i && i.index < t)) return new Y(r, t - n);
          ++r, (n = i.index + i[0].length);
        }
      }
      function d(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function m(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function v(e) {
        return e <= 65535
          ? String.fromCharCode(e)
          : String.fromCharCode(
              ((e - 65536) >> 10) + 55296,
              ((e - 65536) & 1023) + 56320
            );
      }
      function y(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function g(e, t) {
        if (!e)
          throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
          );
        return !t || ("object" != typeof t && "function" != typeof t) ? e : t;
      }
      function b(e, t) {
        if ("function" != typeof t && null !== t)
          throw new TypeError(
            "Super expression must either be null or a function, not " +
              typeof t
          );
        (e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            enumerable: !1,
            writable: !0,
            configurable: !0,
          },
        })),
          t &&
            (Object.setPrototypeOf
              ? Object.setPrototypeOf(e, t)
              : (e.__proto__ = t));
      }
      function E(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      function x(e, t, r, n) {
        return (
          (e.type = t), (e.end = r), (e.loc.end = n), this.processComment(e), e
        );
      }
      function A(e) {
        return e[e.length - 1];
      }
      function D(e) {
        return "JSXIdentifier" === e.type
          ? e.name
          : "JSXNamespacedName" === e.type
          ? e.namespace.name + ":" + e.name.name
          : "JSXMemberExpression" === e.type
          ? D(e.object) + "." + D(e.property)
          : void 0;
      }
      function C(e, t) {
        return new $(t, e).parse();
      }
      Object.defineProperty(t, "__esModule", { value: !0 });
      var S = {
          6: r("enum await"),
          strict: r(
            "implements interface let package private protected public static yield"
          ),
          strictBind: r("eval arguments"),
        },
        _ = r(
          "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this let const class extends export import yield super"
        ),
        w =
          "ÂªÂµÂºÃ-ÃÃ-Ã¶Ã¸-ËË-ËË -Ë¤Ë¬Ë®Í°-Í´Í¶Í·Íº-Í½Í¿ÎÎ-ÎÎÎ-Î¡Î£-ÏµÏ·-ÒÒ-Ô¯Ô±-ÕÕÕ¡-Ö×-×ª×°-×²Ø -ÙÙ®Ù¯Ù±-ÛÛÛ¥Û¦Û®Û¯Ûº-Û¼Û¿ÜÜ-Ü¯Ý-Þ¥Þ±ß-ßªß´ßµßºà -à à à ¤à ¨à¡-à¡à¢ -à¢´à¢¶-à¢½à¤-à¤¹à¤½à¥à¥-à¥¡à¥±-à¦à¦-à¦à¦à¦à¦-à¦¨à¦ª-à¦°à¦²à¦¶-à¦¹à¦½à§à§à§à§-à§¡à§°à§±à¨-à¨à¨à¨à¨-à¨¨à¨ª-à¨°à¨²à¨³à¨µà¨¶à¨¸à¨¹à©-à©à©à©²-à©´àª-àªàª-àªàª-àª¨àªª-àª°àª²àª³àªµ-àª¹àª½à«à« à«¡à«¹à¬-à¬à¬à¬à¬-à¬¨à¬ª-à¬°à¬²à¬³à¬µ-à¬¹à¬½à­à­à­-à­¡à­±à®à®-à®à®-à®à®-à®à®à®à®à®à®à®£à®¤à®¨-à®ªà®®-à®¹à¯à°-à°à°-à°à°-à°¨à°ª-à°¹à°½à±-à±à± à±¡à²à²-à²à²-à²à²-à²¨à²ª-à²³à²µ-à²¹à²½à³à³ à³¡à³±à³²à´-à´à´-à´à´-à´ºà´½àµàµ-àµàµ-àµ¡àµº-àµ¿à¶-à¶à¶-à¶±à¶³-à¶»à¶½à·-à·à¸-à¸°à¸²à¸³à¹-à¹àºàºàºàºàºàºàºàº-àºàº-àºàº¡-àº£àº¥àº§àºªàº«àº­-àº°àº²àº³àº½à»-à»à»à»-à»à¼à½-à½à½-à½¬à¾-à¾á-áªá¿á-áá-áá¡á¥á¦á®-á°áµ-ááá -áááá-áºá¼-áá-áá-ááá-áá -áá-áá-á°á²-áµá¸-á¾áá-áá-áá-áá-áá-áá-áá -áµá¸-á½á-á¬á¯-á¿á-áá -áªá®-á¸á-áá-áá -á±á-áá -á¬á®-á°á-á³ááá  -á¡·á¢-á¢¨á¢ªá¢°-á£µá¤-á¤á¥-á¥­á¥°-á¥´á¦-á¦«á¦°-á§á¨-á¨á¨ -á©áª§á¬-á¬³á­-á­á®-á® á®®á®¯á®º-á¯¥á°-á°£á±-á±á±-á±½á²-á²á³©-á³¬á³®-á³±á³µá³¶á´-á¶¿á¸-á¼á¼-á¼á¼ -á½á½-á½á½-á½á½á½á½á½-á½½á¾-á¾´á¾¶-á¾¼á¾¾á¿-á¿á¿-á¿á¿-á¿á¿-á¿á¿ -á¿¬á¿²-á¿´á¿¶-á¿¼â±â¿â-ââââ-âââ-ââ¤â¦â¨âª-â¹â¼-â¿â-âââ -ââ°-â°®â°°-â±â± -â³¤â³«-â³®â³²â³³â´-â´¥â´§â´­â´°-âµ§âµ¯â¶-â¶â¶ -â¶¦â¶¨-â¶®â¶°-â¶¶â¶¸-â¶¾â·-â·â·-â·â·-â·â·-â·ã-ãã¡-ã©ã±-ãµã¸-ã¼ã-ãã-ãã¡-ãºã¼-ã¿ã-ã­ã±-ãã -ãºã°-ã¿ã-ä¶µä¸-é¿ê-êê-ê½ê-êê-êêªê«ê-ê®ê¿-êê -ê¯ê-êê¢-êê-ê®ê°-ê·ê·-ê ê -ê ê -ê ê -ê ¢ê¡-ê¡³ê¢-ê¢³ê£²-ê£·ê£»ê£½ê¤-ê¤¥ê¤°-ê¥ê¥ -ê¥¼ê¦-ê¦²ê§ê§ -ê§¤ê§¦-ê§¯ê§º-ê§¾ê¨-ê¨¨ê©-ê©ê©-ê©ê© -ê©¶ê©ºê©¾-êª¯êª±êªµêª¶êª¹-êª½ê«ê«ê«-ê«ê« -ê«ªê«²-ê«´ê¬-ê¬ê¬-ê¬ê¬-ê¬ê¬ -ê¬¦ê¬¨-ê¬®ê¬°-ê­ê­-ê­¥ê­°-ê¯¢ê°-í£í°-íí-í»ï¤-ï©­ï©°-ï«ï¬-ï¬ï¬-ï¬ï¬ï¬-ï¬¨ï¬ª-ï¬¶ï¬¸-ï¬¼ï¬¾ï­ï­ï­ï­ï­-ï®±ï¯-ï´½ïµ-ï¶ï¶-ï·ï·°-ï·»ï¹°-ï¹´ï¹¶-ï»¼ï¼¡-ï¼ºï½-ï½ï½¦-ï¾¾ï¿-ï¿ï¿-ï¿ï¿-ï¿ï¿-ï¿",
        F =
          "ââÂ·Ì-Í¯ÎÒ-ÒÖ-Ö½Ö¿×××××Ø-ØÙ-Ù©Ù°Û-ÛÛ-Û¤Û§Û¨Ûª-Û­Û°-Û¹ÜÜ°-ÝÞ¦-Þ°ß-ßß«-ß³à -à à -à £à ¥-à §à ©-à ­à¡-à¡à£-à£¡à££-à¤à¤º-à¤¼à¤¾-à¥à¥-à¥à¥¢à¥£à¥¦-à¥¯à¦-à¦à¦¼à¦¾-à§à§à§à§-à§à§à§¢à§£à§¦-à§¯à¨-à¨à¨¼à¨¾-à©à©à©à©-à©à©à©¦-à©±à©µàª-àªàª¼àª¾-à«à«-à«à«-à«à«¢à«£à«¦-à«¯à¬-à¬à¬¼à¬¾-à­à­à­à­-à­à­à­à­¢à­£à­¦-à­¯à®à®¾-à¯à¯-à¯à¯-à¯à¯à¯¦-à¯¯à°-à°à°¾-à±à±-à±à±-à±à±à±à±¢à±£à±¦-à±¯à²-à²à²¼à²¾-à³à³-à³à³-à³à³à³à³¢à³£à³¦-à³¯à´-à´à´¾-àµàµ-àµàµ-àµàµàµ¢àµ£àµ¦-àµ¯à¶à¶à·à·-à·à·à·-à·à·¦-à·¯à·²à·³à¸±à¸´-à¸ºà¹-à¹à¹-à¹àº±àº´-àº¹àº»àº¼à»-à»à»-à»à¼à¼à¼ -à¼©à¼µà¼·à¼¹à¼¾à¼¿à½±-à¾à¾à¾à¾-à¾à¾-à¾¼à¿á«-á¾á-áá-áá-á á¢-á¤á§-á­á±-á´á-áá-áá-áá©-á±á-áá²-á´ááá²á³á´-ááá -á©á -á á -á á¢©á¤ -á¤«á¤°-á¤»á¥-á¥á§-á§á¨-á¨á©-á©á© -á©¼á©¿-áªáª-áªáª°-áª½á¬-á¬á¬´-á­á­-á­á­«-á­³á®-á®á®¡-á®­á®°-á®¹á¯¦-á¯³á°¤-á°·á±-á±á±-á±á³-á³á³-á³¨á³­á³²-á³´á³¸á³¹á·-á·µá·»-á·¿â¿âââ-ââ¡â¥-â°â³¯-â³±âµ¿â· -â·¿ãª-ã¯ããê -ê©ê¯ê´-ê½êêê°ê±ê ê ê ê £-ê §ê¢ê¢ê¢´-ê£ê£-ê£ê£ -ê£±ê¤-ê¤ê¤¦-ê¤­ê¥-ê¥ê¦-ê¦ê¦³-ê§ê§-ê§ê§¥ê§°-ê§¹ê¨©-ê¨¶ê©ê©ê©ê©-ê©ê©»-ê©½êª°êª²-êª´êª·êª¸êª¾êª¿ê«ê««-ê«¯ê«µê«¶ê¯£-ê¯ªê¯¬ê¯­ê¯°-ê¯¹ï¬ï¸-ï¸ï¸ -ï¸¯ï¸³ï¸´ï¹-ï¹ï¼-ï¼ï¼¿",
        k = new RegExp("[" + w + "]"),
        P = new RegExp("[" + w + F + "]");
      w = F = null;
      var T = [
          0,
          11,
          2,
          25,
          2,
          18,
          2,
          1,
          2,
          14,
          3,
          13,
          35,
          122,
          70,
          52,
          268,
          28,
          4,
          48,
          48,
          31,
          17,
          26,
          6,
          37,
          11,
          29,
          3,
          35,
          5,
          7,
          2,
          4,
          43,
          157,
          19,
          35,
          5,
          35,
          5,
          39,
          9,
          51,
          157,
          310,
          10,
          21,
          11,
          7,
          153,
          5,
          3,
          0,
          2,
          43,
          2,
          1,
          4,
          0,
          3,
          22,
          11,
          22,
          10,
          30,
          66,
          18,
          2,
          1,
          11,
          21,
          11,
          25,
          71,
          55,
          7,
          1,
          65,
          0,
          16,
          3,
          2,
          2,
          2,
          26,
          45,
          28,
          4,
          28,
          36,
          7,
          2,
          27,
          28,
          53,
          11,
          21,
          11,
          18,
          14,
          17,
          111,
          72,
          56,
          50,
          14,
          50,
          785,
          52,
          76,
          44,
          33,
          24,
          27,
          35,
          42,
          34,
          4,
          0,
          13,
          47,
          15,
          3,
          22,
          0,
          2,
          0,
          36,
          17,
          2,
          24,
          85,
          6,
          2,
          0,
          2,
          3,
          2,
          14,
          2,
          9,
          8,
          46,
          39,
          7,
          3,
          1,
          3,
          21,
          2,
          6,
          2,
          1,
          2,
          4,
          4,
          0,
          19,
          0,
          13,
          4,
          159,
          52,
          19,
          3,
          54,
          47,
          21,
          1,
          2,
          0,
          185,
          46,
          42,
          3,
          37,
          47,
          21,
          0,
          60,
          42,
          86,
          25,
          391,
          63,
          32,
          0,
          449,
          56,
          264,
          8,
          2,
          36,
          18,
          0,
          50,
          29,
          881,
          921,
          103,
          110,
          18,
          195,
          2749,
          1070,
          4050,
          582,
          8634,
          568,
          8,
          30,
          114,
          29,
          19,
          47,
          17,
          3,
          32,
          20,
          6,
          18,
          881,
          68,
          12,
          0,
          67,
          12,
          65,
          0,
          32,
          6124,
          20,
          754,
          9486,
          1,
          3071,
          106,
          6,
          12,
          4,
          8,
          8,
          9,
          5991,
          84,
          2,
          70,
          2,
          1,
          3,
          0,
          3,
          1,
          3,
          3,
          2,
          11,
          2,
          0,
          2,
          6,
          2,
          64,
          2,
          3,
          3,
          7,
          2,
          6,
          2,
          27,
          2,
          3,
          2,
          4,
          2,
          0,
          4,
          6,
          2,
          339,
          3,
          24,
          2,
          24,
          2,
          30,
          2,
          24,
          2,
          30,
          2,
          24,
          2,
          30,
          2,
          24,
          2,
          30,
          2,
          24,
          2,
          7,
          4149,
          196,
          60,
          67,
          1213,
          3,
          2,
          26,
          2,
          1,
          2,
          0,
          3,
          0,
          2,
          9,
          2,
          3,
          2,
          0,
          2,
          0,
          7,
          0,
          5,
          0,
          2,
          0,
          2,
          0,
          2,
          2,
          2,
          1,
          2,
          0,
          3,
          0,
          2,
          0,
          2,
          0,
          2,
          0,
          2,
          0,
          2,
          1,
          2,
          0,
          3,
          3,
          2,
          6,
          2,
          3,
          2,
          3,
          2,
          0,
          2,
          9,
          2,
          16,
          6,
          2,
          2,
          4,
          2,
          16,
          4421,
          42710,
          42,
          4148,
          12,
          221,
          3,
          5761,
          10591,
          541,
        ],
        O = [
          509,
          0,
          227,
          0,
          150,
          4,
          294,
          9,
          1368,
          2,
          2,
          1,
          6,
          3,
          41,
          2,
          5,
          0,
          166,
          1,
          1306,
          2,
          54,
          14,
          32,
          9,
          16,
          3,
          46,
          10,
          54,
          9,
          7,
          2,
          37,
          13,
          2,
          9,
          52,
          0,
          13,
          2,
          49,
          13,
          10,
          2,
          4,
          9,
          83,
          11,
          7,
          0,
          161,
          11,
          6,
          9,
          7,
          3,
          57,
          0,
          2,
          6,
          3,
          1,
          3,
          2,
          10,
          0,
          11,
          1,
          3,
          6,
          4,
          4,
          193,
          17,
          10,
          9,
          87,
          19,
          13,
          9,
          214,
          6,
          3,
          8,
          28,
          1,
          83,
          16,
          16,
          9,
          82,
          12,
          9,
          9,
          84,
          14,
          5,
          9,
          423,
          9,
          838,
          7,
          2,
          7,
          17,
          9,
          57,
          21,
          2,
          13,
          19882,
          9,
          135,
          4,
          60,
          6,
          26,
          9,
          1016,
          45,
          17,
          3,
          19723,
          1,
          5319,
          4,
          4,
          5,
          9,
          7,
          3,
          6,
          31,
          3,
          149,
          2,
          1418,
          49,
          513,
          54,
          5,
          49,
          9,
          0,
          15,
          0,
          23,
          4,
          2,
          14,
          1361,
          6,
          2,
          16,
          3,
          6,
          2,
          1,
          2,
          4,
          2214,
          6,
          110,
          6,
          6,
          9,
          792487,
          239,
        ],
        B = {
          sourceType: "script",
          sourceFilename: void 0,
          allowReturnOutsideFunction: !1,
          allowImportExportEverywhere: !1,
          allowSuperOutsideMethod: !1,
          plugins: [],
          strictMode: null,
        },
        I = function e(t) {
          var r =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          o(this, e),
            (this.label = t),
            (this.keyword = r.keyword),
            (this.beforeExpr = !!r.beforeExpr),
            (this.startsExpr = !!r.startsExpr),
            (this.rightAssociative = !!r.rightAssociative),
            (this.isLoop = !!r.isLoop),
            (this.isAssign = !!r.isAssign),
            (this.prefix = !!r.prefix),
            (this.postfix = !!r.postfix),
            (this.binop = r.binop || null),
            (this.updateContext = null);
        },
        N = { beforeExpr: !0 },
        M = { startsExpr: !0 },
        R = {
          num: new I("num", M),
          regexp: new I("regexp", M),
          string: new I("string", M),
          name: new I("name", M),
          eof: new I("eof"),
          bracketL: new I("[", { beforeExpr: !0, startsExpr: !0 }),
          bracketR: new I("]"),
          braceL: new I("{", { beforeExpr: !0, startsExpr: !0 }),
          braceBarL: new I("{|", { beforeExpr: !0, startsExpr: !0 }),
          braceR: new I("}"),
          braceBarR: new I("|}"),
          parenL: new I("(", { beforeExpr: !0, startsExpr: !0 }),
          parenR: new I(")"),
          comma: new I(",", N),
          semi: new I(";", N),
          colon: new I(":", N),
          doubleColon: new I("::", N),
          dot: new I("."),
          question: new I("?", N),
          arrow: new I("=>", N),
          template: new I("template"),
          ellipsis: new I("...", N),
          backQuote: new I("`", M),
          dollarBraceL: new I("${", { beforeExpr: !0, startsExpr: !0 }),
          at: new I("@"),
          eq: new I("=", { beforeExpr: !0, isAssign: !0 }),
          assign: new I("_=", { beforeExpr: !0, isAssign: !0 }),
          incDec: new I("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
          prefix: new I("prefix", {
            beforeExpr: !0,
            prefix: !0,
            startsExpr: !0,
          }),
          logicalOR: u("||", 1),
          logicalAND: u("&&", 2),
          bitwiseOR: u("|", 3),
          bitwiseXOR: u("^", 4),
          bitwiseAND: u("&", 5),
          equality: u("==/!=", 6),
          relational: u("</>", 7),
          bitShift: u("<</>>", 8),
          plusMin: new I("+/-", {
            beforeExpr: !0,
            binop: 9,
            prefix: !0,
            startsExpr: !0,
          }),
          modulo: u("%", 10),
          star: u("*", 10),
          slash: u("/", 10),
          exponent: new I("**", {
            beforeExpr: !0,
            binop: 11,
            rightAssociative: !0,
          }),
        },
        L = {};
      l("break"),
        l("case", N),
        l("catch"),
        l("continue"),
        l("debugger"),
        l("default", N),
        l("do", { isLoop: !0, beforeExpr: !0 }),
        l("else", N),
        l("finally"),
        l("for", { isLoop: !0 }),
        l("function", M),
        l("if"),
        l("return", N),
        l("switch"),
        l("throw", N),
        l("try"),
        l("var"),
        l("let"),
        l("const"),
        l("while", { isLoop: !0 }),
        l("with"),
        l("new", { beforeExpr: !0, startsExpr: !0 }),
        l("this", M),
        l("super", M),
        l("class"),
        l("extends", N),
        l("export"),
        l("import"),
        l("yield", { beforeExpr: !0, startsExpr: !0 }),
        l("null", M),
        l("true", M),
        l("false", M),
        l("in", { beforeExpr: !0, binop: 7 }),
        l("instanceof", { beforeExpr: !0, binop: 7 }),
        l("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
        l("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
        l("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 });
      var j = /\r\n?|\n|\u2028|\u2029/,
        V = new RegExp(j.source, "g"),
        U = /[\u1680\u180e\u2000-\u200a\u202f\u205f\u3000\ufeff]/,
        G = function e(t, r, n, i) {
          f(this, e),
            (this.token = t),
            (this.isExpr = !!r),
            (this.preserveSpace = !!n),
            (this.override = i);
        },
        W = {
          braceStatement: new G("{", !1),
          braceExpression: new G("{", !0),
          templateQuasi: new G("${", !0),
          parenStatement: new G("(", !1),
          parenExpression: new G("(", !0),
          template: new G("`", !0, !0, function (e) {
            return e.readTmplToken();
          }),
          functionExpression: new G("function", !0),
        };
      (R.parenR.updateContext = R.braceR.updateContext = function () {
        if (1 === this.state.context.length)
          return void (this.state.exprAllowed = !0);
        var e = this.state.context.pop();
        e === W.braceStatement && this.curContext() === W.functionExpression
          ? (this.state.context.pop(), (this.state.exprAllowed = !1))
          : e === W.templateQuasi
          ? (this.state.exprAllowed = !0)
          : (this.state.exprAllowed = !e.isExpr);
      }),
        (R.name.updateContext = function (e) {
          (this.state.exprAllowed = !1),
            (e !== R._let && e !== R._const && e !== R._var) ||
              (j.test(this.input.slice(this.state.end)) &&
                (this.state.exprAllowed = !0));
        }),
        (R.braceL.updateContext = function (e) {
          this.state.context.push(
            this.braceIsBlock(e) ? W.braceStatement : W.braceExpression
          ),
            (this.state.exprAllowed = !0);
        }),
        (R.dollarBraceL.updateContext = function () {
          this.state.context.push(W.templateQuasi),
            (this.state.exprAllowed = !0);
        }),
        (R.parenL.updateContext = function (e) {
          var t =
            e === R._if || e === R._for || e === R._with || e === R._while;
          this.state.context.push(t ? W.parenStatement : W.parenExpression),
            (this.state.exprAllowed = !0);
        }),
        (R.incDec.updateContext = function () {}),
        (R._function.updateContext = function () {
          this.curContext() !== W.braceStatement &&
            this.state.context.push(W.functionExpression),
            (this.state.exprAllowed = !1);
        }),
        (R.backQuote.updateContext = function () {
          this.curContext() === W.template
            ? this.state.context.pop()
            : this.state.context.push(W.template),
            (this.state.exprAllowed = !1);
        });
      var Y = function e(t, r) {
          p(this, e), (this.line = t), (this.column = r);
        },
        q = function e(t, r) {
          p(this, e), (this.start = t), (this.end = r);
        },
        K = (function () {
          function e() {
            d(this, e);
          }
          return (
            (e.prototype.init = function (e, t) {
              return (
                (this.strict =
                  e.strictMode !== !1 && "module" === e.sourceType),
                (this.input = t),
                (this.potentialArrowAt = -1),
                (this.inMethod = this.inFunction = this.inGenerator = this.inAsync = this.inType = this.noAnonFunctionType = !1),
                (this.labels = []),
                (this.decorators = []),
                (this.tokens = []),
                (this.comments = []),
                (this.trailingComments = []),
                (this.leadingComments = []),
                (this.commentStack = []),
                (this.pos = this.lineStart = 0),
                (this.curLine = 1),
                (this.type = R.eof),
                (this.value = null),
                (this.start = this.end = this.pos),
                (this.startLoc = this.endLoc = this.curPosition()),
                (this.lastTokEndLoc = this.lastTokStartLoc = null),
                (this.lastTokStart = this.lastTokEnd = this.pos),
                (this.context = [W.braceStatement]),
                (this.exprAllowed = !0),
                (this.containsEsc = this.containsOctal = !1),
                (this.octalPosition = null),
                (this.exportedIdentifiers = []),
                this
              );
            }),
            (e.prototype.curPosition = function () {
              return new Y(this.curLine, this.pos - this.lineStart);
            }),
            (e.prototype.clone = function (t) {
              var r = new e();
              for (var n in this) {
                var i = this[n];
                (t && "context" !== n) || !Array.isArray(i) || (i = i.slice()),
                  (r[n] = i);
              }
              return r;
            }),
            e
          );
        })(),
        H = function e(t) {
          m(this, e),
            (this.type = t.type),
            (this.value = t.value),
            (this.start = t.start),
            (this.end = t.end),
            (this.loc = new q(t.startLoc, t.endLoc));
        },
        J = (function () {
          function e(t, r) {
            m(this, e), (this.state = new K()), this.state.init(t, r);
          }
          return (
            (e.prototype.next = function () {
              this.isLookahead || this.state.tokens.push(new H(this.state)),
                (this.state.lastTokEnd = this.state.end),
                (this.state.lastTokStart = this.state.start),
                (this.state.lastTokEndLoc = this.state.endLoc),
                (this.state.lastTokStartLoc = this.state.startLoc),
                this.nextToken();
            }),
            (e.prototype.eat = function (e) {
              return !!this.match(e) && (this.next(), !0);
            }),
            (e.prototype.match = function (e) {
              return this.state.type === e;
            }),
            (e.prototype.isKeyword = function (e) {
              return _(e);
            }),
            (e.prototype.lookahead = function () {
              var e = this.state;
              (this.state = e.clone(!0)),
                (this.isLookahead = !0),
                this.next(),
                (this.isLookahead = !1);
              var t = this.state.clone(!0);
              return (this.state = e), t;
            }),
            (e.prototype.setStrict = function (e) {
              if (
                ((this.state.strict = e),
                this.match(R.num) || this.match(R.string))
              ) {
                for (
                  this.state.pos = this.state.start;
                  this.state.pos < this.state.lineStart;

                )
                  (this.state.lineStart =
                    this.input.lastIndexOf("\n", this.state.lineStart - 2) + 1),
                    --this.state.curLine;
                this.nextToken();
              }
            }),
            (e.prototype.curContext = function () {
              return this.state.context[this.state.context.length - 1];
            }),
            (e.prototype.nextToken = function () {
              var e = this.curContext();
              return (
                (e && e.preserveSpace) || this.skipSpace(),
                (this.state.containsOctal = !1),
                (this.state.octalPosition = null),
                (this.state.start = this.state.pos),
                (this.state.startLoc = this.state.curPosition()),
                this.state.pos >= this.input.length
                  ? this.finishToken(R.eof)
                  : e.override
                  ? e.override(this)
                  : this.readToken(this.fullCharCodeAtPos())
              );
            }),
            (e.prototype.readToken = function (e) {
              return i(e) || 92 === e
                ? this.readWord()
                : this.getTokenFromCode(e);
            }),
            (e.prototype.fullCharCodeAtPos = function () {
              var e = this.input.charCodeAt(this.state.pos);
              if (e <= 55295 || e >= 57344) return e;
              var t = this.input.charCodeAt(this.state.pos + 1);
              return (e << 10) + t - 56613888;
            }),
            (e.prototype.pushComment = function (e, t, r, n, i, s) {
              var a = {
                type: e ? "CommentBlock" : "CommentLine",
                value: t,
                start: r,
                end: n,
                loc: new q(i, s),
              };
              this.isLookahead ||
                (this.state.tokens.push(a),
                this.state.comments.push(a),
                this.addComment(a));
            }),
            (e.prototype.skipBlockComment = function () {
              var e = this.state.curPosition(),
                t = this.state.pos,
                r = this.input.indexOf("*/", (this.state.pos += 2));
              r === -1 &&
                this.raise(this.state.pos - 2, "Unterminated comment"),
                (this.state.pos = r + 2),
                (V.lastIndex = t);
              for (
                var n = void 0;
                (n = V.exec(this.input)) && n.index < this.state.pos;

              )
                ++this.state.curLine,
                  (this.state.lineStart = n.index + n[0].length);
              this.pushComment(
                !0,
                this.input.slice(t + 2, r),
                t,
                this.state.pos,
                e,
                this.state.curPosition()
              );
            }),
            (e.prototype.skipLineComment = function (e) {
              for (
                var t = this.state.pos,
                  r = this.state.curPosition(),
                  n = this.input.charCodeAt((this.state.pos += e));
                this.state.pos < this.input.length &&
                10 !== n &&
                13 !== n &&
                8232 !== n &&
                8233 !== n;

              )
                ++this.state.pos, (n = this.input.charCodeAt(this.state.pos));
              this.pushComment(
                !1,
                this.input.slice(t + e, this.state.pos),
                t,
                this.state.pos,
                r,
                this.state.curPosition()
              );
            }),
            (e.prototype.skipSpace = function () {
              e: for (; this.state.pos < this.input.length; ) {
                var e = this.input.charCodeAt(this.state.pos);
                switch (e) {
                  case 32:
                  case 160:
                    ++this.state.pos;
                    break;
                  case 13:
                    10 === this.input.charCodeAt(this.state.pos + 1) &&
                      ++this.state.pos;
                  case 10:
                  case 8232:
                  case 8233:
                    ++this.state.pos,
                      ++this.state.curLine,
                      (this.state.lineStart = this.state.pos);
                    break;
                  case 47:
                    switch (this.input.charCodeAt(this.state.pos + 1)) {
                      case 42:
                        this.skipBlockComment();
                        break;
                      case 47:
                        this.skipLineComment(2);
                        break;
                      default:
                        break e;
                    }
                    break;
                  default:
                    if (
                      !(
                        (e > 8 && e < 14) ||
                        (e >= 5760 && U.test(String.fromCharCode(e)))
                      )
                    )
                      break e;
                    ++this.state.pos;
                }
              }
            }),
            (e.prototype.finishToken = function (e, t) {
              (this.state.end = this.state.pos),
                (this.state.endLoc = this.state.curPosition());
              var r = this.state.type;
              (this.state.type = e),
                (this.state.value = t),
                this.updateContext(r);
            }),
            (e.prototype.readToken_dot = function () {
              var e = this.input.charCodeAt(this.state.pos + 1);
              if (e >= 48 && e <= 57) return this.readNumber(!0);
              var t = this.input.charCodeAt(this.state.pos + 2);
              return 46 === e && 46 === t
                ? ((this.state.pos += 3), this.finishToken(R.ellipsis))
                : (++this.state.pos, this.finishToken(R.dot));
            }),
            (e.prototype.readToken_slash = function () {
              if (this.state.exprAllowed)
                return ++this.state.pos, this.readRegexp();
              var e = this.input.charCodeAt(this.state.pos + 1);
              return 61 === e
                ? this.finishOp(R.assign, 2)
                : this.finishOp(R.slash, 1);
            }),
            (e.prototype.readToken_mult_modulo = function (e) {
              var t = 42 === e ? R.star : R.modulo,
                r = 1,
                n = this.input.charCodeAt(this.state.pos + 1);
              return (
                42 === n &&
                  (r++,
                  (n = this.input.charCodeAt(this.state.pos + 2)),
                  (t = R.exponent)),
                61 === n && (r++, (t = R.assign)),
                this.finishOp(t, r)
              );
            }),
            (e.prototype.readToken_pipe_amp = function (e) {
              var t = this.input.charCodeAt(this.state.pos + 1);
              return t === e
                ? this.finishOp(124 === e ? R.logicalOR : R.logicalAND, 2)
                : 61 === t
                ? this.finishOp(R.assign, 2)
                : 124 === e && 125 === t && this.hasPlugin("flow")
                ? this.finishOp(R.braceBarR, 2)
                : this.finishOp(124 === e ? R.bitwiseOR : R.bitwiseAND, 1);
            }),
            (e.prototype.readToken_caret = function () {
              var e = this.input.charCodeAt(this.state.pos + 1);
              return 61 === e
                ? this.finishOp(R.assign, 2)
                : this.finishOp(R.bitwiseXOR, 1);
            }),
            (e.prototype.readToken_plus_min = function (e) {
              var t = this.input.charCodeAt(this.state.pos + 1);
              return t === e
                ? 45 === t &&
                  62 === this.input.charCodeAt(this.state.pos + 2) &&
                  j.test(
                    this.input.slice(this.state.lastTokEnd, this.state.pos)
                  )
                  ? (this.skipLineComment(3),
                    this.skipSpace(),
                    this.nextToken())
                  : this.finishOp(R.incDec, 2)
                : 61 === t
                ? this.finishOp(R.assign, 2)
                : this.finishOp(R.plusMin, 1);
            }),
            (e.prototype.readToken_lt_gt = function (e) {
              var t = this.input.charCodeAt(this.state.pos + 1),
                r = 1;
              return t === e
                ? ((r =
                    62 === e && 62 === this.input.charCodeAt(this.state.pos + 2)
                      ? 3
                      : 2),
                  61 === this.input.charCodeAt(this.state.pos + r)
                    ? this.finishOp(R.assign, r + 1)
                    : this.finishOp(R.bitShift, r))
                : 33 === t &&
                  60 === e &&
                  45 === this.input.charCodeAt(this.state.pos + 2) &&
                  45 === this.input.charCodeAt(this.state.pos + 3)
                ? (this.inModule && this.unexpected(),
                  this.skipLineComment(4),
                  this.skipSpace(),
                  this.nextToken())
                : (61 === t && (r = 2), this.finishOp(R.relational, r));
            }),
            (e.prototype.readToken_eq_excl = function (e) {
              var t = this.input.charCodeAt(this.state.pos + 1);
              return 61 === t
                ? this.finishOp(
                    R.equality,
                    61 === this.input.charCodeAt(this.state.pos + 2) ? 3 : 2
                  )
                : 61 === e && 62 === t
                ? ((this.state.pos += 2), this.finishToken(R.arrow))
                : this.finishOp(61 === e ? R.eq : R.prefix, 1);
            }),
            (e.prototype.getTokenFromCode = function (e) {
              switch (e) {
                case 46:
                  return this.readToken_dot();
                case 40:
                  return ++this.state.pos, this.finishToken(R.parenL);
                case 41:
                  return ++this.state.pos, this.finishToken(R.parenR);
                case 59:
                  return ++this.state.pos, this.finishToken(R.semi);
                case 44:
                  return ++this.state.pos, this.finishToken(R.comma);
                case 91:
                  return ++this.state.pos, this.finishToken(R.bracketL);
                case 93:
                  return ++this.state.pos, this.finishToken(R.bracketR);
                case 123:
                  return this.hasPlugin("flow") &&
                    124 === this.input.charCodeAt(this.state.pos + 1)
                    ? this.finishOp(R.braceBarL, 2)
                    : (++this.state.pos, this.finishToken(R.braceL));
                case 125:
                  return ++this.state.pos, this.finishToken(R.braceR);
                case 58:
                  return this.hasPlugin("functionBind") &&
                    58 === this.input.charCodeAt(this.state.pos + 1)
                    ? this.finishOp(R.doubleColon, 2)
                    : (++this.state.pos, this.finishToken(R.colon));
                case 63:
                  return ++this.state.pos, this.finishToken(R.question);
                case 64:
                  return ++this.state.pos, this.finishToken(R.at);
                case 96:
                  return ++this.state.pos, this.finishToken(R.backQuote);
                case 48:
                  var t = this.input.charCodeAt(this.state.pos + 1);
                  if (120 === t || 88 === t) return this.readRadixNumber(16);
                  if (111 === t || 79 === t) return this.readRadixNumber(8);
                  if (98 === t || 66 === t) return this.readRadixNumber(2);
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                  return this.readNumber(!1);
                case 34:
                case 39:
                  return this.readString(e);
                case 47:
                  return this.readToken_slash();
                case 37:
                case 42:
                  return this.readToken_mult_modulo(e);
                case 124:
                case 38:
                  return this.readToken_pipe_amp(e);
                case 94:
                  return this.readToken_caret();
                case 43:
                case 45:
                  return this.readToken_plus_min(e);
                case 60:
                case 62:
                  return this.readToken_lt_gt(e);
                case 61:
                case 33:
                  return this.readToken_eq_excl(e);
                case 126:
                  return this.finishOp(R.prefix, 1);
              }
              this.raise(this.state.pos, "Unexpected character '" + v(e) + "'");
            }),
            (e.prototype.finishOp = function (e, t) {
              var r = this.input.slice(this.state.pos, this.state.pos + t);
              return (this.state.pos += t), this.finishToken(e, r);
            }),
            (e.prototype.readRegexp = function () {
              for (var e = void 0, t = void 0, r = this.state.pos; ; ) {
                this.state.pos >= this.input.length &&
                  this.raise(r, "Unterminated regular expression");
                var n = this.input.charAt(this.state.pos);
                if (
                  (j.test(n) &&
                    this.raise(r, "Unterminated regular expression"),
                  e)
                )
                  e = !1;
                else {
                  if ("[" === n) t = !0;
                  else if ("]" === n && t) t = !1;
                  else if ("/" === n && !t) break;
                  e = "\\" === n;
                }
                ++this.state.pos;
              }
              var i = this.input.slice(r, this.state.pos);
              ++this.state.pos;
              var s = this.readWord1();
              if (s) {
                var a = /^[gmsiyu]*$/;
                a.test(s) || this.raise(r, "Invalid regular expression flag");
              }
              return this.finishToken(R.regexp, { pattern: i, flags: s });
            }),
            (e.prototype.readInt = function (e, t) {
              for (
                var r = this.state.pos, n = 0, i = 0, s = null == t ? 1 / 0 : t;
                i < s;
                ++i
              ) {
                var a = this.input.charCodeAt(this.state.pos),
                  o = void 0;
                if (
                  ((o =
                    a >= 97
                      ? a - 97 + 10
                      : a >= 65
                      ? a - 65 + 10
                      : a >= 48 && a <= 57
                      ? a - 48
                      : 1 / 0),
                  o >= e)
                )
                  break;
                ++this.state.pos, (n = n * e + o);
              }
              return this.state.pos === r ||
                (null != t && this.state.pos - r !== t)
                ? null
                : n;
            }),
            (e.prototype.readRadixNumber = function (e) {
              this.state.pos += 2;
              var t = this.readInt(e);
              return (
                null == t &&
                  this.raise(
                    this.state.start + 2,
                    "Expected number in radix " + e
                  ),
                i(this.fullCharCodeAtPos()) &&
                  this.raise(
                    this.state.pos,
                    "Identifier directly after number"
                  ),
                this.finishToken(R.num, t)
              );
            }),
            (e.prototype.readNumber = function (e) {
              var t = this.state.pos,
                r = !1,
                n = 48 === this.input.charCodeAt(this.state.pos);
              e || null !== this.readInt(10) || this.raise(t, "Invalid number");
              var s = this.input.charCodeAt(this.state.pos);
              46 === s &&
                (++this.state.pos,
                this.readInt(10),
                (r = !0),
                (s = this.input.charCodeAt(this.state.pos))),
                (69 !== s && 101 !== s) ||
                  ((s = this.input.charCodeAt(++this.state.pos)),
                  (43 !== s && 45 !== s) || ++this.state.pos,
                  null === this.readInt(10) && this.raise(t, "Invalid number"),
                  (r = !0)),
                i(this.fullCharCodeAtPos()) &&
                  this.raise(
                    this.state.pos,
                    "Identifier directly after number"
                  );
              var a = this.input.slice(t, this.state.pos),
                o = void 0;
              return (
                r
                  ? (o = parseFloat(a))
                  : n && 1 !== a.length
                  ? /[89]/.test(a) || this.state.strict
                    ? this.raise(t, "Invalid number")
                    : (o = parseInt(a, 8))
                  : (o = parseInt(a, 10)),
                this.finishToken(R.num, o)
              );
            }),
            (e.prototype.readCodePoint = function () {
              var e = this.input.charCodeAt(this.state.pos),
                t = void 0;
              if (123 === e) {
                var r = ++this.state.pos;
                (t = this.readHexChar(
                  this.input.indexOf("}", this.state.pos) - this.state.pos
                )),
                  ++this.state.pos,
                  t > 1114111 && this.raise(r, "Code point out of bounds");
              } else t = this.readHexChar(4);
              return t;
            }),
            (e.prototype.readString = function (e) {
              for (var t = "", r = ++this.state.pos; ; ) {
                this.state.pos >= this.input.length &&
                  this.raise(this.state.start, "Unterminated string constant");
                var n = this.input.charCodeAt(this.state.pos);
                if (n === e) break;
                92 === n
                  ? ((t += this.input.slice(r, this.state.pos)),
                    (t += this.readEscapedChar(!1)),
                    (r = this.state.pos))
                  : (c(n) &&
                      this.raise(
                        this.state.start,
                        "Unterminated string constant"
                      ),
                    ++this.state.pos);
              }
              return (
                (t += this.input.slice(r, this.state.pos++)),
                this.finishToken(R.string, t)
              );
            }),
            (e.prototype.readTmplToken = function () {
              for (var e = "", t = this.state.pos; ; ) {
                this.state.pos >= this.input.length &&
                  this.raise(this.state.start, "Unterminated template");
                var r = this.input.charCodeAt(this.state.pos);
                if (
                  96 === r ||
                  (36 === r &&
                    123 === this.input.charCodeAt(this.state.pos + 1))
                )
                  return this.state.pos === this.state.start &&
                    this.match(R.template)
                    ? 36 === r
                      ? ((this.state.pos += 2),
                        this.finishToken(R.dollarBraceL))
                      : (++this.state.pos, this.finishToken(R.backQuote))
                    : ((e += this.input.slice(t, this.state.pos)),
                      this.finishToken(R.template, e));
                if (92 === r)
                  (e += this.input.slice(t, this.state.pos)),
                    (e += this.readEscapedChar(!0)),
                    (t = this.state.pos);
                else if (c(r)) {
                  switch (
                    ((e += this.input.slice(t, this.state.pos)),
                    ++this.state.pos,
                    r)
                  ) {
                    case 13:
                      10 === this.input.charCodeAt(this.state.pos) &&
                        ++this.state.pos;
                    case 10:
                      e += "\n";
                      break;
                    default:
                      e += String.fromCharCode(r);
                  }
                  ++this.state.curLine,
                    (this.state.lineStart = this.state.pos),
                    (t = this.state.pos);
                } else ++this.state.pos;
              }
            }),
            (e.prototype.readEscapedChar = function (e) {
              var t = this.input.charCodeAt(++this.state.pos);
              switch ((++this.state.pos, t)) {
                case 110:
                  return "\n";
                case 114:
                  return "\r";
                case 120:
                  return String.fromCharCode(this.readHexChar(2));
                case 117:
                  return v(this.readCodePoint());
                case 116:
                  return "\t";
                case 98:
                  return "\b";
                case 118:
                  return "\v";
                case 102:
                  return "\f";
                case 13:
                  10 === this.input.charCodeAt(this.state.pos) &&
                    ++this.state.pos;
                case 10:
                  return (
                    (this.state.lineStart = this.state.pos),
                    ++this.state.curLine,
                    ""
                  );
                default:
                  if (t >= 48 && t <= 55) {
                    var r = this.input
                        .substr(this.state.pos - 1, 3)
                        .match(/^[0-7]+/)[0],
                      n = parseInt(r, 8);
                    return (
                      n > 255 && ((r = r.slice(0, -1)), (n = parseInt(r, 8))),
                      n > 0 &&
                        (this.state.containsOctal ||
                          ((this.state.containsOctal = !0),
                          (this.state.octalPosition = this.state.pos - 2)),
                        (this.state.strict || e) &&
                          this.raise(
                            this.state.pos - 2,
                            "Octal literal in strict mode"
                          )),
                      (this.state.pos += r.length - 1),
                      String.fromCharCode(n)
                    );
                  }
                  return String.fromCharCode(t);
              }
            }),
            (e.prototype.readHexChar = function (e) {
              var t = this.state.pos,
                r = this.readInt(16, e);
              return (
                null === r && this.raise(t, "Bad character escape sequence"), r
              );
            }),
            (e.prototype.readWord1 = function () {
              this.state.containsEsc = !1;
              for (
                var e = "", t = !0, r = this.state.pos;
                this.state.pos < this.input.length;

              ) {
                var n = this.fullCharCodeAtPos();
                if (s(n)) this.state.pos += n <= 65535 ? 1 : 2;
                else {
                  if (92 !== n) break;
                  (this.state.containsEsc = !0),
                    (e += this.input.slice(r, this.state.pos));
                  var a = this.state.pos;
                  117 !== this.input.charCodeAt(++this.state.pos) &&
                    this.raise(
                      this.state.pos,
                      "Expecting Unicode escape sequence \\uXXXX"
                    ),
                    ++this.state.pos;
                  var o = this.readCodePoint();
                  (t ? i : s)(o, !0) || this.raise(a, "Invalid Unicode escape"),
                    (e += v(o)),
                    (r = this.state.pos);
                }
                t = !1;
              }
              return e + this.input.slice(r, this.state.pos);
            }),
            (e.prototype.readWord = function () {
              var e = this.readWord1(),
                t = R.name;
              return (
                !this.state.containsEsc && this.isKeyword(e) && (t = L[e]),
                this.finishToken(t, e)
              );
            }),
            (e.prototype.braceIsBlock = function (e) {
              if (e === R.colon) {
                var t = this.curContext();
                if (t === W.braceStatement || t === W.braceExpression)
                  return !t.isExpr;
              }
              return e === R._return
                ? j.test(
                    this.input.slice(this.state.lastTokEnd, this.state.start)
                  )
                : e === R._else ||
                    e === R.semi ||
                    e === R.eof ||
                    e === R.parenR ||
                    (e === R.braceL
                      ? this.curContext() === W.braceStatement
                      : !this.state.exprAllowed);
            }),
            (e.prototype.updateContext = function (e) {
              var t = void 0,
                r = this.state.type;
              r.keyword && e === R.dot
                ? (this.state.exprAllowed = !1)
                : (t = r.updateContext)
                ? t.call(this, e)
                : (this.state.exprAllowed = r.beforeExpr);
            }),
            e
          );
        })(),
        X = {},
        $ = (function (e) {
          function t(r, n) {
            y(this, t), (r = a(r));
            var i = g(this, e.call(this, r, n));
            return (
              (i.options = r),
              (i.inModule = "module" === i.options.sourceType),
              (i.input = n),
              (i.plugins = i.loadPlugins(i.options.plugins)),
              (i.filename = r.sourceFilename),
              0 === i.state.pos &&
                "#" === i.input[0] &&
                "!" === i.input[1] &&
                i.skipLineComment(2),
              i
            );
          }
          return (
            b(t, e),
            (t.prototype.isReservedWord = function (e) {
              return "await" === e ? this.inModule : S[6](e);
            }),
            (t.prototype.hasPlugin = function (e) {
              return !(!this.plugins["*"] && !this.plugins[e]);
            }),
            (t.prototype.extend = function (e, t) {
              this[e] = t(this[e]);
            }),
            (t.prototype.loadAllPlugins = function () {
              var e = this,
                t = Object.keys(X).filter(function (e) {
                  return "flow" !== e;
                });
              t.push("flow"),
                t.forEach(function (t) {
                  var r = X[t];
                  r && r(e);
                });
            }),
            (t.prototype.loadPlugins = function (e) {
              if (e.indexOf("*") >= 0)
                return this.loadAllPlugins(), { "*": !0 };
              var t = {};
              e.indexOf("flow") >= 0 &&
                ((e = e.filter(function (e) {
                  return "flow" !== e;
                })),
                e.push("flow"));
              for (
                var r = e,
                  n = Array.isArray(r),
                  i = 0,
                  r = n ? r : r[Symbol.iterator]();
                ;

              ) {
                var s;
                if (n) {
                  if (i >= r.length) break;
                  s = r[i++];
                } else {
                  if (((i = r.next()), i.done)) break;
                  s = i.value;
                }
                var a = s;
                if (!t[a]) {
                  t[a] = !0;
                  var o = X[a];
                  o && o(this);
                }
              }
              return t;
            }),
            (t.prototype.parse = function () {
              var e = this.startNode(),
                t = this.startNode();
              return this.nextToken(), this.parseTopLevel(e, t);
            }),
            t
          );
        })(J),
        z =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? "symbol"
                  : typeof e;
              },
        Q = $.prototype;
      (Q.addExtra = function (e, t, r) {
        if (e) {
          var n = (e.extra = e.extra || {});
          n[t] = r;
        }
      }),
        (Q.isRelational = function (e) {
          return this.match(R.relational) && this.state.value === e;
        }),
        (Q.expectRelational = function (e) {
          this.isRelational(e)
            ? this.next()
            : this.unexpected(null, R.relational);
        }),
        (Q.isContextual = function (e) {
          return this.match(R.name) && this.state.value === e;
        }),
        (Q.eatContextual = function (e) {
          return this.state.value === e && this.eat(R.name);
        }),
        (Q.expectContextual = function (e, t) {
          this.eatContextual(e) || this.unexpected(null, t);
        }),
        (Q.canInsertSemicolon = function () {
          return (
            this.match(R.eof) ||
            this.match(R.braceR) ||
            j.test(this.input.slice(this.state.lastTokEnd, this.state.start))
          );
        }),
        (Q.isLineTerminator = function () {
          return this.eat(R.semi) || this.canInsertSemicolon();
        }),
        (Q.semicolon = function () {
          this.isLineTerminator() || this.unexpected(null, R.semi);
        }),
        (Q.expect = function (e, t) {
          return this.eat(e) || this.unexpected(t, e);
        }),
        (Q.unexpected = function (e) {
          var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : "Unexpected token";
          t &&
            "object" === ("undefined" == typeof t ? "undefined" : z(t)) &&
            t.label &&
            (t = "Unexpected token, expected " + t.label),
            this.raise(null != e ? e : this.state.start, t);
        });
      var Z = $.prototype;
      Z.parseTopLevel = function (e, t) {
        return (
          (t.sourceType = this.options.sourceType),
          this.parseBlockBody(t, !0, !0, R.eof),
          (e.program = this.finishNode(t, "Program")),
          (e.comments = this.state.comments),
          (e.tokens = this.state.tokens),
          this.finishNode(e, "File")
        );
      };
      var ee = { kind: "loop" },
        te = { kind: "switch" };
      (Z.stmtToDirective = function (e) {
        var t = e.expression,
          r = this.startNodeAt(t.start, t.loc.start),
          n = this.startNodeAt(e.start, e.loc.start),
          i = this.input.slice(t.start, t.end),
          s = (r.value = i.slice(1, -1));
        return (
          this.addExtra(r, "raw", i),
          this.addExtra(r, "rawValue", s),
          (n.value = this.finishNodeAt(
            r,
            "DirectiveLiteral",
            t.end,
            t.loc.end
          )),
          this.finishNodeAt(n, "Directive", e.end, e.loc.end)
        );
      }),
        (Z.parseStatement = function (e, t) {
          this.match(R.at) && this.parseDecorators(!0);
          var r = this.state.type,
            n = this.startNode();
          switch (r) {
            case R._break:
            case R._continue:
              return this.parseBreakContinueStatement(n, r.keyword);
            case R._debugger:
              return this.parseDebuggerStatement(n);
            case R._do:
              return this.parseDoStatement(n);
            case R._for:
              return this.parseForStatement(n);
            case R._function:
              return e || this.unexpected(), this.parseFunctionStatement(n);
            case R._class:
              return (
                e || this.unexpected(),
                this.takeDecorators(n),
                this.parseClass(n, !0)
              );
            case R._if:
              return this.parseIfStatement(n);
            case R._return:
              return this.parseReturnStatement(n);
            case R._switch:
              return this.parseSwitchStatement(n);
            case R._throw:
              return this.parseThrowStatement(n);
            case R._try:
              return this.parseTryStatement(n);
            case R._let:
            case R._const:
              e || this.unexpected();
            case R._var:
              return this.parseVarStatement(n, r);
            case R._while:
              return this.parseWhileStatement(n);
            case R._with:
              return this.parseWithStatement(n);
            case R.braceL:
              return this.parseBlock();
            case R.semi:
              return this.parseEmptyStatement(n);
            case R._export:
            case R._import:
              if (
                this.hasPlugin("dynamicImport") &&
                this.lookahead().type === R.parenL
              )
                break;
              return (
                this.options.allowImportExportEverywhere ||
                  (t ||
                    this.raise(
                      this.state.start,
                      "'import' and 'export' may only appear at the top level"
                    ),
                  this.inModule ||
                    this.raise(
                      this.state.start,
                      "'import' and 'export' may appear only with 'sourceType: module'"
                    )),
                r === R._import ? this.parseImport(n) : this.parseExport(n)
              );
            case R.name:
              if ("async" === this.state.value) {
                var i = this.state.clone();
                if (
                  (this.next(),
                  this.match(R._function) && !this.canInsertSemicolon())
                )
                  return (
                    this.expect(R._function), this.parseFunction(n, !0, !1, !0)
                  );
                this.state = i;
              }
          }
          var s = this.state.value,
            a = this.parseExpression();
          return r === R.name && "Identifier" === a.type && this.eat(R.colon)
            ? this.parseLabeledStatement(n, s, a)
            : this.parseExpressionStatement(n, a);
        }),
        (Z.takeDecorators = function (e) {
          this.state.decorators.length &&
            ((e.decorators = this.state.decorators),
            (this.state.decorators = []));
        }),
        (Z.parseDecorators = function (e) {
          for (; this.match(R.at); )
            this.state.decorators.push(this.parseDecorator());
          (e && this.match(R._export)) ||
            this.match(R._class) ||
            this.raise(
              this.state.start,
              "Leading decorators must be attached to a class declaration"
            );
        }),
        (Z.parseDecorator = function () {
          this.hasPlugin("decorators") || this.unexpected();
          var e = this.startNode();
          return (
            this.next(),
            (e.expression = this.parseMaybeAssign()),
            this.finishNode(e, "Decorator")
          );
        }),
        (Z.parseBreakContinueStatement = function (e, t) {
          var r = "break" === t;
          this.next(),
            this.isLineTerminator()
              ? (e.label = null)
              : this.match(R.name)
              ? ((e.label = this.parseIdentifier()), this.semicolon())
              : this.unexpected();
          var n = void 0;
          for (n = 0; n < this.state.labels.length; ++n) {
            var i = this.state.labels[n];
            if (null == e.label || i.name === e.label.name) {
              if (null != i.kind && (r || "loop" === i.kind)) break;
              if (e.label && r) break;
            }
          }
          return (
            n === this.state.labels.length &&
              this.raise(e.start, "Unsyntactic " + t),
            this.finishNode(e, r ? "BreakStatement" : "ContinueStatement")
          );
        }),
        (Z.parseDebuggerStatement = function (e) {
          return (
            this.next(),
            this.semicolon(),
            this.finishNode(e, "DebuggerStatement")
          );
        }),
        (Z.parseDoStatement = function (e) {
          return (
            this.next(),
            this.state.labels.push(ee),
            (e.body = this.parseStatement(!1)),
            this.state.labels.pop(),
            this.expect(R._while),
            (e.test = this.parseParenExpression()),
            this.eat(R.semi),
            this.finishNode(e, "DoWhileStatement")
          );
        }),
        (Z.parseForStatement = function (e) {
          this.next(), this.state.labels.push(ee);
          var t = !1;
          if (
            (this.hasPlugin("asyncGenerators") &&
              this.state.inAsync &&
              this.isContextual("await") &&
              ((t = !0), this.next()),
            this.expect(R.parenL),
            this.match(R.semi))
          )
            return t && this.unexpected(), this.parseFor(e, null);
          if (
            this.match(R._var) ||
            this.match(R._let) ||
            this.match(R._const)
          ) {
            var r = this.startNode(),
              n = this.state.type;
            return (
              this.next(),
              this.parseVar(r, !0, n),
              this.finishNode(r, "VariableDeclaration"),
              (!this.match(R._in) && !this.isContextual("of")) ||
              1 !== r.declarations.length ||
              r.declarations[0].init
                ? (t && this.unexpected(), this.parseFor(e, r))
                : this.parseForIn(e, r, t)
            );
          }
          var i = { start: 0 },
            s = this.parseExpression(!0, i);
          if (this.match(R._in) || this.isContextual("of")) {
            var a = this.isContextual("of")
              ? "for-of statement"
              : "for-in statement";
            return (
              this.toAssignable(s, void 0, a),
              this.checkLVal(s, void 0, void 0, a),
              this.parseForIn(e, s, t)
            );
          }
          return (
            i.start && this.unexpected(i.start),
            t && this.unexpected(),
            this.parseFor(e, s)
          );
        }),
        (Z.parseFunctionStatement = function (e) {
          return this.next(), this.parseFunction(e, !0);
        }),
        (Z.parseIfStatement = function (e) {
          return (
            this.next(),
            (e.test = this.parseParenExpression()),
            (e.consequent = this.parseStatement(!1)),
            (e.alternate = this.eat(R._else) ? this.parseStatement(!1) : null),
            this.finishNode(e, "IfStatement")
          );
        }),
        (Z.parseReturnStatement = function (e) {
          return (
            this.state.inFunction ||
              this.options.allowReturnOutsideFunction ||
              this.raise(this.state.start, "'return' outside of function"),
            this.next(),
            this.isLineTerminator()
              ? (e.argument = null)
              : ((e.argument = this.parseExpression()), this.semicolon()),
            this.finishNode(e, "ReturnStatement")
          );
        }),
        (Z.parseSwitchStatement = function (e) {
          this.next(),
            (e.discriminant = this.parseParenExpression()),
            (e.cases = []),
            this.expect(R.braceL),
            this.state.labels.push(te);
          for (var t, r = void 0; !this.match(R.braceR); )
            if (this.match(R._case) || this.match(R._default)) {
              var n = this.match(R._case);
              r && this.finishNode(r, "SwitchCase"),
                e.cases.push((r = this.startNode())),
                (r.consequent = []),
                this.next(),
                n
                  ? (r.test = this.parseExpression())
                  : (t &&
                      this.raise(
                        this.state.lastTokStart,
                        "Multiple default clauses"
                      ),
                    (t = !0),
                    (r.test = null)),
                this.expect(R.colon);
            } else
              r
                ? r.consequent.push(this.parseStatement(!0))
                : this.unexpected();
          return (
            r && this.finishNode(r, "SwitchCase"),
            this.next(),
            this.state.labels.pop(),
            this.finishNode(e, "SwitchStatement")
          );
        }),
        (Z.parseThrowStatement = function (e) {
          return (
            this.next(),
            j.test(this.input.slice(this.state.lastTokEnd, this.state.start)) &&
              this.raise(this.state.lastTokEnd, "Illegal newline after throw"),
            (e.argument = this.parseExpression()),
            this.semicolon(),
            this.finishNode(e, "ThrowStatement")
          );
        });
      var re = [];
      (Z.parseTryStatement = function (e) {
        if (
          (this.next(),
          (e.block = this.parseBlock()),
          (e.handler = null),
          this.match(R._catch))
        ) {
          var t = this.startNode();
          this.next(),
            this.expect(R.parenL),
            (t.param = this.parseBindingAtom()),
            this.checkLVal(t.param, !0, Object.create(null), "catch clause"),
            this.expect(R.parenR),
            (t.body = this.parseBlock()),
            (e.handler = this.finishNode(t, "CatchClause"));
        }
        return (
          (e.guardedHandlers = re),
          (e.finalizer = this.eat(R._finally) ? this.parseBlock() : null),
          e.handler ||
            e.finalizer ||
            this.raise(e.start, "Missing catch or finally clause"),
          this.finishNode(e, "TryStatement")
        );
      }),
        (Z.parseVarStatement = function (e, t) {
          return (
            this.next(),
            this.parseVar(e, !1, t),
            this.semicolon(),
            this.finishNode(e, "VariableDeclaration")
          );
        }),
        (Z.parseWhileStatement = function (e) {
          return (
            this.next(),
            (e.test = this.parseParenExpression()),
            this.state.labels.push(ee),
            (e.body = this.parseStatement(!1)),
            this.state.labels.pop(),
            this.finishNode(e, "WhileStatement")
          );
        }),
        (Z.parseWithStatement = function (e) {
          return (
            this.state.strict &&
              this.raise(this.state.start, "'with' in strict mode"),
            this.next(),
            (e.object = this.parseParenExpression()),
            (e.body = this.parseStatement(!1)),
            this.finishNode(e, "WithStatement")
          );
        }),
        (Z.parseEmptyStatement = function (e) {
          return this.next(), this.finishNode(e, "EmptyStatement");
        }),
        (Z.parseLabeledStatement = function (e, t, r) {
          for (
            var n = this.state.labels,
              i = Array.isArray(n),
              s = 0,
              n = i ? n : n[Symbol.iterator]();
            ;

          ) {
            var a;
            if (i) {
              if (s >= n.length) break;
              a = n[s++];
            } else {
              if (((s = n.next()), s.done)) break;
              a = s.value;
            }
            var o = a;
            o.name === t &&
              this.raise(r.start, "Label '" + t + "' is already declared");
          }
          for (
            var u = this.state.type.isLoop
                ? "loop"
                : this.match(R._switch)
                ? "switch"
                : null,
              l = this.state.labels.length - 1;
            l >= 0;
            l--
          ) {
            var c = this.state.labels[l];
            if (c.statementStart !== e.start) break;
            (c.statementStart = this.state.start), (c.kind = u);
          }
          return (
            this.state.labels.push({
              name: t,
              kind: u,
              statementStart: this.state.start,
            }),
            (e.body = this.parseStatement(!0)),
            this.state.labels.pop(),
            (e.label = r),
            this.finishNode(e, "LabeledStatement")
          );
        }),
        (Z.parseExpressionStatement = function (e, t) {
          return (
            (e.expression = t),
            this.semicolon(),
            this.finishNode(e, "ExpressionStatement")
          );
        }),
        (Z.parseBlock = function (e) {
          var t = this.startNode();
          return (
            this.expect(R.braceL),
            this.parseBlockBody(t, e, !1, R.braceR),
            this.finishNode(t, "BlockStatement")
          );
        }),
        (Z.parseBlockBody = function (e, t, r, n) {
          (e.body = []), (e.directives = []);
          for (var i = !1, s = void 0, a = void 0; !this.eat(n); ) {
            i ||
              !this.state.containsOctal ||
              a ||
              (a = this.state.octalPosition);
            var o = this.parseStatement(!0, r);
            if (
              !t ||
              i ||
              "ExpressionStatement" !== o.type ||
              "StringLiteral" !== o.expression.type ||
              o.expression.extra.parenthesized
            )
              (i = !0), e.body.push(o);
            else {
              var u = this.stmtToDirective(o);
              e.directives.push(u),
                void 0 === s &&
                  "use strict" === u.value.value &&
                  ((s = this.state.strict),
                  this.setStrict(!0),
                  a && this.raise(a, "Octal literal in strict mode"));
            }
          }
          s === !1 && this.setStrict(!1);
        }),
        (Z.parseFor = function (e, t) {
          return (
            (e.init = t),
            this.expect(R.semi),
            (e.test = this.match(R.semi) ? null : this.parseExpression()),
            this.expect(R.semi),
            (e.update = this.match(R.parenR) ? null : this.parseExpression()),
            this.expect(R.parenR),
            (e.body = this.parseStatement(!1)),
            this.state.labels.pop(),
            this.finishNode(e, "ForStatement")
          );
        }),
        (Z.parseForIn = function (e, t, r) {
          var n = void 0;
          return (
            r
              ? (this.eatContextual("of"), (n = "ForAwaitStatement"))
              : ((n = this.match(R._in) ? "ForInStatement" : "ForOfStatement"),
                this.next()),
            (e.left = t),
            (e.right = this.parseExpression()),
            this.expect(R.parenR),
            (e.body = this.parseStatement(!1)),
            this.state.labels.pop(),
            this.finishNode(e, n)
          );
        }),
        (Z.parseVar = function (e, t, r) {
          for (e.declarations = [], e.kind = r.keyword; ; ) {
            var n = this.startNode();
            if (
              (this.parseVarHead(n),
              this.eat(R.eq)
                ? (n.init = this.parseMaybeAssign(t))
                : r !== R._const || this.match(R._in) || this.isContextual("of")
                ? "Identifier" === n.id.type ||
                  (t && (this.match(R._in) || this.isContextual("of")))
                  ? (n.init = null)
                  : this.raise(
                      this.state.lastTokEnd,
                      "Complex binding patterns require an initialization value"
                    )
                : this.unexpected(),
              e.declarations.push(this.finishNode(n, "VariableDeclarator")),
              !this.eat(R.comma))
            )
              break;
          }
          return e;
        }),
        (Z.parseVarHead = function (e) {
          (e.id = this.parseBindingAtom()),
            this.checkLVal(e.id, !0, void 0, "variable declaration");
        }),
        (Z.parseFunction = function (e, t, r, n, i) {
          var s = this.state.inMethod;
          return (
            (this.state.inMethod = !1),
            this.initFunction(e, n),
            this.match(R.star) &&
              (e.async && !this.hasPlugin("asyncGenerators")
                ? this.unexpected()
                : ((e.generator = !0), this.next())),
            !t ||
              i ||
              this.match(R.name) ||
              this.match(R._yield) ||
              this.unexpected(),
            (this.match(R.name) || this.match(R._yield)) &&
              (e.id = this.parseBindingIdentifier()),
            this.parseFunctionParams(e),
            this.parseFunctionBody(e, r),
            (this.state.inMethod = s),
            this.finishNode(e, t ? "FunctionDeclaration" : "FunctionExpression")
          );
        }),
        (Z.parseFunctionParams = function (e) {
          this.expect(R.parenL), (e.params = this.parseBindingList(R.parenR));
        }),
        (Z.parseClass = function (e, t, r) {
          return (
            this.next(),
            this.parseClassId(e, t, r),
            this.parseClassSuper(e),
            this.parseClassBody(e),
            this.finishNode(e, t ? "ClassDeclaration" : "ClassExpression")
          );
        }),
        (Z.isClassProperty = function () {
          return this.match(R.eq) || this.isLineTerminator();
        }),
        (Z.isClassMutatorStarter = function () {
          return !1;
        }),
        (Z.parseClassBody = function (e) {
          var t = this.state.strict;
          this.state.strict = !0;
          var r = !1,
            n = !1,
            i = [],
            s = this.startNode();
          for (s.body = [], this.expect(R.braceL); !this.eat(R.braceR); )
            if (!this.eat(R.semi))
              if (this.match(R.at)) i.push(this.parseDecorator());
              else {
                var a = this.startNode();
                i.length && ((a.decorators = i), (i = []));
                var o = !1,
                  u = this.match(R.name) && "static" === this.state.value,
                  l = this.eat(R.star),
                  c = !1,
                  f = !1;
                if (
                  (this.parsePropertyName(a),
                  (a.static = u && !this.match(R.parenL)),
                  a.static &&
                    ((l = this.eat(R.star)), this.parsePropertyName(a)),
                  !l)
                ) {
                  if (this.isClassProperty()) {
                    s.body.push(this.parseClassProperty(a));
                    continue;
                  }
                  "Identifier" === a.key.type &&
                    !a.computed &&
                    this.hasPlugin("classConstructorCall") &&
                    "call" === a.key.name &&
                    this.match(R.name) &&
                    "constructor" === this.state.value &&
                    ((o = !0), this.parsePropertyName(a));
                }
                var p =
                  !this.match(R.parenL) &&
                  !a.computed &&
                  "Identifier" === a.key.type &&
                  "async" === a.key.name;
                if (
                  (p &&
                    (this.hasPlugin("asyncGenerators") &&
                      this.eat(R.star) &&
                      (l = !0),
                    (f = !0),
                    this.parsePropertyName(a)),
                  (a.kind = "method"),
                  !a.computed)
                ) {
                  var h = a.key;
                  f ||
                    l ||
                    this.isClassMutatorStarter() ||
                    "Identifier" !== h.type ||
                    this.match(R.parenL) ||
                    ("get" !== h.name && "set" !== h.name) ||
                    ((c = !0),
                    (a.kind = h.name),
                    (h = this.parsePropertyName(a)));
                  var d =
                    !o &&
                    !a.static &&
                    (("Identifier" === h.type && "constructor" === h.name) ||
                      ("StringLiteral" === h.type &&
                        "constructor" === h.value));
                  d &&
                    (n &&
                      this.raise(
                        h.start,
                        "Duplicate constructor in the same class"
                      ),
                    c &&
                      this.raise(
                        h.start,
                        "Constructor can't have get/set modifier"
                      ),
                    l &&
                      this.raise(h.start, "Constructor can't be a generator"),
                    f &&
                      this.raise(
                        h.start,
                        "Constructor can't be an async function"
                      ),
                    (a.kind = "constructor"),
                    (n = !0));
                  var m =
                    a.static &&
                    (("Identifier" === h.type && "prototype" === h.name) ||
                      ("StringLiteral" === h.type && "prototype" === h.value));
                  m &&
                    this.raise(
                      h.start,
                      "Classes may not have static property named prototype"
                    );
                }
                if (
                  (o &&
                    (r &&
                      this.raise(
                        a.start,
                        "Duplicate constructor call in the same class"
                      ),
                    (a.kind = "constructorCall"),
                    (r = !0)),
                  ("constructor" !== a.kind && "constructorCall" !== a.kind) ||
                    !a.decorators ||
                    this.raise(
                      a.start,
                      "You can't attach decorators to a class constructor"
                    ),
                  this.parseClassMethod(s, a, l, f),
                  c)
                ) {
                  var v = "get" === a.kind ? 0 : 1;
                  if (a.params.length !== v) {
                    var y = a.start;
                    "get" === a.kind
                      ? this.raise(y, "getter should have no params")
                      : this.raise(y, "setter should have exactly one param");
                  }
                }
              }
          i.length &&
            this.raise(
              this.state.start,
              "You have trailing decorators with no method"
            ),
            (e.body = this.finishNode(s, "ClassBody")),
            (this.state.strict = t);
        }),
        (Z.parseClassProperty = function (e) {
          return (
            this.match(R.eq)
              ? (this.hasPlugin("classProperties") || this.unexpected(),
                this.next(),
                (e.value = this.parseMaybeAssign()))
              : (e.value = null),
            this.semicolon(),
            this.finishNode(e, "ClassProperty")
          );
        }),
        (Z.parseClassMethod = function (e, t, r, n) {
          this.parseMethod(t, r, n),
            e.body.push(this.finishNode(t, "ClassMethod"));
        }),
        (Z.parseClassId = function (e, t, r) {
          this.match(R.name)
            ? (e.id = this.parseIdentifier())
            : r || !t
            ? (e.id = null)
            : this.unexpected();
        }),
        (Z.parseClassSuper = function (e) {
          e.superClass = this.eat(R._extends)
            ? this.parseExprSubscripts()
            : null;
        }),
        (Z.parseExport = function (e) {
          if ((this.next(), this.match(R.star))) {
            var t = this.startNode();
            if (
              (this.next(),
              !this.hasPlugin("exportExtensions") || !this.eatContextual("as"))
            )
              return (
                this.parseExportFrom(e, !0),
                this.finishNode(e, "ExportAllDeclaration")
              );
            (t.exported = this.parseIdentifier()),
              (e.specifiers = [this.finishNode(t, "ExportNamespaceSpecifier")]),
              this.parseExportSpecifiersMaybe(e),
              this.parseExportFrom(e, !0);
          } else if (
            this.hasPlugin("exportExtensions") &&
            this.isExportDefaultSpecifier()
          ) {
            var r = this.startNode();
            if (
              ((r.exported = this.parseIdentifier(!0)),
              (e.specifiers = [this.finishNode(r, "ExportDefaultSpecifier")]),
              this.match(R.comma) && this.lookahead().type === R.star)
            ) {
              this.expect(R.comma);
              var n = this.startNode();
              this.expect(R.star),
                this.expectContextual("as"),
                (n.exported = this.parseIdentifier()),
                e.specifiers.push(
                  this.finishNode(n, "ExportNamespaceSpecifier")
                );
            } else this.parseExportSpecifiersMaybe(e);
            this.parseExportFrom(e, !0);
          } else {
            if (this.eat(R._default)) {
              var i = this.startNode(),
                s = !1;
              return (
                this.eat(R._function)
                  ? (i = this.parseFunction(i, !0, !1, !1, !0))
                  : this.match(R._class)
                  ? (i = this.parseClass(i, !0, !0))
                  : ((s = !0), (i = this.parseMaybeAssign())),
                (e.declaration = i),
                s && this.semicolon(),
                this.checkExport(e, !0, !0),
                this.finishNode(e, "ExportDefaultDeclaration")
              );
            }
            this.state.type.keyword || this.shouldParseExportDeclaration()
              ? ((e.specifiers = []),
                (e.source = null),
                (e.declaration = this.parseExportDeclaration(e)))
              : ((e.declaration = null),
                (e.specifiers = this.parseExportSpecifiers()),
                this.parseExportFrom(e));
          }
          return (
            this.checkExport(e, !0),
            this.finishNode(e, "ExportNamedDeclaration")
          );
        }),
        (Z.parseExportDeclaration = function () {
          return this.parseStatement(!0);
        }),
        (Z.isExportDefaultSpecifier = function () {
          if (this.match(R.name))
            return (
              "type" !== this.state.value &&
              "async" !== this.state.value &&
              "interface" !== this.state.value
            );
          if (!this.match(R._default)) return !1;
          var e = this.lookahead();
          return (
            e.type === R.comma || (e.type === R.name && "from" === e.value)
          );
        }),
        (Z.parseExportSpecifiersMaybe = function (e) {
          this.eat(R.comma) &&
            (e.specifiers = e.specifiers.concat(this.parseExportSpecifiers()));
        }),
        (Z.parseExportFrom = function (e, t) {
          this.eatContextual("from")
            ? ((e.source = this.match(R.string)
                ? this.parseExprAtom()
                : this.unexpected()),
              this.checkExport(e))
            : t
            ? this.unexpected()
            : (e.source = null),
            this.semicolon();
        }),
        (Z.shouldParseExportDeclaration = function () {
          return this.isContextual("async");
        }),
        (Z.checkExport = function (e, t, r) {
          if (t)
            if (r) this.checkDuplicateExports(e, "default");
            else if (e.specifiers && e.specifiers.length)
              for (
                var n = e.specifiers,
                  i = Array.isArray(n),
                  s = 0,
                  n = i ? n : n[Symbol.iterator]();
                ;

              ) {
                var a;
                if (i) {
                  if (s >= n.length) break;
                  a = n[s++];
                } else {
                  if (((s = n.next()), s.done)) break;
                  a = s.value;
                }
                var o = a;
                this.checkDuplicateExports(o, o.exported.name);
              }
            else if (e.declaration)
              if (
                "FunctionDeclaration" === e.declaration.type ||
                "ClassDeclaration" === e.declaration.type
              )
                this.checkDuplicateExports(e, e.declaration.id.name);
              else if ("VariableDeclaration" === e.declaration.type)
                for (
                  var u = e.declaration.declarations,
                    l = Array.isArray(u),
                    c = 0,
                    u = l ? u : u[Symbol.iterator]();
                  ;

                ) {
                  var f;
                  if (l) {
                    if (c >= u.length) break;
                    f = u[c++];
                  } else {
                    if (((c = u.next()), c.done)) break;
                    f = c.value;
                  }
                  var p = f;
                  this.checkDeclaration(p.id);
                }
          if (this.state.decorators.length) {
            var h =
              e.declaration &&
              ("ClassDeclaration" === e.declaration.type ||
                "ClassExpression" === e.declaration.type);
            (e.declaration && h) ||
              this.raise(
                e.start,
                "You can only use decorators on an export when exporting a class"
              ),
              this.takeDecorators(e.declaration);
          }
        }),
        (Z.checkDeclaration = function (e) {
          if ("ObjectPattern" === e.type)
            for (
              var t = e.properties,
                r = Array.isArray(t),
                n = 0,
                t = r ? t : t[Symbol.iterator]();
              ;

            ) {
              var i;
              if (r) {
                if (n >= t.length) break;
                i = t[n++];
              } else {
                if (((n = t.next()), n.done)) break;
                i = n.value;
              }
              var s = i;
              this.checkDeclaration(s);
            }
          else if ("ArrayPattern" === e.type)
            for (
              var a = e.elements,
                o = Array.isArray(a),
                u = 0,
                a = o ? a : a[Symbol.iterator]();
              ;

            ) {
              var l;
              if (o) {
                if (u >= a.length) break;
                l = a[u++];
              } else {
                if (((u = a.next()), u.done)) break;
                l = u.value;
              }
              var c = l;
              c && this.checkDeclaration(c);
            }
          else
            "ObjectProperty" === e.type
              ? this.checkDeclaration(e.value)
              : "RestElement" === e.type || "RestProperty" === e.type
              ? this.checkDeclaration(e.argument)
              : "Identifier" === e.type &&
                this.checkDuplicateExports(e, e.name);
        }),
        (Z.checkDuplicateExports = function (e, t) {
          this.state.exportedIdentifiers.indexOf(t) > -1 &&
            this.raiseDuplicateExportError(e, t),
            this.state.exportedIdentifiers.push(t);
        }),
        (Z.raiseDuplicateExportError = function (e, t) {
          this.raise(
            e.start,
            "default" === t
              ? "Only one default export allowed per module."
              : "`" +
                  t +
                  "` has already been exported. Exported identifiers must be unique."
          );
        }),
        (Z.parseExportSpecifiers = function () {
          var e = [],
            t = !0,
            r = void 0;
          for (this.expect(R.braceL); !this.eat(R.braceR); ) {
            if (t) t = !1;
            else if ((this.expect(R.comma), this.eat(R.braceR))) break;
            var n = this.match(R._default);
            n && !r && (r = !0);
            var i = this.startNode();
            (i.local = this.parseIdentifier(n)),
              (i.exported = this.eatContextual("as")
                ? this.parseIdentifier(!0)
                : i.local.__clone()),
              e.push(this.finishNode(i, "ExportSpecifier"));
          }
          return r && !this.isContextual("from") && this.unexpected(), e;
        }),
        (Z.parseImport = function (e) {
          return (
            this.next(),
            this.match(R.string)
              ? ((e.specifiers = []), (e.source = this.parseExprAtom()))
              : ((e.specifiers = []),
                this.parseImportSpecifiers(e),
                this.expectContextual("from"),
                (e.source = this.match(R.string)
                  ? this.parseExprAtom()
                  : this.unexpected())),
            this.semicolon(),
            this.finishNode(e, "ImportDeclaration")
          );
        }),
        (Z.parseImportSpecifiers = function (e) {
          var t = !0;
          if (this.match(R.name)) {
            var r = this.state.start,
              n = this.state.startLoc;
            if (
              (e.specifiers.push(
                this.parseImportSpecifierDefault(this.parseIdentifier(), r, n)
              ),
              !this.eat(R.comma))
            )
              return;
          }
          if (this.match(R.star)) {
            var i = this.startNode();
            return (
              this.next(),
              this.expectContextual("as"),
              (i.local = this.parseIdentifier()),
              this.checkLVal(i.local, !0, void 0, "import namespace specifier"),
              void e.specifiers.push(
                this.finishNode(i, "ImportNamespaceSpecifier")
              )
            );
          }
          for (this.expect(R.braceL); !this.eat(R.braceR); ) {
            if (t) t = !1;
            else if ((this.expect(R.comma), this.eat(R.braceR))) break;
            var s = this.startNode();
            (s.imported = this.parseIdentifier(!0)),
              (s.local = this.eatContextual("as")
                ? this.parseIdentifier()
                : s.imported.__clone()),
              this.checkLVal(s.local, !0, void 0, "import specifier"),
              e.specifiers.push(this.finishNode(s, "ImportSpecifier"));
          }
        }),
        (Z.parseImportSpecifierDefault = function (e, t, r) {
          var n = this.startNodeAt(t, r);
          return (
            (n.local = e),
            this.checkLVal(n.local, !0, void 0, "default import specifier"),
            this.finishNode(n, "ImportDefaultSpecifier")
          );
        });
      var ne = $.prototype;
      (ne.toAssignable = function (e, t, r) {
        if (e)
          switch (e.type) {
            case "Identifier":
            case "ObjectPattern":
            case "ArrayPattern":
            case "AssignmentPattern":
              break;
            case "ObjectExpression":
              e.type = "ObjectPattern";
              for (
                var n = e.properties,
                  i = Array.isArray(n),
                  s = 0,
                  n = i ? n : n[Symbol.iterator]();
                ;

              ) {
                var a;
                if (i) {
                  if (s >= n.length) break;
                  a = n[s++];
                } else {
                  if (((s = n.next()), s.done)) break;
                  a = s.value;
                }
                var o = a;
                "ObjectMethod" === o.type
                  ? "get" === o.kind || "set" === o.kind
                    ? this.raise(
                        o.key.start,
                        "Object pattern can't contain getter or setter"
                      )
                    : this.raise(
                        o.key.start,
                        "Object pattern can't contain methods"
                      )
                  : this.toAssignable(o, t, "object destructuring pattern");
              }
              break;
            case "ObjectProperty":
              this.toAssignable(e.value, t, r);
              break;
            case "SpreadProperty":
              e.type = "RestProperty";
              break;
            case "ArrayExpression":
              (e.type = "ArrayPattern"),
                this.toAssignableList(e.elements, t, r);
              break;
            case "AssignmentExpression":
              "=" === e.operator
                ? ((e.type = "AssignmentPattern"), delete e.operator)
                : this.raise(
                    e.left.end,
                    "Only '=' operator can be used for specifying default value."
                  );
              break;
            case "MemberExpression":
              if (!t) break;
            default:
              var u =
                "Invalid left-hand side" + (r ? " in " + r : "expression");
              this.raise(e.start, u);
          }
        return e;
      }),
        (ne.toAssignableList = function (e, t, r) {
          var n = e.length;
          if (n) {
            var i = e[n - 1];
            if (i && "RestElement" === i.type) --n;
            else if (i && "SpreadElement" === i.type) {
              i.type = "RestElement";
              var s = i.argument;
              this.toAssignable(s, t, r),
                "Identifier" !== s.type &&
                  "MemberExpression" !== s.type &&
                  "ArrayPattern" !== s.type &&
                  this.unexpected(s.start),
                --n;
            }
          }
          for (var a = 0; a < n; a++) {
            var o = e[a];
            o && this.toAssignable(o, t, r);
          }
          return e;
        }),
        (ne.toReferencedList = function (e) {
          return e;
        }),
        (ne.parseSpread = function (e) {
          var t = this.startNode();
          return (
            this.next(),
            (t.argument = this.parseMaybeAssign(!1, e)),
            this.finishNode(t, "SpreadElement")
          );
        }),
        (ne.parseRest = function () {
          var e = this.startNode();
          return (
            this.next(),
            (e.argument = this.parseBindingIdentifier()),
            this.finishNode(e, "RestElement")
          );
        }),
        (ne.shouldAllowYieldIdentifier = function () {
          return (
            this.match(R._yield) &&
            !this.state.strict &&
            !this.state.inGenerator
          );
        }),
        (ne.parseBindingIdentifier = function () {
          return this.parseIdentifier(this.shouldAllowYieldIdentifier());
        }),
        (ne.parseBindingAtom = function () {
          switch (this.state.type) {
            case R._yield:
              (this.state.strict || this.state.inGenerator) &&
                this.unexpected();
            case R.name:
              return this.parseIdentifier(!0);
            case R.bracketL:
              var e = this.startNode();
              return (
                this.next(),
                (e.elements = this.parseBindingList(R.bracketR, !0)),
                this.finishNode(e, "ArrayPattern")
              );
            case R.braceL:
              return this.parseObj(!0);
            default:
              this.unexpected();
          }
        }),
        (ne.parseBindingList = function (e, t) {
          for (var r = [], n = !0; !this.eat(e); )
            if ((n ? (n = !1) : this.expect(R.comma), t && this.match(R.comma)))
              r.push(null);
            else {
              if (this.eat(e)) break;
              if (this.match(R.ellipsis)) {
                r.push(this.parseAssignableListItemTypes(this.parseRest())),
                  this.expect(e);
                break;
              }
              for (var i = []; this.match(R.at); )
                i.push(this.parseDecorator());
              var s = this.parseMaybeDefault();
              i.length && (s.decorators = i),
                this.parseAssignableListItemTypes(s),
                r.push(this.parseMaybeDefault(s.start, s.loc.start, s));
            }
          return r;
        }),
        (ne.parseAssignableListItemTypes = function (e) {
          return e;
        }),
        (ne.parseMaybeDefault = function (e, t, r) {
          if (
            ((t = t || this.state.startLoc),
            (e = e || this.state.start),
            (r = r || this.parseBindingAtom()),
            !this.eat(R.eq))
          )
            return r;
          var n = this.startNodeAt(e, t);
          return (
            (n.left = r),
            (n.right = this.parseMaybeAssign()),
            this.finishNode(n, "AssignmentPattern")
          );
        }),
        (ne.checkLVal = function (e, t, r, n) {
          switch (e.type) {
            case "Identifier":
              if ((this.checkReservedWord(e.name, e.start, !1, !0), r)) {
                var i = "_" + e.name;
                r[i]
                  ? this.raise(e.start, "Argument name clash in strict mode")
                  : (r[i] = !0);
              }
              break;
            case "MemberExpression":
              t &&
                this.raise(
                  e.start,
                  (t ? "Binding" : "Assigning to") + " member expression"
                );
              break;
            case "ObjectPattern":
              for (
                var s = e.properties,
                  a = Array.isArray(s),
                  o = 0,
                  s = a ? s : s[Symbol.iterator]();
                ;

              ) {
                var u;
                if (a) {
                  if (o >= s.length) break;
                  u = s[o++];
                } else {
                  if (((o = s.next()), o.done)) break;
                  u = o.value;
                }
                var l = u;
                "ObjectProperty" === l.type && (l = l.value),
                  this.checkLVal(l, t, r, "object destructuring pattern");
              }
              break;
            case "ArrayPattern":
              for (
                var c = e.elements,
                  f = Array.isArray(c),
                  p = 0,
                  c = f ? c : c[Symbol.iterator]();
                ;

              ) {
                var h;
                if (f) {
                  if (p >= c.length) break;
                  h = c[p++];
                } else {
                  if (((p = c.next()), p.done)) break;
                  h = p.value;
                }
                var d = h;
                d && this.checkLVal(d, t, r, "array destructuring pattern");
              }
              break;
            case "AssignmentPattern":
              this.checkLVal(e.left, t, r, "assignment pattern");
              break;
            case "RestProperty":
              this.checkLVal(e.argument, t, r, "rest property");
              break;
            case "RestElement":
              this.checkLVal(e.argument, t, r, "rest element");
              break;
            default:
              var m =
                (t ? "Binding invalid" : "Invalid") +
                " left-hand side" +
                (n ? " in " + n : "expression");
              this.raise(e.start, m);
          }
        });
      var ie = $.prototype;
      (ie.checkPropClash = function (e, t) {
        if (!e.computed) {
          var r = e.key,
            n = void 0;
          switch (r.type) {
            case "Identifier":
              n = r.name;
              break;
            case "StringLiteral":
            case "NumericLiteral":
              n = String(r.value);
              break;
            default:
              return;
          }
          "__proto__" !== n ||
            e.kind ||
            (t.proto &&
              this.raise(r.start, "Redefinition of __proto__ property"),
            (t.proto = !0));
        }
      }),
        (ie.parseExpression = function (e, t) {
          var r = this.state.start,
            n = this.state.startLoc,
            i = this.parseMaybeAssign(e, t);
          if (this.match(R.comma)) {
            var s = this.startNodeAt(r, n);
            for (s.expressions = [i]; this.eat(R.comma); )
              s.expressions.push(this.parseMaybeAssign(e, t));
            return (
              this.toReferencedList(s.expressions),
              this.finishNode(s, "SequenceExpression")
            );
          }
          return i;
        }),
        (ie.parseMaybeAssign = function (e, t, r, n) {
          var i = this.state.start,
            s = this.state.startLoc;
          if (this.match(R._yield) && this.state.inGenerator) {
            var a = this.parseYield();
            return r && (a = r.call(this, a, i, s)), a;
          }
          var o = void 0;
          t ? (o = !1) : ((t = { start: 0 }), (o = !0)),
            (this.match(R.parenL) || this.match(R.name)) &&
              (this.state.potentialArrowAt = this.state.start);
          var u = this.parseMaybeConditional(e, t, n);
          if ((r && (u = r.call(this, u, i, s)), this.state.type.isAssign)) {
            var l = this.startNodeAt(i, s);
            if (
              ((l.operator = this.state.value),
              (l.left = this.match(R.eq)
                ? this.toAssignable(u, void 0, "assignment expression")
                : u),
              (t.start = 0),
              this.checkLVal(u, void 0, void 0, "assignment expression"),
              u.extra && u.extra.parenthesized)
            ) {
              var c = void 0;
              "ObjectPattern" === u.type
                ? (c = "`({a}) = 0` use `({a} = 0)`")
                : "ArrayPattern" === u.type &&
                  (c = "`([a]) = 0` use `([a] = 0)`"),
                c &&
                  this.raise(
                    u.start,
                    "You're trying to assign to a parenthesized expression, eg. instead of " +
                      c
                  );
            }
            return (
              this.next(),
              (l.right = this.parseMaybeAssign(e)),
              this.finishNode(l, "AssignmentExpression")
            );
          }
          return o && t.start && this.unexpected(t.start), u;
        }),
        (ie.parseMaybeConditional = function (e, t, r) {
          var n = this.state.start,
            i = this.state.startLoc,
            s = this.parseExprOps(e, t);
          return t && t.start ? s : this.parseConditional(s, e, n, i, r);
        }),
        (ie.parseConditional = function (e, t, r, n) {
          if (this.eat(R.question)) {
            var i = this.startNodeAt(r, n);
            return (
              (i.test = e),
              (i.consequent = this.parseMaybeAssign()),
              this.expect(R.colon),
              (i.alternate = this.parseMaybeAssign(t)),
              this.finishNode(i, "ConditionalExpression")
            );
          }
          return e;
        }),
        (ie.parseExprOps = function (e, t) {
          var r = this.state.start,
            n = this.state.startLoc,
            i = this.parseMaybeUnary(t);
          return t && t.start ? i : this.parseExprOp(i, r, n, -1, e);
        }),
        (ie.parseExprOp = function (e, t, r, n, i) {
          var s = this.state.type.binop;
          if (!(null == s || (i && this.match(R._in))) && s > n) {
            var a = this.startNodeAt(t, r);
            (a.left = e),
              (a.operator = this.state.value),
              "**" !== a.operator ||
                "UnaryExpression" !== e.type ||
                !e.extra ||
                e.extra.parenthesizedArgument ||
                e.extra.parenthesized ||
                this.raise(
                  e.argument.start,
                  "Illegal expression. Wrap left hand side or entire exponentiation in parentheses."
                );
            var o = this.state.type;
            this.next();
            var u = this.state.start,
              l = this.state.startLoc;
            return (
              (a.right = this.parseExprOp(
                this.parseMaybeUnary(),
                u,
                l,
                o.rightAssociative ? s - 1 : s,
                i
              )),
              this.finishNode(
                a,
                o === R.logicalOR || o === R.logicalAND
                  ? "LogicalExpression"
                  : "BinaryExpression"
              ),
              this.parseExprOp(a, t, r, n, i)
            );
          }
          return e;
        }),
        (ie.parseMaybeUnary = function (e) {
          if (this.state.type.prefix) {
            var t = this.startNode(),
              r = this.match(R.incDec);
            (t.operator = this.state.value), (t.prefix = !0), this.next();
            var n = this.state.type;
            return (
              (t.argument = this.parseMaybeUnary()),
              this.addExtra(
                t,
                "parenthesizedArgument",
                !(
                  n !== R.parenL ||
                  (t.argument.extra && t.argument.extra.parenthesized)
                )
              ),
              e && e.start && this.unexpected(e.start),
              r
                ? this.checkLVal(t.argument, void 0, void 0, "prefix operation")
                : this.state.strict &&
                  "delete" === t.operator &&
                  "Identifier" === t.argument.type &&
                  this.raise(t.start, "Deleting local variable in strict mode"),
              this.finishNode(t, r ? "UpdateExpression" : "UnaryExpression")
            );
          }
          var i = this.state.start,
            s = this.state.startLoc,
            a = this.parseExprSubscripts(e);
          if (e && e.start) return a;
          for (; this.state.type.postfix && !this.canInsertSemicolon(); ) {
            var o = this.startNodeAt(i, s);
            (o.operator = this.state.value),
              (o.prefix = !1),
              (o.argument = a),
              this.checkLVal(a, void 0, void 0, "postfix operation"),
              this.next(),
              (a = this.finishNode(o, "UpdateExpression"));
          }
          return a;
        }),
        (ie.parseExprSubscripts = function (e) {
          var t = this.state.start,
            r = this.state.startLoc,
            n = this.state.potentialArrowAt,
            i = this.parseExprAtom(e);
          return "ArrowFunctionExpression" === i.type && i.start === n
            ? i
            : e && e.start
            ? i
            : this.parseSubscripts(i, t, r);
        }),
        (ie.parseSubscripts = function (e, t, r, n) {
          for (;;) {
            if (!n && this.eat(R.doubleColon)) {
              var i = this.startNodeAt(t, r);
              return (
                (i.object = e),
                (i.callee = this.parseNoCallExpr()),
                this.parseSubscripts(
                  this.finishNode(i, "BindExpression"),
                  t,
                  r,
                  n
                )
              );
            }
            if (this.eat(R.dot)) {
              var s = this.startNodeAt(t, r);
              (s.object = e),
                (s.property = this.parseIdentifier(!0)),
                (s.computed = !1),
                (e = this.finishNode(s, "MemberExpression"));
            } else if (this.eat(R.bracketL)) {
              var a = this.startNodeAt(t, r);
              (a.object = e),
                (a.property = this.parseExpression()),
                (a.computed = !0),
                this.expect(R.bracketR),
                (e = this.finishNode(a, "MemberExpression"));
            } else if (!n && this.match(R.parenL)) {
              var o =
                this.state.potentialArrowAt === e.start &&
                "Identifier" === e.type &&
                "async" === e.name &&
                !this.canInsertSemicolon();
              this.next();
              var u = this.startNodeAt(t, r);
              if (
                ((u.callee = e),
                (u.arguments = this.parseCallExpressionArguments(R.parenR, o)),
                "Import" === u.callee.type &&
                  1 !== u.arguments.length &&
                  this.raise(u.start, "import() requires exactly one argument"),
                (e = this.finishNode(u, "CallExpression")),
                o && this.shouldParseAsyncArrow())
              )
                return this.parseAsyncArrowFromCallExpression(
                  this.startNodeAt(t, r),
                  u
                );
              this.toReferencedList(u.arguments);
            } else {
              if (!this.match(R.backQuote)) return e;
              var l = this.startNodeAt(t, r);
              (l.tag = e),
                (l.quasi = this.parseTemplate()),
                (e = this.finishNode(l, "TaggedTemplateExpression"));
            }
          }
        }),
        (ie.parseCallExpressionArguments = function (e, t) {
          for (var r = void 0, n = [], i = !0; !this.eat(e); ) {
            if (i) i = !1;
            else if ((this.expect(R.comma), this.eat(e))) break;
            this.match(R.parenL) && !r && (r = this.state.start),
              n.push(this.parseExprListItem(void 0, t ? { start: 0 } : void 0));
          }
          return t && r && this.shouldParseAsyncArrow() && this.unexpected(), n;
        }),
        (ie.shouldParseAsyncArrow = function () {
          return this.match(R.arrow);
        }),
        (ie.parseAsyncArrowFromCallExpression = function (e, t) {
          return (
            this.expect(R.arrow), this.parseArrowExpression(e, t.arguments, !0)
          );
        }),
        (ie.parseNoCallExpr = function () {
          var e = this.state.start,
            t = this.state.startLoc;
          return this.parseSubscripts(this.parseExprAtom(), e, t, !0);
        }),
        (ie.parseExprAtom = function (e) {
          var t = void 0,
            r = this.state.potentialArrowAt === this.state.start;
          switch (this.state.type) {
            case R._super:
              return (
                this.state.inMethod ||
                  this.options.allowSuperOutsideMethod ||
                  this.raise(
                    this.state.start,
                    "'super' outside of function or class"
                  ),
                (t = this.startNode()),
                this.next(),
                this.match(R.parenL) ||
                  this.match(R.bracketL) ||
                  this.match(R.dot) ||
                  this.unexpected(),
                this.match(R.parenL) &&
                  "constructor" !== this.state.inMethod &&
                  !this.options.allowSuperOutsideMethod &&
                  this.raise(t.start, "super() outside of class constructor"),
                this.finishNode(t, "Super")
              );
            case R._import:
              return (
                this.hasPlugin("dynamicImport") || this.unexpected(),
                (t = this.startNode()),
                this.next(),
                this.match(R.parenL) || this.unexpected(null, R.parenL),
                this.finishNode(t, "Import")
              );
            case R._this:
              return (
                (t = this.startNode()),
                this.next(),
                this.finishNode(t, "ThisExpression")
              );
            case R._yield:
              this.state.inGenerator && this.unexpected();
            case R.name:
              t = this.startNode();
              var n = "await" === this.state.value && this.state.inAsync,
                i = this.shouldAllowYieldIdentifier(),
                s = this.parseIdentifier(n || i);
              if ("await" === s.name) {
                if (this.state.inAsync || this.inModule)
                  return this.parseAwait(t);
              } else {
                if (
                  "async" === s.name &&
                  this.match(R._function) &&
                  !this.canInsertSemicolon()
                )
                  return this.next(), this.parseFunction(t, !1, !1, !0);
                if (r && "async" === s.name && this.match(R.name)) {
                  var a = [this.parseIdentifier()];
                  return (
                    this.expect(R.arrow), this.parseArrowExpression(t, a, !0)
                  );
                }
              }
              return r && !this.canInsertSemicolon() && this.eat(R.arrow)
                ? this.parseArrowExpression(t, [s])
                : s;
            case R._do:
              if (this.hasPlugin("doExpressions")) {
                var o = this.startNode();
                this.next();
                var u = this.state.inFunction,
                  l = this.state.labels;
                return (
                  (this.state.labels = []),
                  (this.state.inFunction = !1),
                  (o.body = this.parseBlock(!1, !0)),
                  (this.state.inFunction = u),
                  (this.state.labels = l),
                  this.finishNode(o, "DoExpression")
                );
              }
            case R.regexp:
              var c = this.state.value;
              return (
                (t = this.parseLiteral(c.value, "RegExpLiteral")),
                (t.pattern = c.pattern),
                (t.flags = c.flags),
                t
              );
            case R.num:
              return this.parseLiteral(this.state.value, "NumericLiteral");
            case R.string:
              return this.parseLiteral(this.state.value, "StringLiteral");
            case R._null:
              return (
                (t = this.startNode()),
                this.next(),
                this.finishNode(t, "NullLiteral")
              );
            case R._true:
            case R._false:
              return (
                (t = this.startNode()),
                (t.value = this.match(R._true)),
                this.next(),
                this.finishNode(t, "BooleanLiteral")
              );
            case R.parenL:
              return this.parseParenAndDistinguishExpression(null, null, r);
            case R.bracketL:
              return (
                (t = this.startNode()),
                this.next(),
                (t.elements = this.parseExprList(R.bracketR, !0, e)),
                this.toReferencedList(t.elements),
                this.finishNode(t, "ArrayExpression")
              );
            case R.braceL:
              return this.parseObj(!1, e);
            case R._function:
              return this.parseFunctionExpression();
            case R.at:
              this.parseDecorators();
            case R._class:
              return (
                (t = this.startNode()),
                this.takeDecorators(t),
                this.parseClass(t, !1)
              );
            case R._new:
              return this.parseNew();
            case R.backQuote:
              return this.parseTemplate();
            case R.doubleColon:
              (t = this.startNode()), this.next(), (t.object = null);
              var f = (t.callee = this.parseNoCallExpr());
              if ("MemberExpression" === f.type)
                return this.finishNode(t, "BindExpression");
              this.raise(
                f.start,
                "Binding should be performed on object property."
              );
            default:
              this.unexpected();
          }
        }),
        (ie.parseFunctionExpression = function () {
          var e = this.startNode(),
            t = this.parseIdentifier(!0);
          return this.state.inGenerator &&
            this.eat(R.dot) &&
            this.hasPlugin("functionSent")
            ? this.parseMetaProperty(e, t, "sent")
            : this.parseFunction(e, !1);
        }),
        (ie.parseMetaProperty = function (e, t, r) {
          return (
            (e.meta = t),
            (e.property = this.parseIdentifier(!0)),
            e.property.name !== r &&
              this.raise(
                e.property.start,
                "The only valid meta property for new is " + t.name + "." + r
              ),
            this.finishNode(e, "MetaProperty")
          );
        }),
        (ie.parseLiteral = function (e, t) {
          var r = this.startNode();
          return (
            this.addExtra(r, "rawValue", e),
            this.addExtra(
              r,
              "raw",
              this.input.slice(this.state.start, this.state.end)
            ),
            (r.value = e),
            this.next(),
            this.finishNode(r, t)
          );
        }),
        (ie.parseParenExpression = function () {
          this.expect(R.parenL);
          var e = this.parseExpression();
          return this.expect(R.parenR), e;
        }),
        (ie.parseParenAndDistinguishExpression = function (e, t, r) {
          (e = e || this.state.start), (t = t || this.state.startLoc);
          var n = void 0;
          this.expect(R.parenL);
          for (
            var i = this.state.start,
              s = this.state.startLoc,
              a = [],
              o = !0,
              u = { start: 0 },
              l = void 0,
              c = void 0,
              f = { start: 0 };
            !this.match(R.parenR);

          ) {
            if (o) o = !1;
            else if (
              (this.expect(R.comma, f.start || null), this.match(R.parenR))
            ) {
              c = this.state.start;
              break;
            }
            if (this.match(R.ellipsis)) {
              var p = this.state.start,
                h = this.state.startLoc;
              (l = this.state.start),
                a.push(this.parseParenItem(this.parseRest(), h, p));
              break;
            }
            a.push(this.parseMaybeAssign(!1, u, this.parseParenItem, f));
          }
          var d = this.state.start,
            m = this.state.startLoc;
          this.expect(R.parenR);
          var v = this.startNodeAt(e, t);
          if (r && this.shouldParseArrow() && (v = this.parseArrow(v))) {
            for (
              var y = a,
                g = Array.isArray(y),
                b = 0,
                y = g ? y : y[Symbol.iterator]();
              ;

            ) {
              var E;
              if (g) {
                if (b >= y.length) break;
                E = y[b++];
              } else {
                if (((b = y.next()), b.done)) break;
                E = b.value;
              }
              var x = E;
              x.extra &&
                x.extra.parenthesized &&
                this.unexpected(x.extra.parenStart);
            }
            return this.parseArrowExpression(v, a);
          }
          return (
            a.length || this.unexpected(this.state.lastTokStart),
            c && this.unexpected(c),
            l && this.unexpected(l),
            u.start && this.unexpected(u.start),
            f.start && this.unexpected(f.start),
            a.length > 1
              ? ((n = this.startNodeAt(i, s)),
                (n.expressions = a),
                this.toReferencedList(n.expressions),
                this.finishNodeAt(n, "SequenceExpression", d, m))
              : (n = a[0]),
            this.addExtra(n, "parenthesized", !0),
            this.addExtra(n, "parenStart", e),
            n
          );
        }),
        (ie.shouldParseArrow = function () {
          return !this.canInsertSemicolon();
        }),
        (ie.parseArrow = function (e) {
          if (this.eat(R.arrow)) return e;
        }),
        (ie.parseParenItem = function (e) {
          return e;
        }),
        (ie.parseNew = function () {
          var e = this.startNode(),
            t = this.parseIdentifier(!0);
          return this.eat(R.dot)
            ? this.parseMetaProperty(e, t, "target")
            : ((e.callee = this.parseNoCallExpr()),
              this.eat(R.parenL)
                ? ((e.arguments = this.parseExprList(R.parenR)),
                  this.toReferencedList(e.arguments))
                : (e.arguments = []),
              this.finishNode(e, "NewExpression"));
        }),
        (ie.parseTemplateElement = function () {
          var e = this.startNode();
          return (
            (e.value = {
              raw: this.input
                .slice(this.state.start, this.state.end)
                .replace(/\r\n?/g, "\n"),
              cooked: this.state.value,
            }),
            this.next(),
            (e.tail = this.match(R.backQuote)),
            this.finishNode(e, "TemplateElement")
          );
        }),
        (ie.parseTemplate = function () {
          var e = this.startNode();
          this.next(), (e.expressions = []);
          var t = this.parseTemplateElement();
          for (e.quasis = [t]; !t.tail; )
            this.expect(R.dollarBraceL),
              e.expressions.push(this.parseExpression()),
              this.expect(R.braceR),
              e.quasis.push((t = this.parseTemplateElement()));
          return this.next(), this.finishNode(e, "TemplateLiteral");
        }),
        (ie.parseObj = function (e, t) {
          var r = [],
            n = Object.create(null),
            i = !0,
            s = this.startNode();
          (s.properties = []), this.next();
          for (var a = null; !this.eat(R.braceR); ) {
            if (i) i = !1;
            else if ((this.expect(R.comma), this.eat(R.braceR))) break;
            for (; this.match(R.at); ) r.push(this.parseDecorator());
            var o = this.startNode(),
              u = !1,
              l = !1,
              c = void 0,
              f = void 0;
            if (
              (r.length && ((o.decorators = r), (r = [])),
              this.hasPlugin("objectRestSpread") && this.match(R.ellipsis))
            ) {
              if (
                ((o = this.parseSpread()),
                (o.type = e ? "RestProperty" : "SpreadProperty"),
                s.properties.push(o),
                !e)
              )
                continue;
              var p = this.state.start;
              if (null === a) {
                if (this.eat(R.braceR)) break;
                if (this.match(R.comma) && this.lookahead().type === R.braceR)
                  continue;
                a = p;
                continue;
              }
              this.unexpected(
                a,
                "Cannot have multiple rest elements when destructuring"
              );
            }
            if (
              ((o.method = !1),
              (o.shorthand = !1),
              (e || t) && ((c = this.state.start), (f = this.state.startLoc)),
              e || (u = this.eat(R.star)),
              !e && this.isContextual("async"))
            ) {
              u && this.unexpected();
              var h = this.parseIdentifier();
              this.match(R.colon) ||
              this.match(R.parenL) ||
              this.match(R.braceR) ||
              this.match(R.eq) ||
              this.match(R.comma)
                ? (o.key = h)
                : ((l = !0),
                  this.hasPlugin("asyncGenerators") && (u = this.eat(R.star)),
                  this.parsePropertyName(o));
            } else this.parsePropertyName(o);
            this.parseObjPropValue(o, c, f, u, l, e, t),
              this.checkPropClash(o, n),
              o.shorthand && this.addExtra(o, "shorthand", !0),
              s.properties.push(o);
          }
          return (
            null !== a &&
              this.unexpected(
                a,
                "The rest element has to be the last element when destructuring"
              ),
            r.length &&
              this.raise(
                this.state.start,
                "You have trailing decorators with no property"
              ),
            this.finishNode(s, e ? "ObjectPattern" : "ObjectExpression")
          );
        }),
        (ie.parseObjPropValue = function (e, t, r, n, i, s, a) {
          if (i || n || this.match(R.parenL))
            return (
              s && this.unexpected(),
              (e.kind = "method"),
              (e.method = !0),
              this.parseMethod(e, n, i),
              this.finishNode(e, "ObjectMethod")
            );
          if (this.eat(R.colon))
            return (
              (e.value = s
                ? this.parseMaybeDefault(this.state.start, this.state.startLoc)
                : this.parseMaybeAssign(!1, a)),
              this.finishNode(e, "ObjectProperty")
            );
          if (
            !(
              s ||
              e.computed ||
              "Identifier" !== e.key.type ||
              ("get" !== e.key.name && "set" !== e.key.name) ||
              this.match(R.comma) ||
              this.match(R.braceR)
            )
          ) {
            (n || i) && this.unexpected(),
              (e.kind = e.key.name),
              this.parsePropertyName(e),
              this.parseMethod(e, !1);
            var o = "get" === e.kind ? 0 : 1;
            if (e.params.length !== o) {
              var u = e.start;
              "get" === e.kind
                ? this.raise(u, "getter should have no params")
                : this.raise(u, "setter should have exactly one param");
            }
            return this.finishNode(e, "ObjectMethod");
          }
          return e.computed || "Identifier" !== e.key.type
            ? void this.unexpected()
            : (s
                ? (this.checkReservedWord(e.key.name, e.key.start, !0, !0),
                  (e.value = this.parseMaybeDefault(t, r, e.key.__clone())))
                : this.match(R.eq) && a
                ? (a.start || (a.start = this.state.start),
                  (e.value = this.parseMaybeDefault(t, r, e.key.__clone())))
                : (e.value = e.key.__clone()),
              (e.shorthand = !0),
              this.finishNode(e, "ObjectProperty"));
        }),
        (ie.parsePropertyName = function (e) {
          return this.eat(R.bracketL)
            ? ((e.computed = !0),
              (e.key = this.parseMaybeAssign()),
              this.expect(R.bracketR),
              e.key)
            : ((e.computed = !1),
              (e.key =
                this.match(R.num) || this.match(R.string)
                  ? this.parseExprAtom()
                  : this.parseIdentifier(!0)));
        }),
        (ie.initFunction = function (e, t) {
          (e.id = null),
            (e.generator = !1),
            (e.expression = !1),
            (e.async = !!t);
        }),
        (ie.parseMethod = function (e, t, r) {
          var n = this.state.inMethod;
          return (
            (this.state.inMethod = e.kind || !0),
            this.initFunction(e, r),
            this.expect(R.parenL),
            (e.params = this.parseBindingList(R.parenR)),
            (e.generator = t),
            this.parseFunctionBody(e),
            (this.state.inMethod = n),
            e
          );
        }),
        (ie.parseArrowExpression = function (e, t, r) {
          return (
            this.initFunction(e, r),
            (e.params = this.toAssignableList(
              t,
              !0,
              "arrow function parameters"
            )),
            this.parseFunctionBody(e, !0),
            this.finishNode(e, "ArrowFunctionExpression")
          );
        }),
        (ie.parseFunctionBody = function (e, t) {
          var r = t && !this.match(R.braceL),
            n = this.state.inAsync;
          if (((this.state.inAsync = e.async), r))
            (e.body = this.parseMaybeAssign()), (e.expression = !0);
          else {
            var i = this.state.inFunction,
              s = this.state.inGenerator,
              a = this.state.labels;
            (this.state.inFunction = !0),
              (this.state.inGenerator = e.generator),
              (this.state.labels = []),
              (e.body = this.parseBlock(!0)),
              (e.expression = !1),
              (this.state.inFunction = i),
              (this.state.inGenerator = s),
              (this.state.labels = a);
          }
          this.state.inAsync = n;
          var o = this.state.strict,
            u = !1;
          if ((t && (o = !0), !r && e.body.directives.length))
            for (
              var l = e.body.directives,
                c = Array.isArray(l),
                f = 0,
                l = c ? l : l[Symbol.iterator]();
              ;

            ) {
              var p;
              if (c) {
                if (f >= l.length) break;
                p = l[f++];
              } else {
                if (((f = l.next()), f.done)) break;
                p = f.value;
              }
              var h = p;
              if ("use strict" === h.value.value) {
                (u = !0), (o = !0);
                break;
              }
            }
          if (
            (u &&
              e.id &&
              "Identifier" === e.id.type &&
              "yield" === e.id.name &&
              this.raise(e.id.start, "Binding yield in strict mode"),
            o)
          ) {
            var d = Object.create(null),
              m = this.state.strict;
            u && (this.state.strict = !0),
              e.id && this.checkLVal(e.id, !0, void 0, "function name");
            for (
              var v = e.params,
                y = Array.isArray(v),
                g = 0,
                v = y ? v : v[Symbol.iterator]();
              ;

            ) {
              var b;
              if (y) {
                if (g >= v.length) break;
                b = v[g++];
              } else {
                if (((g = v.next()), g.done)) break;
                b = g.value;
              }
              var E = b;
              u &&
                "Identifier" !== E.type &&
                this.raise(E.start, "Non-simple parameter in strict mode"),
                this.checkLVal(E, !0, d, "function parameter list");
            }
            this.state.strict = m;
          }
        }),
        (ie.parseExprList = function (e, t, r) {
          for (var n = [], i = !0; !this.eat(e); ) {
            if (i) i = !1;
            else if ((this.expect(R.comma), this.eat(e))) break;
            n.push(this.parseExprListItem(t, r));
          }
          return n;
        }),
        (ie.parseExprListItem = function (e, t) {
          var r = void 0;
          return (r =
            e && this.match(R.comma)
              ? null
              : this.match(R.ellipsis)
              ? this.parseSpread(t)
              : this.parseMaybeAssign(!1, t, this.parseParenItem));
        }),
        (ie.parseIdentifier = function (e) {
          var t = this.startNode();
          return (
            this.match(R.name)
              ? (e ||
                  this.checkReservedWord(
                    this.state.value,
                    this.state.start,
                    !1,
                    !1
                  ),
                (t.name = this.state.value))
              : e && this.state.type.keyword
              ? (t.name = this.state.type.keyword)
              : this.unexpected(),
            !e &&
              "await" === t.name &&
              this.state.inAsync &&
              this.raise(
                t.start,
                "invalid use of await inside of an async function"
              ),
            (t.loc.identifierName = t.name),
            this.next(),
            this.finishNode(t, "Identifier")
          );
        }),
        (ie.checkReservedWord = function (e, t, r, n) {
          (this.isReservedWord(e) || (r && this.isKeyword(e))) &&
            this.raise(t, e + " is a reserved word"),
            this.state.strict &&
              (S.strict(e) || (n && S.strictBind(e))) &&
              this.raise(t, e + " is a reserved word in strict mode");
        }),
        (ie.parseAwait = function (e) {
          return (
            this.state.inAsync || this.unexpected(),
            this.match(R.star) &&
              this.raise(
                e.start,
                "await* has been removed from the async functions proposal. Use Promise.all() instead."
              ),
            (e.argument = this.parseMaybeUnary()),
            this.finishNode(e, "AwaitExpression")
          );
        }),
        (ie.parseYield = function () {
          var e = this.startNode();
          return (
            this.next(),
            this.match(R.semi) ||
            this.canInsertSemicolon() ||
            (!this.match(R.star) && !this.state.type.startsExpr)
              ? ((e.delegate = !1), (e.argument = null))
              : ((e.delegate = this.eat(R.star)),
                (e.argument = this.parseMaybeAssign())),
            this.finishNode(e, "YieldExpression")
          );
        });
      var se = $.prototype,
        ae = ["leadingComments", "trailingComments", "innerComments"],
        oe = (function () {
          function e(t, r, n) {
            E(this, e),
              (this.type = ""),
              (this.start = t),
              (this.end = 0),
              (this.loc = new q(r)),
              n && (this.loc.filename = n);
          }
          return (
            (e.prototype.__clone = function () {
              var t = new e();
              for (var r in this) ae.indexOf(r) < 0 && (t[r] = this[r]);
              return t;
            }),
            e
          );
        })();
      (se.startNode = function () {
        return new oe(this.state.start, this.state.startLoc, this.filename);
      }),
        (se.startNodeAt = function (e, t) {
          return new oe(e, t, this.filename);
        }),
        (se.finishNode = function (e, t) {
          return x.call(
            this,
            e,
            t,
            this.state.lastTokEnd,
            this.state.lastTokEndLoc
          );
        }),
        (se.finishNodeAt = function (e, t, r, n) {
          return x.call(this, e, t, r, n);
        });
      var ue = $.prototype;
      ue.raise = function (e, t) {
        var r = h(this.input, e);
        t += " (" + r.line + ":" + r.column + ")";
        var n = new SyntaxError(t);
        throw ((n.pos = e), (n.loc = r), n);
      };
      var le = $.prototype;
      (le.addComment = function (e) {
        this.filename && (e.loc.filename = this.filename),
          this.state.trailingComments.push(e),
          this.state.leadingComments.push(e);
      }),
        (le.processComment = function (e) {
          if (!("Program" === e.type && e.body.length > 0)) {
            var t = this.state.commentStack,
              r = void 0,
              n = void 0,
              i = void 0,
              s = void 0;
            if (this.state.trailingComments.length > 0)
              this.state.trailingComments[0].start >= e.end
                ? ((n = this.state.trailingComments),
                  (this.state.trailingComments = []))
                : (this.state.trailingComments.length = 0);
            else {
              var a = A(t);
              t.length > 0 &&
                a.trailingComments &&
                a.trailingComments[0].start >= e.end &&
                ((n = a.trailingComments), (a.trailingComments = null));
            }
            for (; t.length > 0 && A(t).start >= e.start; ) r = t.pop();
            if (r) {
              if (r.leadingComments)
                if (r !== e && A(r.leadingComments).end <= e.start)
                  (e.leadingComments = r.leadingComments),
                    (r.leadingComments = null);
                else
                  for (i = r.leadingComments.length - 2; i >= 0; --i)
                    if (r.leadingComments[i].end <= e.start) {
                      e.leadingComments = r.leadingComments.splice(0, i + 1);
                      break;
                    }
            } else if (this.state.leadingComments.length > 0)
              if (A(this.state.leadingComments).end <= e.start) {
                if (this.state.commentPreviousNode)
                  for (s = 0; s < this.state.leadingComments.length; s++)
                    this.state.leadingComments[s].end <
                      this.state.commentPreviousNode.end &&
                      (this.state.leadingComments.splice(s, 1), s--);
                this.state.leadingComments.length > 0 &&
                  ((e.leadingComments = this.state.leadingComments),
                  (this.state.leadingComments = []));
              } else {
                for (
                  i = 0;
                  i < this.state.leadingComments.length &&
                  !(this.state.leadingComments[i].end > e.start);
                  i++
                );
                (e.leadingComments = this.state.leadingComments.slice(0, i)),
                  0 === e.leadingComments.length && (e.leadingComments = null),
                  (n = this.state.leadingComments.slice(i)),
                  0 === n.length && (n = null);
              }
            (this.state.commentPreviousNode = e),
              n &&
                (n.length && n[0].start >= e.start && A(n).end <= e.end
                  ? (e.innerComments = n)
                  : (e.trailingComments = n)),
              t.push(e);
          }
        });
      var ce = $.prototype;
      (ce.flowParseTypeInitialiser = function (e, t) {
        var r = this.state.inType;
        (this.state.inType = !0),
          this.expect(e || R.colon),
          t &&
            (this.match(R.bitwiseAND) || this.match(R.bitwiseOR)) &&
            this.next();
        var n = this.flowParseType();
        return (this.state.inType = r), n;
      }),
        (ce.flowParseDeclareClass = function (e) {
          return (
            this.next(),
            this.flowParseInterfaceish(e, !0),
            this.finishNode(e, "DeclareClass")
          );
        }),
        (ce.flowParseDeclareFunction = function (e) {
          this.next();
          var t = (e.id = this.parseIdentifier()),
            r = this.startNode(),
            n = this.startNode();
          this.isRelational("<")
            ? (r.typeParameters = this.flowParseTypeParameterDeclaration())
            : (r.typeParameters = null),
            this.expect(R.parenL);
          var i = this.flowParseFunctionTypeParams();
          return (
            (r.params = i.params),
            (r.rest = i.rest),
            this.expect(R.parenR),
            (r.returnType = this.flowParseTypeInitialiser()),
            (n.typeAnnotation = this.finishNode(r, "FunctionTypeAnnotation")),
            (t.typeAnnotation = this.finishNode(n, "TypeAnnotation")),
            this.finishNode(t, t.type),
            this.semicolon(),
            this.finishNode(e, "DeclareFunction")
          );
        }),
        (ce.flowParseDeclare = function (e) {
          return this.match(R._class)
            ? this.flowParseDeclareClass(e)
            : this.match(R._function)
            ? this.flowParseDeclareFunction(e)
            : this.match(R._var)
            ? this.flowParseDeclareVariable(e)
            : this.isContextual("module")
            ? this.lookahead().type === R.dot
              ? this.flowParseDeclareModuleExports(e)
              : this.flowParseDeclareModule(e)
            : this.isContextual("type")
            ? this.flowParseDeclareTypeAlias(e)
            : this.isContextual("interface")
            ? this.flowParseDeclareInterface(e)
            : void this.unexpected();
        }),
        (ce.flowParseDeclareVariable = function (e) {
          return (
            this.next(),
            (e.id = this.flowParseTypeAnnotatableIdentifier()),
            this.semicolon(),
            this.finishNode(e, "DeclareVariable")
          );
        }),
        (ce.flowParseDeclareModule = function (e) {
          this.next(),
            this.match(R.string)
              ? (e.id = this.parseExprAtom())
              : (e.id = this.parseIdentifier());
          var t = (e.body = this.startNode()),
            r = (t.body = []);
          for (this.expect(R.braceL); !this.match(R.braceR); ) {
            var n = this.startNode();
            this.expectContextual(
              "declare",
              "Unexpected token. Only declares are allowed inside declare module"
            ),
              r.push(this.flowParseDeclare(n));
          }
          return (
            this.expect(R.braceR),
            this.finishNode(t, "BlockStatement"),
            this.finishNode(e, "DeclareModule")
          );
        }),
        (ce.flowParseDeclareModuleExports = function (e) {
          return (
            this.expectContextual("module"),
            this.expect(R.dot),
            this.expectContextual("exports"),
            (e.typeAnnotation = this.flowParseTypeAnnotation()),
            this.semicolon(),
            this.finishNode(e, "DeclareModuleExports")
          );
        }),
        (ce.flowParseDeclareTypeAlias = function (e) {
          return (
            this.next(),
            this.flowParseTypeAlias(e),
            this.finishNode(e, "DeclareTypeAlias")
          );
        }),
        (ce.flowParseDeclareInterface = function (e) {
          return (
            this.next(),
            this.flowParseInterfaceish(e),
            this.finishNode(e, "DeclareInterface")
          );
        }),
        (ce.flowParseInterfaceish = function (e, t) {
          if (
            ((e.id = this.parseIdentifier()),
            this.isRelational("<")
              ? (e.typeParameters = this.flowParseTypeParameterDeclaration())
              : (e.typeParameters = null),
            (e.extends = []),
            (e.mixins = []),
            this.eat(R._extends))
          )
            do e.extends.push(this.flowParseInterfaceExtends());
            while (this.eat(R.comma));
          if (this.isContextual("mixins")) {
            this.next();
            do e.mixins.push(this.flowParseInterfaceExtends());
            while (this.eat(R.comma));
          }
          e.body = this.flowParseObjectType(t);
        }),
        (ce.flowParseInterfaceExtends = function () {
          var e = this.startNode();
          return (
            (e.id = this.flowParseQualifiedTypeIdentifier()),
            this.isRelational("<")
              ? (e.typeParameters = this.flowParseTypeParameterInstantiation())
              : (e.typeParameters = null),
            this.finishNode(e, "InterfaceExtends")
          );
        }),
        (ce.flowParseInterface = function (e) {
          return (
            this.flowParseInterfaceish(e, !1),
            this.finishNode(e, "InterfaceDeclaration")
          );
        }),
        (ce.flowParseTypeAlias = function (e) {
          return (
            (e.id = this.parseIdentifier()),
            this.isRelational("<")
              ? (e.typeParameters = this.flowParseTypeParameterDeclaration())
              : (e.typeParameters = null),
            (e.right = this.flowParseTypeInitialiser(R.eq, !0)),
            this.semicolon(),
            this.finishNode(e, "TypeAlias")
          );
        }),
        (ce.flowParseTypeParameter = function () {
          var e = this.startNode(),
            t = this.flowParseVariance(),
            r = this.flowParseTypeAnnotatableIdentifier();
          return (
            (e.name = r.name),
            (e.variance = t),
            (e.bound = r.typeAnnotation),
            this.match(R.eq) &&
              (this.eat(R.eq), (e.default = this.flowParseType())),
            this.finishNode(e, "TypeParameter")
          );
        }),
        (ce.flowParseTypeParameterDeclaration = function () {
          var e = this.state.inType,
            t = this.startNode();
          (t.params = []),
            (this.state.inType = !0),
            this.isRelational("<") || this.match(R.jsxTagStart)
              ? this.next()
              : this.unexpected();
          do
            t.params.push(this.flowParseTypeParameter()),
              this.isRelational(">") || this.expect(R.comma);
          while (!this.isRelational(">"));
          return (
            this.expectRelational(">"),
            (this.state.inType = e),
            this.finishNode(t, "TypeParameterDeclaration")
          );
        }),
        (ce.flowParseTypeParameterInstantiation = function () {
          var e = this.startNode(),
            t = this.state.inType;
          for (
            e.params = [], this.state.inType = !0, this.expectRelational("<");
            !this.isRelational(">");

          )
            e.params.push(this.flowParseType()),
              this.isRelational(">") || this.expect(R.comma);
          return (
            this.expectRelational(">"),
            (this.state.inType = t),
            this.finishNode(e, "TypeParameterInstantiation")
          );
        }),
        (ce.flowParseObjectPropertyKey = function () {
          return this.match(R.num) || this.match(R.string)
            ? this.parseExprAtom()
            : this.parseIdentifier(!0);
        }),
        (ce.flowParseObjectTypeIndexer = function (e, t, r) {
          return (
            (e.static = t),
            this.expect(R.bracketL),
            this.lookahead().type === R.colon
              ? ((e.id = this.flowParseObjectPropertyKey()),
                (e.key = this.flowParseTypeInitialiser()))
              : ((e.id = null), (e.key = this.flowParseType())),
            this.expect(R.bracketR),
            (e.value = this.flowParseTypeInitialiser()),
            (e.variance = r),
            this.flowObjectTypeSemicolon(),
            this.finishNode(e, "ObjectTypeIndexer")
          );
        }),
        (ce.flowParseObjectTypeMethodish = function (e) {
          for (
            e.params = [],
              e.rest = null,
              e.typeParameters = null,
              this.isRelational("<") &&
                (e.typeParameters = this.flowParseTypeParameterDeclaration()),
              this.expect(R.parenL);
            this.match(R.name);

          )
            e.params.push(this.flowParseFunctionTypeParam()),
              this.match(R.parenR) || this.expect(R.comma);
          return (
            this.eat(R.ellipsis) &&
              (e.rest = this.flowParseFunctionTypeParam()),
            this.expect(R.parenR),
            (e.returnType = this.flowParseTypeInitialiser()),
            this.finishNode(e, "FunctionTypeAnnotation")
          );
        }),
        (ce.flowParseObjectTypeMethod = function (e, t, r, n) {
          var i = this.startNodeAt(e, t);
          return (
            (i.value = this.flowParseObjectTypeMethodish(
              this.startNodeAt(e, t)
            )),
            (i.static = r),
            (i.key = n),
            (i.optional = !1),
            this.flowObjectTypeSemicolon(),
            this.finishNode(i, "ObjectTypeProperty")
          );
        }),
        (ce.flowParseObjectTypeCallProperty = function (e, t) {
          var r = this.startNode();
          return (
            (e.static = t),
            (e.value = this.flowParseObjectTypeMethodish(r)),
            this.flowObjectTypeSemicolon(),
            this.finishNode(e, "ObjectTypeCallProperty")
          );
        }),
        (ce.flowParseObjectType = function (e, t) {
          var r = this.state.inType;
          this.state.inType = !0;
          var n = this.startNode(),
            i = void 0,
            s = void 0,
            a = !1;
          (n.callProperties = []), (n.properties = []), (n.indexers = []);
          var o = void 0,
            u = void 0;
          for (
            t && this.match(R.braceBarL)
              ? (this.expect(R.braceBarL), (o = R.braceBarR), (u = !0))
              : (this.expect(R.braceL), (o = R.braceR), (u = !1)),
              n.exact = u;
            !this.match(o);

          ) {
            var l = !1,
              c = this.state.start,
              f = this.state.startLoc;
            (i = this.startNode()),
              e &&
                this.isContextual("static") &&
                this.lookahead().type !== R.colon &&
                (this.next(), (a = !0));
            var p = this.state.start,
              h = this.flowParseVariance();
            this.match(R.bracketL)
              ? n.indexers.push(this.flowParseObjectTypeIndexer(i, a, h))
              : this.match(R.parenL) || this.isRelational("<")
              ? (h && this.unexpected(p),
                n.callProperties.push(
                  this.flowParseObjectTypeCallProperty(i, e)
                ))
              : ((s = this.flowParseObjectPropertyKey()),
                this.isRelational("<") || this.match(R.parenL)
                  ? (h && this.unexpected(p),
                    n.properties.push(
                      this.flowParseObjectTypeMethod(c, f, a, s)
                    ))
                  : (this.eat(R.question) && (l = !0),
                    (i.key = s),
                    (i.value = this.flowParseTypeInitialiser()),
                    (i.optional = l),
                    (i.static = a),
                    (i.variance = h),
                    this.flowObjectTypeSemicolon(),
                    n.properties.push(
                      this.finishNode(i, "ObjectTypeProperty")
                    ))),
              (a = !1);
          }
          this.expect(o);
          var d = this.finishNode(n, "ObjectTypeAnnotation");
          return (this.state.inType = r), d;
        }),
        (ce.flowObjectTypeSemicolon = function () {
          this.eat(R.semi) ||
            this.eat(R.comma) ||
            this.match(R.braceR) ||
            this.match(R.braceBarR) ||
            this.unexpected();
        }),
        (ce.flowParseQualifiedTypeIdentifier = function (e, t, r) {
          (e = e || this.state.start), (t = t || this.state.startLoc);
          for (var n = r || this.parseIdentifier(); this.eat(R.dot); ) {
            var i = this.startNodeAt(e, t);
            (i.qualification = n),
              (i.id = this.parseIdentifier()),
              (n = this.finishNode(i, "QualifiedTypeIdentifier"));
          }
          return n;
        }),
        (ce.flowParseGenericType = function (e, t, r) {
          var n = this.startNodeAt(e, t);
          return (
            (n.typeParameters = null),
            (n.id = this.flowParseQualifiedTypeIdentifier(e, t, r)),
            this.isRelational("<") &&
              (n.typeParameters = this.flowParseTypeParameterInstantiation()),
            this.finishNode(n, "GenericTypeAnnotation")
          );
        }),
        (ce.flowParseTypeofType = function () {
          var e = this.startNode();
          return (
            this.expect(R._typeof),
            (e.argument = this.flowParsePrimaryType()),
            this.finishNode(e, "TypeofTypeAnnotation")
          );
        }),
        (ce.flowParseTupleType = function () {
          var e = this.startNode();
          for (
            e.types = [], this.expect(R.bracketL);
            this.state.pos < this.input.length &&
            !this.match(R.bracketR) &&
            (e.types.push(this.flowParseType()), !this.match(R.bracketR));

          )
            this.expect(R.comma);
          return (
            this.expect(R.bracketR), this.finishNode(e, "TupleTypeAnnotation")
          );
        }),
        (ce.flowParseFunctionTypeParam = function () {
          var e = null,
            t = !1,
            r = null,
            n = this.startNode(),
            i = this.lookahead();
          return (
            i.type === R.colon || i.type === R.question
              ? ((e = this.parseIdentifier()),
                this.eat(R.question) && (t = !0),
                (r = this.flowParseTypeInitialiser()))
              : (r = this.flowParseType()),
            (n.name = e),
            (n.optional = t),
            (n.typeAnnotation = r),
            this.finishNode(n, "FunctionTypeParam")
          );
        }),
        (ce.reinterpretTypeAsFunctionTypeParam = function (e) {
          var t = this.startNodeAt(e.start, e.loc);
          return (
            (t.name = null),
            (t.optional = !1),
            (t.typeAnnotation = e),
            this.finishNode(t, "FunctionTypeParam")
          );
        }),
        (ce.flowParseFunctionTypeParams = function () {
          for (
            var e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : [],
              t = { params: e, rest: null };
            this.match(R.name);

          )
            t.params.push(this.flowParseFunctionTypeParam()),
              this.match(R.parenR) || this.expect(R.comma);
          return (
            this.eat(R.ellipsis) &&
              (t.rest = this.flowParseFunctionTypeParam()),
            t
          );
        }),
        (ce.flowIdentToTypeAnnotation = function (e, t, r, n) {
          switch (n.name) {
            case "any":
              return this.finishNode(r, "AnyTypeAnnotation");
            case "void":
              return this.finishNode(r, "VoidTypeAnnotation");
            case "bool":
            case "boolean":
              return this.finishNode(r, "BooleanTypeAnnotation");
            case "mixed":
              return this.finishNode(r, "MixedTypeAnnotation");
            case "empty":
              return this.finishNode(r, "EmptyTypeAnnotation");
            case "number":
              return this.finishNode(r, "NumberTypeAnnotation");
            case "string":
              return this.finishNode(r, "StringTypeAnnotation");
            default:
              return this.flowParseGenericType(e, t, n);
          }
        }),
        (ce.flowParsePrimaryType = function () {
          var e = this.state.start,
            t = this.state.startLoc,
            r = this.startNode(),
            n = void 0,
            i = void 0,
            s = !1,
            a = this.state.noAnonFunctionType;
          switch (this.state.type) {
            case R.name:
              return this.flowIdentToTypeAnnotation(
                e,
                t,
                r,
                this.parseIdentifier()
              );
            case R.braceL:
              return this.flowParseObjectType(!1, !1);
            case R.braceBarL:
              return this.flowParseObjectType(!1, !0);
            case R.bracketL:
              return this.flowParseTupleType();
            case R.relational:
              if ("<" === this.state.value)
                return (
                  (r.typeParameters = this.flowParseTypeParameterDeclaration()),
                  this.expect(R.parenL),
                  (n = this.flowParseFunctionTypeParams()),
                  (r.params = n.params),
                  (r.rest = n.rest),
                  this.expect(R.parenR),
                  this.expect(R.arrow),
                  (r.returnType = this.flowParseType()),
                  this.finishNode(r, "FunctionTypeAnnotation")
                );
              break;
            case R.parenL:
              if (
                (this.next(), !this.match(R.parenR) && !this.match(R.ellipsis))
              )
                if (this.match(R.name)) {
                  var o = this.lookahead().type;
                  s = o !== R.question && o !== R.colon;
                } else s = !0;
              if (s) {
                if (
                  ((this.state.noAnonFunctionType = !1),
                  (i = this.flowParseType()),
                  (this.state.noAnonFunctionType = a),
                  this.state.noAnonFunctionType ||
                    !(
                      this.match(R.comma) ||
                      (this.match(R.parenR) &&
                        this.lookahead().type === R.arrow)
                    ))
                )
                  return this.expect(R.parenR), i;
                this.eat(R.comma);
              }
              return (
                (n = i
                  ? this.flowParseFunctionTypeParams([
                      this.reinterpretTypeAsFunctionTypeParam(i),
                    ])
                  : this.flowParseFunctionTypeParams()),
                (r.params = n.params),
                (r.rest = n.rest),
                this.expect(R.parenR),
                this.expect(R.arrow),
                (r.returnType = this.flowParseType()),
                (r.typeParameters = null),
                this.finishNode(r, "FunctionTypeAnnotation")
              );
            case R.string:
              return (
                (r.value = this.state.value),
                this.addExtra(r, "rawValue", r.value),
                this.addExtra(
                  r,
                  "raw",
                  this.input.slice(this.state.start, this.state.end)
                ),
                this.next(),
                this.finishNode(r, "StringLiteralTypeAnnotation")
              );
            case R._true:
            case R._false:
              return (
                (r.value = this.match(R._true)),
                this.next(),
                this.finishNode(r, "BooleanLiteralTypeAnnotation")
              );
            case R.plusMin:
              if ("-" === this.state.value)
                return (
                  this.next(),
                  this.match(R.num) || this.unexpected(),
                  (r.value = -this.state.value),
                  this.addExtra(r, "rawValue", r.value),
                  this.addExtra(
                    r,
                    "raw",
                    this.input.slice(this.state.start, this.state.end)
                  ),
                  this.next(),
                  this.finishNode(r, "NumericLiteralTypeAnnotation")
                );
            case R.num:
              return (
                (r.value = this.state.value),
                this.addExtra(r, "rawValue", r.value),
                this.addExtra(
                  r,
                  "raw",
                  this.input.slice(this.state.start, this.state.end)
                ),
                this.next(),
                this.finishNode(r, "NumericLiteralTypeAnnotation")
              );
            case R._null:
              return (
                (r.value = this.match(R._null)),
                this.next(),
                this.finishNode(r, "NullLiteralTypeAnnotation")
              );
            case R._this:
              return (
                (r.value = this.match(R._this)),
                this.next(),
                this.finishNode(r, "ThisTypeAnnotation")
              );
            case R.star:
              return this.next(), this.finishNode(r, "ExistentialTypeParam");
            default:
              if ("typeof" === this.state.type.keyword)
                return this.flowParseTypeofType();
          }
          this.unexpected();
        }),
        (ce.flowParsePostfixType = function () {
          for (
            var e = this.state.start,
              t = this.state.startLoc,
              r = this.flowParsePrimaryType();
            !this.canInsertSemicolon() && this.match(R.bracketL);

          ) {
            var n = this.startNodeAt(e, t);
            (n.elementType = r),
              this.expect(R.bracketL),
              this.expect(R.bracketR),
              (r = this.finishNode(n, "ArrayTypeAnnotation"));
          }
          return r;
        }),
        (ce.flowParsePrefixType = function () {
          var e = this.startNode();
          return this.eat(R.question)
            ? ((e.typeAnnotation = this.flowParsePrefixType()),
              this.finishNode(e, "NullableTypeAnnotation"))
            : this.flowParsePostfixType();
        }),
        (ce.flowParseAnonFunctionWithoutParens = function () {
          var e = this.flowParsePrefixType();
          if (!this.state.noAnonFunctionType && this.eat(R.arrow)) {
            var t = this.startNodeAt(e.start, e.loc);
            return (
              (t.params = [this.reinterpretTypeAsFunctionTypeParam(e)]),
              (t.rest = null),
              (t.returnType = this.flowParseType()),
              (t.typeParameters = null),
              this.finishNode(t, "FunctionTypeAnnotation")
            );
          }
          return e;
        }),
        (ce.flowParseIntersectionType = function () {
          var e = this.startNode(),
            t = this.flowParseAnonFunctionWithoutParens();
          for (e.types = [t]; this.eat(R.bitwiseAND); )
            e.types.push(this.flowParseAnonFunctionWithoutParens());
          return 1 === e.types.length
            ? t
            : this.finishNode(e, "IntersectionTypeAnnotation");
        }),
        (ce.flowParseUnionType = function () {
          var e = this.startNode(),
            t = this.flowParseIntersectionType();
          for (e.types = [t]; this.eat(R.bitwiseOR); )
            e.types.push(this.flowParseIntersectionType());
          return 1 === e.types.length
            ? t
            : this.finishNode(e, "UnionTypeAnnotation");
        }),
        (ce.flowParseType = function () {
          var e = this.state.inType;
          this.state.inType = !0;
          var t = this.flowParseUnionType();
          return (this.state.inType = e), t;
        }),
        (ce.flowParseTypeAnnotation = function () {
          var e = this.startNode();
          return (
            (e.typeAnnotation = this.flowParseTypeInitialiser()),
            this.finishNode(e, "TypeAnnotation")
          );
        }),
        (ce.flowParseTypeAnnotatableIdentifier = function () {
          var e = this.parseIdentifier();
          return (
            this.match(R.colon) &&
              ((e.typeAnnotation = this.flowParseTypeAnnotation()),
              this.finishNode(e, e.type)),
            e
          );
        }),
        (ce.typeCastToParameter = function (e) {
          return (
            (e.expression.typeAnnotation = e.typeAnnotation),
            this.finishNodeAt(
              e.expression,
              e.expression.type,
              e.typeAnnotation.end,
              e.typeAnnotation.loc.end
            )
          );
        }),
        (ce.flowParseVariance = function () {
          var e = null;
          return (
            this.match(R.plusMin) &&
              ("+" === this.state.value
                ? (e = "plus")
                : "-" === this.state.value && (e = "minus"),
              this.next()),
            e
          );
        });
      var fe = function (e) {
          e.extend("parseFunctionBody", function (e) {
            return function (t, r) {
              return (
                this.match(R.colon) &&
                  !r &&
                  (t.returnType = this.flowParseTypeAnnotation()),
                e.call(this, t, r)
              );
            };
          }),
            e.extend("parseStatement", function (e) {
              return function (t, r) {
                if (
                  this.state.strict &&
                  this.match(R.name) &&
                  "interface" === this.state.value
                ) {
                  var n = this.startNode();
                  return this.next(), this.flowParseInterface(n);
                }
                return e.call(this, t, r);
              };
            }),
            e.extend("parseExpressionStatement", function (e) {
              return function (t, r) {
                if ("Identifier" === r.type)
                  if ("declare" === r.name) {
                    if (
                      this.match(R._class) ||
                      this.match(R.name) ||
                      this.match(R._function) ||
                      this.match(R._var)
                    )
                      return this.flowParseDeclare(t);
                  } else if (this.match(R.name)) {
                    if ("interface" === r.name)
                      return this.flowParseInterface(t);
                    if ("type" === r.name) return this.flowParseTypeAlias(t);
                  }
                return e.call(this, t, r);
              };
            }),
            e.extend("shouldParseExportDeclaration", function (e) {
              return function () {
                return (
                  this.isContextual("type") ||
                  this.isContextual("interface") ||
                  e.call(this)
                );
              };
            }),
            e.extend("parseConditional", function (e) {
              return function (t, r, n, i, s) {
                if (s && this.match(R.question)) {
                  var a = this.state.clone();
                  try {
                    return e.call(this, t, r, n, i);
                  } catch (e) {
                    if (e instanceof SyntaxError)
                      return (
                        (this.state = a),
                        (s.start = e.pos || this.state.start),
                        t
                      );
                    throw e;
                  }
                }
                return e.call(this, t, r, n, i);
              };
            }),
            e.extend("parseParenItem", function (e) {
              return function (t, r, n) {
                if (
                  ((t = e.call(this, t, r, n)),
                  this.eat(R.question) && (t.optional = !0),
                  this.match(R.colon))
                ) {
                  var i = this.startNodeAt(r, n);
                  return (
                    (i.expression = t),
                    (i.typeAnnotation = this.flowParseTypeAnnotation()),
                    this.finishNode(i, "TypeCastExpression")
                  );
                }
                return t;
              };
            }),
            e.extend("parseExport", function (e) {
              return function (t) {
                return (
                  (t = e.call(this, t)),
                  "ExportNamedDeclaration" === t.type &&
                    (t.exportKind = t.exportKind || "value"),
                  t
                );
              };
            }),
            e.extend("parseExportDeclaration", function (e) {
              return function (t) {
                if (this.isContextual("type")) {
                  t.exportKind = "type";
                  var r = this.startNode();
                  return (
                    this.next(),
                    this.match(R.braceL)
                      ? ((t.specifiers = this.parseExportSpecifiers()),
                        this.parseExportFrom(t),
                        null)
                      : this.flowParseTypeAlias(r)
                  );
                }
                if (this.isContextual("interface")) {
                  t.exportKind = "type";
                  var n = this.startNode();
                  return this.next(), this.flowParseInterface(n);
                }
                return e.call(this, t);
              };
            }),
            e.extend("parseClassId", function (e) {
              return function (t) {
                e.apply(this, arguments),
                  this.isRelational("<") &&
                    (t.typeParameters = this.flowParseTypeParameterDeclaration());
              };
            }),
            e.extend("isKeyword", function (e) {
              return function (t) {
                return (!this.state.inType || "void" !== t) && e.call(this, t);
              };
            }),
            e.extend("parsePropertyName", function (e) {
              return function (t) {
                var r = this.state.inType;
                this.state.inType = !0;
                var n = e.call(this, t);
                return (this.state.inType = r), n;
              };
            }),
            e.extend("readToken", function (e) {
              return function (t) {
                return !this.state.inType || (62 !== t && 60 !== t)
                  ? e.call(this, t)
                  : this.finishOp(R.relational, 1);
              };
            }),
            e.extend("jsx_readToken", function (e) {
              return function () {
                if (!this.state.inType) return e.call(this);
              };
            }),
            e.extend("toAssignable", function (e) {
              return function (t, r, n) {
                return "TypeCastExpression" === t.type
                  ? e.call(this, this.typeCastToParameter(t), r, n)
                  : e.call(this, t, r, n);
              };
            }),
            e.extend("toAssignableList", function (e) {
              return function (t, r, n) {
                for (var i = 0; i < t.length; i++) {
                  var s = t[i];
                  s &&
                    "TypeCastExpression" === s.type &&
                    (t[i] = this.typeCastToParameter(s));
                }
                return e.call(this, t, r, n);
              };
            }),
            e.extend("toReferencedList", function () {
              return function (e) {
                for (var t = 0; t < e.length; t++) {
                  var r = e[t];
                  r &&
                    r._exprListItem &&
                    "TypeCastExpression" === r.type &&
                    this.raise(r.start, "Unexpected type cast");
                }
                return e;
              };
            }),
            e.extend("parseExprListItem", function (e) {
              return function (t, r) {
                var n = this.startNode(),
                  i = e.call(this, t, r);
                return this.match(R.colon)
                  ? ((n._exprListItem = !0),
                    (n.expression = i),
                    (n.typeAnnotation = this.flowParseTypeAnnotation()),
                    this.finishNode(n, "TypeCastExpression"))
                  : i;
              };
            }),
            e.extend("checkLVal", function (e) {
              return function (t) {
                if ("TypeCastExpression" !== t.type)
                  return e.apply(this, arguments);
              };
            }),
            e.extend("parseClassProperty", function (e) {
              return function (t) {
                return (
                  delete t.variancePos,
                  this.match(R.colon) &&
                    (t.typeAnnotation = this.flowParseTypeAnnotation()),
                  e.call(this, t)
                );
              };
            }),
            e.extend("isClassProperty", function (e) {
              return function () {
                return this.match(R.colon) || e.call(this);
              };
            }),
            e.extend("parseClassMethod", function () {
              return function (e, t, r, n) {
                t.variance && this.unexpected(t.variancePos),
                  delete t.variance,
                  delete t.variancePos,
                  this.isRelational("<") &&
                    (t.typeParameters = this.flowParseTypeParameterDeclaration()),
                  this.parseMethod(t, r, n),
                  e.body.push(this.finishNode(t, "ClassMethod"));
              };
            }),
            e.extend("parseClassSuper", function (e) {
              return function (t, r) {
                if (
                  (e.call(this, t, r),
                  t.superClass &&
                    this.isRelational("<") &&
                    (t.superTypeParameters = this.flowParseTypeParameterInstantiation()),
                  this.isContextual("implements"))
                ) {
                  this.next();
                  var n = (t.implements = []);
                  do {
                    var i = this.startNode();
                    (i.id = this.parseIdentifier()),
                      this.isRelational("<")
                        ? (i.typeParameters = this.flowParseTypeParameterInstantiation())
                        : (i.typeParameters = null),
                      n.push(this.finishNode(i, "ClassImplements"));
                  } while (this.eat(R.comma));
                }
              };
            }),
            e.extend("parsePropertyName", function (e) {
              return function (t) {
                var r = this.state.start,
                  n = this.flowParseVariance(),
                  i = e.call(this, t);
                return (t.variance = n), (t.variancePos = r), i;
              };
            }),
            e.extend("parseObjPropValue", function (e) {
              return function (t) {
                t.variance && this.unexpected(t.variancePos),
                  delete t.variance,
                  delete t.variancePos;
                var r = void 0;
                this.isRelational("<") &&
                  ((r = this.flowParseTypeParameterDeclaration()),
                  this.match(R.parenL) || this.unexpected()),
                  e.apply(this, arguments),
                  r && ((t.value || t).typeParameters = r);
              };
            }),
            e.extend("parseAssignableListItemTypes", function () {
              return function (e) {
                return (
                  this.eat(R.question) && (e.optional = !0),
                  this.match(R.colon) &&
                    (e.typeAnnotation = this.flowParseTypeAnnotation()),
                  this.finishNode(e, e.type),
                  e
                );
              };
            }),
            e.extend("parseMaybeDefault", function (e) {
              return function () {
                for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
                  r[n] = arguments[n];
                var i = e.apply(this, r);
                return (
                  "AssignmentPattern" === i.type &&
                    i.typeAnnotation &&
                    i.right.start < i.typeAnnotation.start &&
                    this.raise(
                      i.typeAnnotation.start,
                      "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`"
                    ),
                  i
                );
              };
            }),
            e.extend("parseImportSpecifiers", function (e) {
              return function (t) {
                t.importKind = "value";
                var r = null;
                if (
                  (this.match(R._typeof)
                    ? (r = "typeof")
                    : this.isContextual("type") && (r = "type"),
                  r)
                ) {
                  var n = this.lookahead();
                  ((n.type === R.name && "from" !== n.value) ||
                    n.type === R.braceL ||
                    n.type === R.star) &&
                    (this.next(), (t.importKind = r));
                }
                e.call(this, t);
              };
            }),
            e.extend("parseFunctionParams", function (e) {
              return function (t) {
                this.isRelational("<") &&
                  (t.typeParameters = this.flowParseTypeParameterDeclaration()),
                  e.call(this, t);
              };
            }),
            e.extend("parseVarHead", function (e) {
              return function (t) {
                e.call(this, t),
                  this.match(R.colon) &&
                    ((t.id.typeAnnotation = this.flowParseTypeAnnotation()),
                    this.finishNode(t.id, t.id.type));
              };
            }),
            e.extend("parseAsyncArrowFromCallExpression", function (e) {
              return function (t, r) {
                if (this.match(R.colon)) {
                  var n = this.state.noAnonFunctionType;
                  (this.state.noAnonFunctionType = !0),
                    (t.returnType = this.flowParseTypeAnnotation()),
                    (this.state.noAnonFunctionType = n);
                }
                return e.call(this, t, r);
              };
            }),
            e.extend("shouldParseAsyncArrow", function (e) {
              return function () {
                return this.match(R.colon) || e.call(this);
              };
            }),
            e.extend("parseMaybeAssign", function (e) {
              return function () {
                for (
                  var t = null, r = arguments.length, n = Array(r), i = 0;
                  i < r;
                  i++
                )
                  n[i] = arguments[i];
                if (R.jsxTagStart && this.match(R.jsxTagStart)) {
                  var s = this.state.clone();
                  try {
                    return e.apply(this, n);
                  } catch (e) {
                    if (!(e instanceof SyntaxError)) throw e;
                    (this.state = s), (t = e);
                  }
                }
                if (
                  (this.state.context.push(W.parenExpression),
                  null != t || this.isRelational("<"))
                ) {
                  var a = void 0,
                    o = void 0;
                  try {
                    (o = this.flowParseTypeParameterDeclaration()),
                      (a = e.apply(this, n)),
                      (a.typeParameters = o),
                      (a.start = o.start),
                      (a.loc.start = o.loc.start);
                  } catch (e) {
                    throw t || e;
                  }
                  if ("ArrowFunctionExpression" === a.type) return a;
                  if (null != t) throw t;
                  this.raise(
                    o.start,
                    "Expected an arrow function after this type parameter declaration"
                  );
                }
                return this.state.context.pop(), e.apply(this, n);
              };
            }),
            e.extend("parseArrow", function (e) {
              return function (t) {
                if (this.match(R.colon)) {
                  var r = this.state.clone();
                  try {
                    var n = this.state.noAnonFunctionType;
                    this.state.noAnonFunctionType = !0;
                    var i = this.flowParseTypeAnnotation();
                    (this.state.noAnonFunctionType = n),
                      this.canInsertSemicolon() && this.unexpected(),
                      this.match(R.arrow) || this.unexpected(),
                      (t.returnType = i);
                  } catch (e) {
                    if (!(e instanceof SyntaxError)) throw e;
                    this.state = r;
                  }
                }
                return e.call(this, t);
              };
            }),
            e.extend("shouldParseArrow", function (e) {
              return function () {
                return this.match(R.colon) || e.call(this);
              };
            }),
            e.extend("isClassMutatorStarter", function (e) {
              return function () {
                return !!this.isRelational("<") || e.call(this);
              };
            });
        },
        pe = {
          quot: '"',
          amp: "&",
          apos: "'",
          lt: "<",
          gt: ">",
          nbsp: "Â ",
          iexcl: "Â¡",
          cent: "Â¢",
          pound: "Â£",
          curren: "Â¤",
          yen: "Â¥",
          brvbar: "Â¦",
          sect: "Â§",
          uml: "Â¨",
          copy: "Â©",
          ordf: "Âª",
          laquo: "Â«",
          not: "Â¬",
          shy: "Â­",
          reg: "Â®",
          macr: "Â¯",
          deg: "Â°",
          plusmn: "Â±",
          sup2: "Â²",
          sup3: "Â³",
          acute: "Â´",
          micro: "Âµ",
          para: "Â¶",
          middot: "Â·",
          cedil: "Â¸",
          sup1: "Â¹",
          ordm: "Âº",
          raquo: "Â»",
          frac14: "Â¼",
          frac12: "Â½",
          frac34: "Â¾",
          iquest: "Â¿",
          Agrave: "Ã",
          Aacute: "Ã",
          Acirc: "Ã",
          Atilde: "Ã",
          Auml: "Ã",
          Aring: "Ã",
          AElig: "Ã",
          Ccedil: "Ã",
          Egrave: "Ã",
          Eacute: "Ã",
          Ecirc: "Ã",
          Euml: "Ã",
          Igrave: "Ã",
          Iacute: "Ã",
          Icirc: "Ã",
          Iuml: "Ã",
          ETH: "Ã",
          Ntilde: "Ã",
          Ograve: "Ã",
          Oacute: "Ã",
          Ocirc: "Ã",
          Otilde: "Ã",
          Ouml: "Ã",
          times: "Ã",
          Oslash: "Ã",
          Ugrave: "Ã",
          Uacute: "Ã",
          Ucirc: "Ã",
          Uuml: "Ã",
          Yacute: "Ã",
          THORN: "Ã",
          szlig: "Ã",
          agrave: "Ã ",
          aacute: "Ã¡",
          acirc: "Ã¢",
          atilde: "Ã£",
          auml: "Ã¤",
          aring: "Ã¥",
          aelig: "Ã¦",
          ccedil: "Ã§",
          egrave: "Ã¨",
          eacute: "Ã©",
          ecirc: "Ãª",
          euml: "Ã«",
          igrave: "Ã¬",
          iacute: "Ã­",
          icirc: "Ã®",
          iuml: "Ã¯",
          eth: "Ã°",
          ntilde: "Ã±",
          ograve: "Ã²",
          oacute: "Ã³",
          ocirc: "Ã´",
          otilde: "Ãµ",
          ouml: "Ã¶",
          divide: "Ã·",
          oslash: "Ã¸",
          ugrave: "Ã¹",
          uacute: "Ãº",
          ucirc: "Ã»",
          uuml: "Ã¼",
          yacute: "Ã½",
          thorn: "Ã¾",
          yuml: "Ã¿",
          OElig: "Å",
          oelig: "Å",
          Scaron: "Å ",
          scaron: "Å¡",
          Yuml: "Å¸",
          fnof: "Æ",
          circ: "Ë",
          tilde: "Ë",
          Alpha: "Î",
          Beta: "Î",
          Gamma: "Î",
          Delta: "Î",
          Epsilon: "Î",
          Zeta: "Î",
          Eta: "Î",
          Theta: "Î",
          Iota: "Î",
          Kappa: "Î",
          Lambda: "Î",
          Mu: "Î",
          Nu: "Î",
          Xi: "Î",
          Omicron: "Î",
          Pi: "Î ",
          Rho: "Î¡",
          Sigma: "Î£",
          Tau: "Î¤",
          Upsilon: "Î¥",
          Phi: "Î¦",
          Chi: "Î§",
          Psi: "Î¨",
          Omega: "Î©",
          alpha: "Î±",
          beta: "Î²",
          gamma: "Î³",
          delta: "Î´",
          epsilon: "Îµ",
          zeta: "Î¶",
          eta: "Î·",
          theta: "Î¸",
          iota: "Î¹",
          kappa: "Îº",
          lambda: "Î»",
          mu: "Î¼",
          nu: "Î½",
          xi: "Î¾",
          omicron: "Î¿",
          pi: "Ï",
          rho: "Ï",
          sigmaf: "Ï",
          sigma: "Ï",
          tau: "Ï",
          upsilon: "Ï",
          phi: "Ï",
          chi: "Ï",
          psi: "Ï",
          omega: "Ï",
          thetasym: "Ï",
          upsih: "Ï",
          piv: "Ï",
          ensp: "â",
          emsp: "â",
          thinsp: "â",
          zwnj: "â",
          zwj: "â",
          lrm: "â",
          rlm: "â",
          ndash: "â",
          mdash: "â",
          lsquo: "â",
          rsquo: "â",
          sbquo: "â",
          ldquo: "â",
          rdquo: "â",
          bdquo: "â",
          dagger: "â ",
          Dagger: "â¡",
          bull: "â¢",
          hellip: "â¦",
          permil: "â°",
          prime: "â²",
          Prime: "â³",
          lsaquo: "â¹",
          rsaquo: "âº",
          oline: "â¾",
          frasl: "â",
          euro: "â¬",
          image: "â",
          weierp: "â",
          real: "â",
          trade: "â¢",
          alefsym: "âµ",
          larr: "â",
          uarr: "â",
          rarr: "â",
          darr: "â",
          harr: "â",
          crarr: "âµ",
          lArr: "â",
          uArr: "â",
          rArr: "â",
          dArr: "â",
          hArr: "â",
          forall: "â",
          part: "â",
          exist: "â",
          empty: "â",
          nabla: "â",
          isin: "â",
          notin: "â",
          ni: "â",
          prod: "â",
          sum: "â",
          minus: "â",
          lowast: "â",
          radic: "â",
          prop: "â",
          infin: "â",
          ang: "â ",
          and: "â§",
          or: "â¨",
          cap: "â©",
          cup: "âª",
          int: "â«",
          there4: "â´",
          sim: "â¼",
          cong: "â",
          asymp: "â",
          ne: "â ",
          equiv: "â¡",
          le: "â¤",
          ge: "â¥",
          sub: "â",
          sup: "â",
          nsub: "â",
          sube: "â",
          supe: "â",
          oplus: "â",
          otimes: "â",
          perp: "â¥",
          sdot: "â",
          lceil: "â",
          rceil: "â",
          lfloor: "â",
          rfloor: "â",
          lang: "â©",
          rang: "âª",
          loz: "â",
          spades: "â ",
          clubs: "â£",
          hearts: "â¥",
          diams: "â¦",
        },
        he = /^[\da-fA-F]+$/,
        de = /^\d+$/;
      (W.j_oTag = new G("<tag", !1)),
        (W.j_cTag = new G("</tag", !1)),
        (W.j_expr = new G("<tag>...</tag>", !0, !0)),
        (R.jsxName = new I("jsxName")),
        (R.jsxText = new I("jsxText", { beforeExpr: !0 })),
        (R.jsxTagStart = new I("jsxTagStart", { startsExpr: !0 })),
        (R.jsxTagEnd = new I("jsxTagEnd")),
        (R.jsxTagStart.updateContext = function () {
          this.state.context.push(W.j_expr),
            this.state.context.push(W.j_oTag),
            (this.state.exprAllowed = !1);
        }),
        (R.jsxTagEnd.updateContext = function (e) {
          var t = this.state.context.pop();
          (t === W.j_oTag && e === R.slash) || t === W.j_cTag
            ? (this.state.context.pop(),
              (this.state.exprAllowed = this.curContext() === W.j_expr))
            : (this.state.exprAllowed = !0);
        });
      var me = $.prototype;
      (me.jsxReadToken = function () {
        for (var e = "", t = this.state.pos; ; ) {
          this.state.pos >= this.input.length &&
            this.raise(this.state.start, "Unterminated JSX contents");
          var r = this.input.charCodeAt(this.state.pos);
          switch (r) {
            case 60:
            case 123:
              return this.state.pos === this.state.start
                ? 60 === r && this.state.exprAllowed
                  ? (++this.state.pos, this.finishToken(R.jsxTagStart))
                  : this.getTokenFromCode(r)
                : ((e += this.input.slice(t, this.state.pos)),
                  this.finishToken(R.jsxText, e));
            case 38:
              (e += this.input.slice(t, this.state.pos)),
                (e += this.jsxReadEntity()),
                (t = this.state.pos);
              break;
            default:
              c(r)
                ? ((e += this.input.slice(t, this.state.pos)),
                  (e += this.jsxReadNewLine(!0)),
                  (t = this.state.pos))
                : ++this.state.pos;
          }
        }
      }),
        (me.jsxReadNewLine = function (e) {
          var t = this.input.charCodeAt(this.state.pos),
            r = void 0;
          return (
            ++this.state.pos,
            13 === t && 10 === this.input.charCodeAt(this.state.pos)
              ? (++this.state.pos, (r = e ? "\n" : "\r\n"))
              : (r = String.fromCharCode(t)),
            ++this.state.curLine,
            (this.state.lineStart = this.state.pos),
            r
          );
        }),
        (me.jsxReadString = function (e) {
          for (var t = "", r = ++this.state.pos; ; ) {
            this.state.pos >= this.input.length &&
              this.raise(this.state.start, "Unterminated string constant");
            var n = this.input.charCodeAt(this.state.pos);
            if (n === e) break;
            38 === n
              ? ((t += this.input.slice(r, this.state.pos)),
                (t += this.jsxReadEntity()),
                (r = this.state.pos))
              : c(n)
              ? ((t += this.input.slice(r, this.state.pos)),
                (t += this.jsxReadNewLine(!1)),
                (r = this.state.pos))
              : ++this.state.pos;
          }
          return (
            (t += this.input.slice(r, this.state.pos++)),
            this.finishToken(R.string, t)
          );
        }),
        (me.jsxReadEntity = function () {
          for (
            var e = "",
              t = 0,
              r = void 0,
              n = this.input[this.state.pos],
              i = ++this.state.pos;
            this.state.pos < this.input.length && t++ < 10;

          ) {
            if (((n = this.input[this.state.pos++]), ";" === n)) {
              "#" === e[0]
                ? "x" === e[1]
                  ? ((e = e.substr(2)),
                    he.test(e) && (r = String.fromCharCode(parseInt(e, 16))))
                  : ((e = e.substr(1)),
                    de.test(e) && (r = String.fromCharCode(parseInt(e, 10))))
                : (r = pe[e]);
              break;
            }
            e += n;
          }
          return r ? r : ((this.state.pos = i), "&");
        }),
        (me.jsxReadWord = function () {
          var e = void 0,
            t = this.state.pos;
          do e = this.input.charCodeAt(++this.state.pos);
          while (s(e) || 45 === e);
          return this.finishToken(
            R.jsxName,
            this.input.slice(t, this.state.pos)
          );
        }),
        (me.jsxParseIdentifier = function () {
          var e = this.startNode();
          return (
            this.match(R.jsxName)
              ? (e.name = this.state.value)
              : this.state.type.keyword
              ? (e.name = this.state.type.keyword)
              : this.unexpected(),
            this.next(),
            this.finishNode(e, "JSXIdentifier")
          );
        }),
        (me.jsxParseNamespacedName = function () {
          var e = this.state.start,
            t = this.state.startLoc,
            r = this.jsxParseIdentifier();
          if (!this.eat(R.colon)) return r;
          var n = this.startNodeAt(e, t);
          return (
            (n.namespace = r),
            (n.name = this.jsxParseIdentifier()),
            this.finishNode(n, "JSXNamespacedName")
          );
        }),
        (me.jsxParseElementName = function () {
          for (
            var e = this.state.start,
              t = this.state.startLoc,
              r = this.jsxParseNamespacedName();
            this.eat(R.dot);

          ) {
            var n = this.startNodeAt(e, t);
            (n.object = r),
              (n.property = this.jsxParseIdentifier()),
              (r = this.finishNode(n, "JSXMemberExpression"));
          }
          return r;
        }),
        (me.jsxParseAttributeValue = function () {
          var e = void 0;
          switch (this.state.type) {
            case R.braceL:
              if (
                ((e = this.jsxParseExpressionContainer()),
                "JSXEmptyExpression" !== e.expression.type)
              )
                return e;
              this.raise(
                e.start,
                "JSX attributes must only be assigned a non-empty expression"
              );
            case R.jsxTagStart:
            case R.string:
              return (e = this.parseExprAtom()), (e.extra = null), e;
            default:
              this.raise(
                this.state.start,
                "JSX value should be either an expression or a quoted JSX text"
              );
          }
        }),
        (me.jsxParseEmptyExpression = function () {
          var e = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
          return this.finishNodeAt(
            e,
            "JSXEmptyExpression",
            this.start,
            this.startLoc
          );
        }),
        (me.jsxParseSpreadChild = function () {
          var e = this.startNode();
          return (
            this.expect(R.braceL),
            this.expect(R.ellipsis),
            (e.expression = this.parseExpression()),
            this.expect(R.braceR),
            this.finishNode(e, "JSXSpreadChild")
          );
        }),
        (me.jsxParseExpressionContainer = function () {
          var e = this.startNode();
          return (
            this.next(),
            this.match(R.braceR)
              ? (e.expression = this.jsxParseEmptyExpression())
              : (e.expression = this.parseExpression()),
            this.expect(R.braceR),
            this.finishNode(e, "JSXExpressionContainer")
          );
        }),
        (me.jsxParseAttribute = function () {
          var e = this.startNode();
          return this.eat(R.braceL)
            ? (this.expect(R.ellipsis),
              (e.argument = this.parseMaybeAssign()),
              this.expect(R.braceR),
              this.finishNode(e, "JSXSpreadAttribute"))
            : ((e.name = this.jsxParseNamespacedName()),
              (e.value = this.eat(R.eq) ? this.jsxParseAttributeValue() : null),
              this.finishNode(e, "JSXAttribute"));
        }),
        (me.jsxParseOpeningElementAt = function (e, t) {
          var r = this.startNodeAt(e, t);
          for (
            r.attributes = [], r.name = this.jsxParseElementName();
            !this.match(R.slash) && !this.match(R.jsxTagEnd);

          )
            r.attributes.push(this.jsxParseAttribute());
          return (
            (r.selfClosing = this.eat(R.slash)),
            this.expect(R.jsxTagEnd),
            this.finishNode(r, "JSXOpeningElement")
          );
        }),
        (me.jsxParseClosingElementAt = function (e, t) {
          var r = this.startNodeAt(e, t);
          return (
            (r.name = this.jsxParseElementName()),
            this.expect(R.jsxTagEnd),
            this.finishNode(r, "JSXClosingElement")
          );
        }),
        (me.jsxParseElementAt = function (e, t) {
          var r = this.startNodeAt(e, t),
            n = [],
            i = this.jsxParseOpeningElementAt(e, t),
            s = null;
          if (!i.selfClosing) {
            e: for (;;)
              switch (this.state.type) {
                case R.jsxTagStart:
                  if (
                    ((e = this.state.start),
                    (t = this.state.startLoc),
                    this.next(),
                    this.eat(R.slash))
                  ) {
                    s = this.jsxParseClosingElementAt(e, t);
                    break e;
                  }
                  n.push(this.jsxParseElementAt(e, t));
                  break;
                case R.jsxText:
                  n.push(this.parseExprAtom());
                  break;
                case R.braceL:
                  this.lookahead().type === R.ellipsis
                    ? n.push(this.jsxParseSpreadChild())
                    : n.push(this.jsxParseExpressionContainer());
                  break;
                default:
                  this.unexpected();
              }
            D(s.name) !== D(i.name) &&
              this.raise(
                s.start,
                "Expected corresponding JSX closing tag for <" + D(i.name) + ">"
              );
          }
          return (
            (r.openingElement = i),
            (r.closingElement = s),
            (r.children = n),
            this.match(R.relational) &&
              "<" === this.state.value &&
              this.raise(
                this.state.start,
                "Adjacent JSX elements must be wrapped in an enclosing tag"
              ),
            this.finishNode(r, "JSXElement")
          );
        }),
        (me.jsxParseElement = function () {
          var e = this.state.start,
            t = this.state.startLoc;
          return this.next(), this.jsxParseElementAt(e, t);
        });
      var ve = function (e) {
        e.extend("parseExprAtom", function (e) {
          return function (t) {
            if (this.match(R.jsxText)) {
              var r = this.parseLiteral(this.state.value, "JSXText");
              return (r.extra = null), r;
            }
            return this.match(R.jsxTagStart)
              ? this.jsxParseElement()
              : e.call(this, t);
          };
        }),
          e.extend("readToken", function (e) {
            return function (t) {
              var r = this.curContext();
              if (r === W.j_expr) return this.jsxReadToken();
              if (r === W.j_oTag || r === W.j_cTag) {
                if (i(t)) return this.jsxReadWord();
                if (62 === t)
                  return ++this.state.pos, this.finishToken(R.jsxTagEnd);
                if ((34 === t || 39 === t) && r === W.j_oTag)
                  return this.jsxReadString(t);
              }
              return 60 === t && this.state.exprAllowed
                ? (++this.state.pos, this.finishToken(R.jsxTagStart))
                : e.call(this, t);
            };
          }),
          e.extend("updateContext", function (e) {
            return function (t) {
              if (this.match(R.braceL)) {
                var r = this.curContext();
                r === W.j_oTag
                  ? this.state.context.push(W.braceExpression)
                  : r === W.j_expr
                  ? this.state.context.push(W.templateQuasi)
                  : e.call(this, t),
                  (this.state.exprAllowed = !0);
              } else {
                if (!this.match(R.slash) || t !== R.jsxTagStart)
                  return e.call(this, t);
                (this.state.context.length -= 2),
                  this.state.context.push(W.j_cTag),
                  (this.state.exprAllowed = !1);
              }
            };
          });
      };
      (X.flow = fe), (X.jsx = ve), (t.parse = C), (t.tokTypes = R);
    },
    function (e, t) {
      e.exports = function (e, t, r, n) {
        if (!(e instanceof t) || (void 0 !== n && n in e))
          throw TypeError(r + ": incorrect invocation!");
        return e;
      };
    },
    function (e, t, r) {
      var n = r(53),
        i = r(108),
        s = r(74),
        a = r(117),
        o = r(360);
      e.exports = function (e, t) {
        var r = 1 == e,
          u = 2 == e,
          l = 3 == e,
          c = 4 == e,
          f = 6 == e,
          p = 5 == e || f,
          h = t || o;
        return function (t, o, d) {
          for (
            var m,
              v,
              y = s(t),
              g = i(y),
              b = n(o, d, 3),
              E = a(g.length),
              x = 0,
              A = r ? h(t, E) : u ? h(t, 0) : void 0;
            E > x;
            x++
          )
            if ((p || x in g) && ((m = g[x]), (v = b(m, x, y)), e))
              if (r) A[x] = v;
              else if (v)
                switch (e) {
                  case 3:
                    return !0;
                  case 5:
                    return m;
                  case 6:
                    return x;
                  case 2:
                    A.push(m);
                }
              else if (c) return !1;
          return f ? -1 : l || c ? c : A;
        };
      };
    },
    function (e, t) {
      var r = {}.toString;
      e.exports = function (e) {
        return r.call(e).slice(8, -1);
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(13),
        i = r(20),
        s = r(55),
        a = r(36),
        o = r(28),
        u = r(112),
        l = r(69),
        c = r(103),
        f = r(21),
        p = r(73),
        h = r(22).f,
        d = r(104)(0),
        m = r(19);
      e.exports = function (e, t, r, v, y, g) {
        var b = n[e],
          E = b,
          x = y ? "set" : "add",
          A = E && E.prototype,
          D = {};
        return (
          m &&
          "function" == typeof E &&
          (g ||
            (A.forEach &&
              !a(function () {
                new E().entries().next();
              })))
            ? ((E = t(function (t, r) {
                c(t, E, e, "_c"),
                  (t._c = new b()),
                  void 0 != r && l(r, y, t[x], t);
              })),
              d(
                "add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(
                  ","
                ),
                function (e) {
                  var t = "add" == e || "set" == e;
                  e in A &&
                    (!g || "clear" != e) &&
                    o(E.prototype, e, function (r, n) {
                      if ((c(this, E, e), !t && g && !f(r)))
                        return "get" == e && void 0;
                      var i = this._c[e](0 === r ? 0 : r, n);
                      return t ? this : i;
                    });
                }
              ),
              "size" in A &&
                h(E.prototype, "size", {
                  get: function () {
                    return this._c.size;
                  },
                }))
            : ((E = v.getConstructor(t, e, y, x)),
              u(E.prototype, r),
              (s.NEED = !0)),
          p(E, e),
          (D[e] = E),
          i(i.G + i.W + i.F, D),
          g || v.setStrong(E, e, y),
          E
        );
      };
    },
    function (e, t) {
      e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
        ","
      );
    },
    function (e, t, r) {
      var n = r(105);
      e.exports = Object("z").propertyIsEnumerable(0)
        ? Object
        : function (e) {
            return "String" == n(e) ? e.split("") : Object(e);
          };
    },
    function (e, t, r) {
      "use strict";
      var n = r(110),
        i = r(20),
        s = r(113),
        a = r(28),
        o = r(27),
        u = r(54),
        l = r(367),
        c = r(73),
        f = r(371),
        p = r(8)("iterator"),
        h = !([].keys && "next" in [].keys()),
        d = "@@iterator",
        m = "keys",
        v = "values",
        y = function () {
          return this;
        };
      e.exports = function (e, t, r, g, b, E, x) {
        l(r, t, g);
        var A,
          D,
          C,
          S = function (e) {
            if (!h && e in k) return k[e];
            switch (e) {
              case m:
                return function () {
                  return new r(this, e);
                };
              case v:
                return function () {
                  return new r(this, e);
                };
            }
            return function () {
              return new r(this, e);
            };
          },
          _ = t + " Iterator",
          w = b == v,
          F = !1,
          k = e.prototype,
          P = k[p] || k[d] || (b && k[b]),
          T = P || S(b),
          O = b ? (w ? S("entries") : T) : void 0,
          B = "Array" == t ? k.entries || P : P;
        if (
          (B &&
            ((C = f(B.call(new e()))),
            C !== Object.prototype &&
              (c(C, _, !0), n || o(C, p) || a(C, p, y))),
          w &&
            P &&
            P.name !== v &&
            ((F = !0),
            (T = function () {
              return P.call(this);
            })),
          (n && !x) || (!h && !F && k[p]) || a(k, p, T),
          (u[t] = T),
          (u[_] = y),
          b)
        )
          if (
            ((A = { values: w ? T : S(v), keys: E ? T : S(m), entries: O }), x)
          )
            for (D in A) D in k || s(k, D, A[D]);
          else i(i.P + i.F * (h || F), t, A);
        return A;
      };
    },
    function (e, t) {
      e.exports = !0;
    },
    function (e, t) {
      t.f = Object.getOwnPropertySymbols;
    },
    function (e, t, r) {
      var n = r(28);
      e.exports = function (e, t, r) {
        for (var i in t) r && e[i] ? (e[i] = t[i]) : n(e, i, t[i]);
        return e;
      };
    },
    function (e, t, r) {
      e.exports = r(28);
    },
    function (e, t, r) {
      var n = r(115)("keys"),
        i = r(75);
      e.exports = function (e) {
        return n[e] || (n[e] = i(e));
      };
    },
    function (e, t, r) {
      var n = r(13),
        i = "__core-js_shared__",
        s = n[i] || (n[i] = {});
      e.exports = function (e) {
        return s[e] || (s[e] = {});
      };
    },
    function (e, t) {
      var r = Math.ceil,
        n = Math.floor;
      e.exports = function (e) {
        return isNaN((e = +e)) ? 0 : (e > 0 ? n : r)(e);
      };
    },
    function (e, t, r) {
      var n = r(116),
        i = Math.min;
      e.exports = function (e) {
        return e > 0 ? i(n(e), 9007199254740991) : 0;
      };
    },
    function (e, t, r) {
      var n = r(21);
      e.exports = function (e, t) {
        if (!n(e)) return e;
        var r, i;
        if (t && "function" == typeof (r = e.toString) && !n((i = r.call(e))))
          return i;
        if ("function" == typeof (r = e.valueOf) && !n((i = r.call(e))))
          return i;
        if (!t && "function" == typeof (r = e.toString) && !n((i = r.call(e))))
          return i;
        throw TypeError("Can't convert object to primitive value");
      };
    },
    function (e, t, r) {
      var n = r(13),
        i = r(4),
        s = r(110),
        a = r(120),
        o = r(22).f;
      e.exports = function (e) {
        var t = i.Symbol || (i.Symbol = s ? {} : n.Symbol || {});
        "_" == e.charAt(0) || e in t || o(t, e, { value: a.f(e) });
      };
    },
    function (e, t, r) {
      t.f = r(8);
    },
    function (e, t, r) {
      "use strict";
      var n = r(375)(!0);
      r(109)(
        String,
        "String",
        function (e) {
          (this._t = String(e)), (this._i = 0);
        },
        function () {
          var e,
            t = this._t,
            r = this._i;
          return r >= t.length
            ? { value: void 0, done: !0 }
            : ((e = n(t, r)), (this._i += e.length), { value: e, done: !1 });
        }
      );
    },
    function (e, t, r) {
      "use strict";
      var n = r(13),
        i = r(27),
        s = r(19),
        a = r(20),
        o = r(113),
        u = r(55).KEY,
        l = r(36),
        c = r(115),
        f = r(73),
        p = r(75),
        h = r(8),
        d = r(120),
        m = r(119),
        v = r(368),
        y = r(363),
        g = r(166),
        b = r(18),
        E = r(37),
        x = r(118),
        A = r(72),
        D = r(70),
        C = r(370),
        S = r(169),
        _ = r(22),
        w = r(41),
        F = S.f,
        k = _.f,
        P = C.f,
        T = n.Symbol,
        O = n.JSON,
        B = O && O.stringify,
        I = "prototype",
        N = h("_hidden"),
        M = h("toPrimitive"),
        R = {}.propertyIsEnumerable,
        L = c("symbol-registry"),
        j = c("symbols"),
        V = c("op-symbols"),
        U = Object[I],
        G = "function" == typeof T,
        W = n.QObject,
        Y = !W || !W[I] || !W[I].findChild,
        q =
          s &&
          l(function () {
            return (
              7 !=
              D(
                k({}, "a", {
                  get: function () {
                    return k(this, "a", { value: 7 }).a;
                  },
                })
              ).a
            );
          })
            ? function (e, t, r) {
                var n = F(U, t);
                n && delete U[t], k(e, t, r), n && e !== U && k(U, t, n);
              }
            : k,
        K = function (e) {
          var t = (j[e] = D(T[I]));
          return (t._k = e), t;
        },
        H =
          G && "symbol" == typeof T.iterator
            ? function (e) {
                return "symbol" == typeof e;
              }
            : function (e) {
                return e instanceof T;
              },
        J = function (e, t, r) {
          return (
            e === U && J(V, t, r),
            b(e),
            (t = x(t, !0)),
            b(r),
            i(j, t)
              ? (r.enumerable
                  ? (i(e, N) && e[N][t] && (e[N][t] = !1),
                    (r = D(r, { enumerable: A(0, !1) })))
                  : (i(e, N) || k(e, N, A(1, {})), (e[N][t] = !0)),
                q(e, t, r))
              : k(e, t, r)
          );
        },
        X = function (e, t) {
          b(e);
          for (var r, n = y((t = E(t))), i = 0, s = n.length; s > i; )
            J(e, (r = n[i++]), t[r]);
          return e;
        },
        $ = function (e, t) {
          return void 0 === t ? D(e) : X(D(e), t);
        },
        z = function (e) {
          var t = R.call(this, (e = x(e, !0)));
          return (
            !(this === U && i(j, e) && !i(V, e)) &&
            (!(t || !i(this, e) || !i(j, e) || (i(this, N) && this[N][e])) || t)
          );
        },
        Q = function (e, t) {
          if (((e = E(e)), (t = x(t, !0)), e !== U || !i(j, t) || i(V, t))) {
            var r = F(e, t);
            return (
              !r || !i(j, t) || (i(e, N) && e[N][t]) || (r.enumerable = !0), r
            );
          }
        },
        Z = function (e) {
          for (var t, r = P(E(e)), n = [], s = 0; r.length > s; )
            i(j, (t = r[s++])) || t == N || t == u || n.push(t);
          return n;
        },
        ee = function (e) {
          for (
            var t, r = e === U, n = P(r ? V : E(e)), s = [], a = 0;
            n.length > a;

          )
            !i(j, (t = n[a++])) || (r && !i(U, t)) || s.push(j[t]);
          return s;
        };
      G ||
        ((T = function () {
          if (this instanceof T)
            throw TypeError("Symbol is not a constructor!");
          var e = p(arguments.length > 0 ? arguments[0] : void 0),
            t = function (r) {
              this === U && t.call(V, r),
                i(this, N) && i(this[N], e) && (this[N][e] = !1),
                q(this, e, A(1, r));
            };
          return s && Y && q(U, e, { configurable: !0, set: t }), K(e);
        }),
        o(T[I], "toString", function () {
          return this._k;
        }),
        (S.f = Q),
        (_.f = J),
        (r(170).f = C.f = Z),
        (r(71).f = z),
        (r(111).f = ee),
        s && !r(110) && o(U, "propertyIsEnumerable", z, !0),
        (d.f = function (e) {
          return K(h(e));
        })),
        a(a.G + a.W + a.F * !G, { Symbol: T });
      for (
        var te = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(
            ","
          ),
          re = 0;
        te.length > re;

      )
        h(te[re++]);
      for (var te = w(h.store), re = 0; te.length > re; ) m(te[re++]);
      a(a.S + a.F * !G, "Symbol", {
        for: function (e) {
          return i(L, (e += "")) ? L[e] : (L[e] = T(e));
        },
        keyFor: function (e) {
          if (H(e)) return v(L, e);
          throw TypeError(e + " is not a symbol!");
        },
        useSetter: function () {
          Y = !0;
        },
        useSimple: function () {
          Y = !1;
        },
      }),
        a(a.S + a.F * !G, "Object", {
          create: $,
          defineProperty: J,
          defineProperties: X,
          getOwnPropertyDescriptor: Q,
          getOwnPropertyNames: Z,
          getOwnPropertySymbols: ee,
        }),
        O &&
          a(
            a.S +
              a.F *
                (!G ||
                  l(function () {
                    var e = T();
                    return (
                      "[null]" != B([e]) ||
                      "{}" != B({ a: e }) ||
                      "{}" != B(Object(e))
                    );
                  })),
            "JSON",
            {
              stringify: function (e) {
                if (void 0 !== e && !H(e)) {
                  for (var t, r, n = [e], i = 1; arguments.length > i; )
                    n.push(arguments[i++]);
                  return (
                    (t = n[1]),
                    "function" == typeof t && (r = t),
                    (!r && g(t)) ||
                      (t = function (e, t) {
                        if ((r && (t = r.call(this, e, t)), !H(t))) return t;
                      }),
                    (n[1] = t),
                    B.apply(O, n)
                  );
                }
              },
            }
          ),
        T[I][M] || r(28)(T[I], M, T[I].valueOf),
        f(T, "Symbol"),
        f(Math, "Math", !0),
        f(n.JSON, "JSON", !0);
    },
    function (e, t, r) {
      !(function () {
        "use strict";
        (t.ast = r(393)), (t.code = r(174)), (t.keyword = r(394));
      })();
    },
    function (e, t, r) {
      var n = r(38),
        i = r(15),
        s = n(i, "Map");
      e.exports = s;
    },
    function (e, t, r) {
      function n(e) {
        var t = -1,
          r = null == e ? 0 : e.length;
        for (this.clear(); ++t < r; ) {
          var n = e[t];
          this.set(n[0], n[1]);
        }
      }
      var i = r(485),
        s = r(486),
        a = r(487),
        o = r(488),
        u = r(489);
      (n.prototype.clear = i),
        (n.prototype.delete = s),
        (n.prototype.get = a),
        (n.prototype.has = o),
        (n.prototype.set = u),
        (e.exports = n);
    },
    function (e, t) {
      function r(e, t) {
        for (var r = -1, n = t.length, i = e.length; ++r < n; ) e[i + r] = t[r];
        return e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = e[t];
        (o.call(e, t) && s(n, r) && (void 0 !== r || t in e)) || i(e, t, r);
      }
      var i = r(128),
        s = r(43),
        a = Object.prototype,
        o = a.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        "__proto__" == t && i
          ? i(e, t, {
              configurable: !0,
              enumerable: !0,
              value: r,
              writable: !0,
            })
          : (e[t] = r);
      }
      var i = r(195);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, w, F, k) {
        var P,
          B = t & D,
          I = t & C,
          M = t & S;
        if ((r && (P = F ? r(e, w, F, k) : r(e)), void 0 !== P)) return P;
        if (!x(e)) return e;
        var R = b(e);
        if (R) {
          if (((P = v(e)), !B)) return c(e, P);
        } else {
          var L = m(e),
            j = L == T || L == O;
          if (E(e)) return l(e, B);
          if (L == N || L == _ || (j && !F)) {
            if (((P = I || j ? {} : g(e)), !B))
              return I ? p(e, u(P, e)) : f(e, o(P, e));
          } else {
            if (!Q[L]) return F ? e : {};
            P = y(e, L, n, B);
          }
        }
        k || (k = new i());
        var V = k.get(e);
        if (V) return V;
        k.set(e, P);
        var U = M ? (I ? d : h) : I ? keysIn : A,
          G = R ? void 0 : U(e);
        return (
          s(G || e, function (i, s) {
            G && ((s = i), (i = e[s])), a(P, s, n(i, t, r, s, e, k));
          }),
          P
        );
      }
      var i = r(78),
        s = r(179),
        a = r(127),
        o = r(415),
        u = r(416),
        l = r(191),
        c = r(193),
        f = r(456),
        p = r(457),
        h = r(464),
        d = r(465),
        m = r(199),
        v = r(475),
        y = r(476),
        g = r(201),
        b = r(5),
        E = r(91),
        x = r(9),
        A = r(24),
        D = 1,
        C = 2,
        S = 4,
        _ = "[object Arguments]",
        w = "[object Array]",
        F = "[object Boolean]",
        k = "[object Date]",
        P = "[object Error]",
        T = "[object Function]",
        O = "[object GeneratorFunction]",
        B = "[object Map]",
        I = "[object Number]",
        N = "[object Object]",
        M = "[object RegExp]",
        R = "[object Set]",
        L = "[object String]",
        j = "[object Symbol]",
        V = "[object WeakMap]",
        U = "[object ArrayBuffer]",
        G = "[object DataView]",
        W = "[object Float32Array]",
        Y = "[object Float64Array]",
        q = "[object Int8Array]",
        K = "[object Int16Array]",
        H = "[object Int32Array]",
        J = "[object Uint8Array]",
        X = "[object Uint8ClampedArray]",
        $ = "[object Uint16Array]",
        z = "[object Uint32Array]",
        Q = {};
      (Q[_] = Q[w] = Q[U] = Q[G] = Q[F] = Q[k] = Q[W] = Q[Y] = Q[q] = Q[K] = Q[
        H
      ] = Q[B] = Q[I] = Q[N] = Q[M] = Q[R] = Q[L] = Q[j] = Q[J] = Q[X] = Q[
        $
      ] = Q[z] = !0),
        (Q[P] = Q[T] = Q[V] = !1),
        (e.exports = n);
    },
    function (e, t) {
      function r(e, t, r, n) {
        for (var i = e.length, s = r + (n ? 1 : -1); n ? s-- : ++s < i; )
          if (t(e[s], s, e)) return s;
        return -1;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        return t === t ? a(e, t, r) : i(e, s, r);
      }
      var i = r(130),
        s = r(426),
        a = r(504);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return a(s(e, t, i), e + "");
      }
      var i = r(58),
        s = r(494),
        a = r(497);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        if ("string" == typeof e) return e;
        if (a(e)) return s(e, n) + "";
        if (o(e)) return c ? c.call(e) : "";
        var t = e + "";
        return "0" == t && 1 / e == -u ? "-0" : t;
      }
      var i = r(42),
        s = r(79),
        a = r(5),
        o = r(59),
        u = 1 / 0,
        l = i ? i.prototype : void 0,
        c = l ? l.toString : void 0;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return function (t) {
          return e(t);
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        var t = new e.constructor(e.byteLength);
        return new i(t).set(new i(e)), t;
      }
      var i = r(177);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(141),
        i = n(Object.getPrototypeOf, Object);
      e.exports = i;
    },
    function (e, t, r) {
      var n = r(141),
        i = r(215),
        s = Object.getOwnPropertySymbols,
        a = s ? n(s, Object) : i;
      e.exports = a;
    },
    function (e, t) {
      function r(e, t) {
        return (
          (t = null == t ? n : t),
          !!t &&
            ("number" == typeof e || i.test(e)) &&
            e > -1 &&
            e % 1 == 0 &&
            e < t
        );
      }
      var n = 9007199254740991,
        i = /^(?:0|[1-9]\d*)$/;
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        if (!o(r)) return !1;
        var n = typeof t;
        return (
          !!("number" == n
            ? s(r) && a(t, r.length)
            : "string" == n && t in r) && i(r[t], e)
        );
      }
      var i = r(43),
        s = r(23),
        a = r(138),
        o = r(9);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        if (i(e)) return !1;
        var r = typeof e;
        return (
          !(
            "number" != r &&
            "symbol" != r &&
            "boolean" != r &&
            null != e &&
            !s(e)
          ) ||
          o.test(e) ||
          !a.test(e) ||
          (null != t && e in Object(t))
        );
      }
      var i = r(5),
        s = r(59),
        a = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        o = /^\w*$/;
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        return function (r) {
          return e(t(r));
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(127),
        i = r(29),
        s = r(81),
        a = r(23),
        o = r(83),
        u = r(24),
        l = Object.prototype,
        c = l.hasOwnProperty,
        f = s(function (e, t) {
          if (o(t) || a(t)) return void i(t, u(t), e);
          for (var r in t) c.call(t, r) && n(e, r, t[r]);
        });
      e.exports = f;
    },
    function (e, t) {
      function r(e) {
        return "number" == typeof e && e > -1 && e % 1 == 0 && e <= n;
      }
      var n = 9007199254740991;
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return "string" == typeof e || (!s(e) && a(e) && i(e) == o);
      }
      var i = r(14),
        s = r(5),
        a = r(10),
        o = "[object String]";
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(429),
        i = r(134),
        s = r(205),
        a = s && s.isTypedArray,
        o = a ? i(a) : n;
      e.exports = o;
    },
    function (e, t) {
      "use strict";
      e.exports = function () {
        return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        return {
          keyword: e.cyan,
          capitalized: e.yellow,
          jsx_tag: e.yellow,
          punctuator: e.yellow,
          number: e.magenta,
          string: e.green,
          regex: e.magenta,
          comment: e.grey,
          invalid: e.white.bgRed.bold,
          gutter: e.grey,
          marker: e.red.bold,
        };
      }
      function s(e) {
        var t = e.slice(-2),
          r = t[0],
          n = t[1],
          i = u.default.matchToToken(e);
        if ("name" === i.type) {
          if (c.default.keyword.isReservedWordES6(i.value)) return "keyword";
          if (
            d.test(i.value) &&
            ("<" === n[r - 1] || "</" == n.substr(r - 2, 2))
          )
            return "jsx_tag";
          if (i.value[0] !== i.value[0].toLowerCase()) return "capitalized";
        }
        return "punctuator" === i.type && m.test(i.value) ? "bracket" : i.type;
      }
      function a(e, t) {
        return t.replace(u.default, function () {
          for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
            r[n] = arguments[n];
          var i = s(r),
            a = e[i];
          return a
            ? r[0]
                .split(h)
                .map(function (e) {
                  return a(e);
                })
                .join("\n")
            : r[0];
        });
      }
      (t.__esModule = !0),
        (t.default = function (e, t, r) {
          var n =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
          r = Math.max(r, 0);
          var s = (n.highlightCode && p.default.supportsColor) || n.forceColor,
            o = p.default;
          n.forceColor && (o = new p.default.constructor({ enabled: !0 }));
          var u = function (e, t) {
              return s ? e(t) : t;
            },
            l = i(o);
          s && (e = a(l, e));
          var c = n.linesAbove || 2,
            f = n.linesBelow || 3,
            d = e.split(h),
            m = Math.max(t - (c + 1), 0),
            v = Math.min(d.length, t + f);
          t || r || ((m = 0), (v = d.length));
          var y = String(v).length,
            g = d
              .slice(m, v)
              .map(function (e, n) {
                var i = m + 1 + n,
                  s = (" " + i).slice(-y),
                  a = " " + s + " | ";
                if (i === t) {
                  var o = "";
                  if (r) {
                    var c = e.slice(0, r - 1).replace(/[^\t]/g, " ");
                    o = [
                      "\n ",
                      u(l.gutter, a.replace(/\d/g, " ")),
                      c,
                      u(l.marker, "^"),
                    ].join("");
                  }
                  return [u(l.marker, ">"), u(l.gutter, a), e, o].join("");
                }
                return " " + u(l.gutter, a) + e;
              })
              .join("\n");
          return s ? o.reset(g) : g;
        });
      var o = r(399),
        u = n(o),
        l = r(123),
        c = n(l),
        f = r(337),
        p = n(f),
        h = /\r\n|[\n\r\u2028\u2029]/,
        d = /^[a-z][\w-]*$/i,
        m = /^[()\[\]{}]$/;
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        throw new Error(
          "The (" + e + ") Babel 5 plugin is being run with Babel 6."
        );
      }
      function a(e, t, r) {
        (0, d.default)(t) && ((r = t), (t = {})),
          (t.filename = e),
          v.default.readFile(e, function (e, n) {
            var i = void 0;
            if (!e)
              try {
                i = P(n, t);
              } catch (t) {
                e = t;
              }
            e ? r(e) : r(null, i);
          });
      }
      function o(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        return (t.filename = e), P(v.default.readFileSync(e, "utf8"), t);
      }
      (t.__esModule = !0),
        (t.transformFromAst = t.transform = t.analyse = t.Pipeline = t.OptionManager = t.traverse = t.types = t.messages = t.util = t.version = t.template = t.buildExternalHelpers = t.options = t.File = void 0);
      var u = r(47);
      Object.defineProperty(t, "File", {
        enumerable: !0,
        get: function () {
          return i(u).default;
        },
      });
      var l = r(30);
      Object.defineProperty(t, "options", {
        enumerable: !0,
        get: function () {
          return i(l).default;
        },
      });
      var c = r(229);
      Object.defineProperty(t, "buildExternalHelpers", {
        enumerable: !0,
        get: function () {
          return i(c).default;
        },
      });
      var f = r(12);
      Object.defineProperty(t, "template", {
        enumerable: !0,
        get: function () {
          return i(f).default;
        },
      });
      var p = r(401);
      Object.defineProperty(t, "version", {
        enumerable: !0,
        get: function () {
          return p.version;
        },
      }),
        (t.Plugin = s),
        (t.transformFile = a),
        (t.transformFileSync = o);
      var h = r(92),
        d = i(h),
        m = r(46),
        v = i(m),
        y = r(97),
        g = n(y),
        b = r(16),
        E = n(b),
        x = r(1),
        A = n(x),
        D = r(7),
        C = i(D),
        S = r(31),
        _ = i(S),
        w = r(232),
        F = i(w);
      (t.util = g),
        (t.messages = E),
        (t.types = A),
        (t.traverse = C.default),
        (t.OptionManager = _.default),
        (t.Pipeline = F.default);
      var k = new F.default(),
        P =
          ((t.analyse = k.analyse.bind(k)),
          (t.transform = k.transform.bind(k)));
      t.transformFromAst = k.transformFromAst.bind(k);
    },
    function (e, t, r) {
      function n(e) {
        return r(i(e));
      }
      function i(e) {
        return (
          s[e] ||
          (function () {
            throw new Error("Cannot find module '" + e + "'.");
          })()
        );
      }
      var s = {
        "./index": 47,
        "./index.js": 47,
        "./logger": 95,
        "./logger.js": 95,
        "./metadata": 96,
        "./metadata.js": 96,
        "./options/build-config-chain": 48,
        "./options/build-config-chain.js": 48,
        "./options/config": 30,
        "./options/config.js": 30,
        "./options/index": 49,
        "./options/index.js": 49,
        "./options/option-manager": 31,
        "./options/option-manager.js": 31,
        "./options/parsers": 50,
        "./options/parsers.js": 50,
        "./options/removed": 51,
        "./options/removed.js": 51,
      };
      (n.keys = function () {
        return Object.keys(s);
      }),
        (n.resolve = i),
        (e.exports = n),
        (n.id = 149);
    },
    function (e, t, r) {
      function n(e) {
        return r(i(e));
      }
      function i(e) {
        return (
          s[e] ||
          (function () {
            throw new Error("Cannot find module '" + e + "'.");
          })()
        );
      }
      var s = {
        "./build-config-chain": 48,
        "./build-config-chain.js": 48,
        "./config": 30,
        "./config.js": 30,
        "./index": 49,
        "./index.js": 49,
        "./option-manager": 31,
        "./option-manager.js": 31,
        "./parsers": 50,
        "./parsers.js": 50,
        "./removed": 51,
        "./removed.js": 51,
      };
      (n.keys = function () {
        return Object.keys(s);
      }),
        (n.resolve = i),
        (e.exports = n),
        (n.id = 150);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t, r) {
        var n = "  ";
        if (e && "string" == typeof e) {
          var i = (0, d.default)(e).indent;
          i && " " !== i && (n = i);
        }
        var s = {
          auxiliaryCommentBefore: t.auxiliaryCommentBefore,
          auxiliaryCommentAfter: t.auxiliaryCommentAfter,
          shouldPrintComment: t.shouldPrintComment,
          retainLines: t.retainLines,
          retainFunctionParens: t.retainFunctionParens,
          comments: null == t.comments || t.comments,
          compact: t.compact,
          minified: t.minified,
          concise: t.concise,
          quotes: t.quotes || a(e, r),
          jsonCompatibleStrings: t.jsonCompatibleStrings,
          indent: { adjustMultilineComment: !0, style: n, base: 0 },
          flowCommaSeparator: t.flowCommaSeparator,
        };
        return (
          s.minified
            ? ((s.compact = !0),
              (s.shouldPrintComment =
                s.shouldPrintComment ||
                function () {
                  return s.comments;
                }))
            : (s.shouldPrintComment =
                s.shouldPrintComment ||
                function (e) {
                  return (
                    s.comments ||
                    e.indexOf("@license") >= 0 ||
                    e.indexOf("@preserve") >= 0
                  );
                }),
          "auto" === s.compact && ((s.compact = e.length > 5e5), s.compact),
          s.compact && (s.indent.adjustMultilineComment = !1),
          s
        );
      }
      function a(e, t) {
        var r = "double";
        if (!e) return r;
        for (
          var n = { single: 0, double: 0 }, i = 0, s = 0;
          s < t.length;
          s++
        ) {
          var a = t[s];
          if ("string" === a.type.label) {
            var o = e.slice(a.start, a.end);
            if (("'" === o[0] ? n.single++ : n.double++, i++, i >= 3)) break;
          }
        }
        return n.single > n.double ? "single" : "double";
      }
      (t.__esModule = !0), (t.CodeGenerator = void 0);
      var o = r(3),
        u = i(o),
        l = r(40),
        c = i(l),
        f = r(39),
        p = i(f);
      t.default = function (e, t, r) {
        var n = new E(e, t, r);
        return n.generate();
      };
      var h = r(249),
        d = i(h),
        m = r(247),
        v = i(m),
        y = r(16),
        g = (n(y), r(246)),
        b = i(g),
        E = (function (e) {
          function t(r, n, i) {
            (0, u.default)(this, t), (n = n || {});
            var a = r.tokens || [],
              o = s(i, n, a),
              l = n.sourceMaps ? new v.default(n, i) : null,
              f = (0, c.default)(this, e.call(this, o, l, a));
            return (f.ast = r), f;
          }
          return (
            (0, p.default)(t, e),
            (t.prototype.generate = function () {
              return e.prototype.generate.call(this, this.ast);
            }),
            t
          );
        })(b.default);
      t.CodeGenerator = (function () {
        function e(t, r, n) {
          (0, u.default)(this, e), (this._generator = new E(t, r, n));
        }
        return (
          (e.prototype.generate = function () {
            return this._generator.generate();
          }),
          e
        );
      })();
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        function t(e, t) {
          var n = r[e];
          r[e] = n
            ? function (e, r, i) {
                var s = n(e, r, i);
                return null == s ? t(e, r, i) : s;
              }
            : t;
        }
        for (
          var r = {},
            n = (0, m.default)(e),
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, h.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a,
            u = x.FLIPPED_ALIAS_KEYS[o];
          if (u)
            for (
              var l = u,
                c = Array.isArray(l),
                f = 0,
                l = c ? l : (0, h.default)(l);
              ;

            ) {
              var p;
              if (c) {
                if (f >= l.length) break;
                p = l[f++];
              } else {
                if (((f = l.next()), f.done)) break;
                p = f.value;
              }
              var d = p;
              t(d, e[o]);
            }
          else t(o, e[o]);
        }
        return r;
      }
      function a(e, t, r, n) {
        var i = e[t.type];
        return i ? i(t, r, n) : null;
      }
      function o(e) {
        return (
          !!x.isCallExpression(e) ||
          (!!x.isMemberExpression(e) &&
            (o(e.object) || (!e.computed && o(e.property))))
        );
      }
      function u(e, t, r) {
        if (!e) return 0;
        x.isExpressionStatement(e) && (e = e.expression);
        var n = a(D, e, t);
        if (!n) {
          var i = a(C, e, t);
          if (i) for (var s = 0; s < i.length && !(n = u(i[s], e, r)); s++);
        }
        return (n && n[r]) || 0;
      }
      function l(e, t) {
        return u(e, t, "before");
      }
      function c(e, t) {
        return u(e, t, "after");
      }
      function f(e, t, r) {
        return (
          !!t &&
          (!(!x.isNewExpression(t) || t.callee !== e || !o(e)) || a(A, e, t, r))
        );
      }
      t.__esModule = !0;
      var p = r(2),
        h = i(p),
        d = r(17),
        m = i(d);
      (t.needsWhitespace = u),
        (t.needsWhitespaceBefore = l),
        (t.needsWhitespaceAfter = c),
        (t.needsParens = f);
      var v = r(245),
        y = i(v),
        g = r(244),
        b = n(g),
        E = r(1),
        x = n(E),
        A = s(b),
        D = s(y.default.nodes),
        C = s(y.default.list);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          for (var t = e.params, r = 0; r < t.length; r++) {
            var n = t[r];
            if (s.isAssignmentPattern(n) || s.isRestElement(n)) return r;
          }
          return t.length;
        });
      var i = r(1),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0),
        (t.default = function (e, t, r) {
          return 1 === r.length &&
            s.isSpreadElement(r[0]) &&
            s.isIdentifier(r[0].argument, { name: "arguments" })
            ? s.callExpression(s.memberExpression(e, s.identifier("apply")), [
                t,
                r[0].argument,
              ])
            : s.callExpression(
                s.memberExpression(e, s.identifier("call")),
                [t].concat(r)
              );
        });
      var i = r(1),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        var t = u.default[e];
        if (!t) throw new ReferenceError("Unknown helper " + e);
        return t().expression;
      }
      (t.__esModule = !0), (t.list = void 0);
      var s = r(17),
        a = n(s);
      t.get = i;
      var o = r(256),
        u = n(o);
      t.list = (0, a.default)(u.default)
        .map(function (e) {
          return "_" === e[0] ? e.slice(1) : e;
        })
        .filter(function (e) {
          return "__esModule" !== e;
        });
      t.default = i;
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("classProperties");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s),
        o = r(3),
        u = i(o),
        l = r(7),
        c = r(255),
        f = i(c),
        p = r(154),
        h = i(p),
        d = r(253),
        m = n(d),
        v = r(12),
        y = i(v),
        g = r(1),
        b = n(g),
        E = (0, y.default)(
          "\n  (function () {\n    super(...arguments);\n  })\n"
        ),
        x = {
          "FunctionExpression|FunctionDeclaration": function (e) {
            e.is("shadow") || e.skip();
          },
          Method: function (e) {
            e.skip();
          },
        },
        A = l.visitors.merge([
          x,
          {
            Super: function (e) {
              if (
                this.isDerived &&
                !this.hasBareSuper &&
                !e.parentPath.isCallExpression({ callee: e.node })
              )
                throw e.buildCodeFrameError(
                  "'super.*' is not allowed before super()"
                );
            },
            CallExpression: {
              exit: function (e) {
                if (
                  e.get("callee").isSuper() &&
                  ((this.hasBareSuper = !0), !this.isDerived)
                )
                  throw e.buildCodeFrameError(
                    "super() is only allowed in a derived constructor"
                  );
              },
            },
            ThisExpression: function (e) {
              if (this.isDerived && !this.hasBareSuper && !e.inShadow("this"))
                throw e.buildCodeFrameError(
                  "'this' is not allowed before super()"
                );
            },
          },
        ]),
        D = l.visitors.merge([
          x,
          {
            ThisExpression: function (e) {
              this.superThises.push(e);
            },
          },
        ]),
        C = (function () {
          function e(t, r) {
            (0, u.default)(this, e),
              (this.parent = t.parent),
              (this.scope = t.scope),
              (this.node = t.node),
              (this.path = t),
              (this.file = r),
              this.clearDescriptors(),
              (this.instancePropBody = []),
              (this.instancePropRefs = {}),
              (this.staticPropBody = []),
              (this.body = []),
              (this.bareSuperAfter = []),
              (this.bareSupers = []),
              (this.pushedConstructor = !1),
              (this.pushedInherits = !1),
              (this.isLoose = !1),
              (this.superThises = []),
              (this.classId = this.node.id),
              (this.classRef = this.node.id
                ? b.identifier(this.node.id.name)
                : this.scope.generateUidIdentifier("class")),
              (this.superName =
                this.node.superClass || b.identifier("Function")),
              (this.isDerived = !!this.node.superClass);
          }
          return (
            (e.prototype.run = function () {
              var e = this,
                t = this.superName,
                r = this.file,
                n = this.body,
                i = (this.constructorBody = b.blockStatement([]));
              this.constructor = this.buildConstructor();
              var s = [],
                a = [];
              if (
                (this.isDerived &&
                  (a.push(t),
                  (t = this.scope.generateUidIdentifierBasedOnNode(t)),
                  s.push(t),
                  (this.superName = t)),
                this.buildBody(),
                i.body.unshift(
                  b.expressionStatement(
                    b.callExpression(r.addHelper("classCallCheck"), [
                      b.thisExpression(),
                      this.classRef,
                    ])
                  )
                ),
                (n = n.concat(
                  this.staticPropBody.map(function (t) {
                    return t(e.classRef);
                  })
                )),
                this.classId && 1 === n.length)
              )
                return b.toExpression(n[0]);
              n.push(b.returnStatement(this.classRef));
              var o = b.functionExpression(null, s, b.blockStatement(n));
              return (o.shadow = !0), b.callExpression(o, a);
            }),
            (e.prototype.buildConstructor = function () {
              var e = b.functionDeclaration(
                this.classRef,
                [],
                this.constructorBody
              );
              return b.inherits(e, this.node), e;
            }),
            (e.prototype.pushToMap = function (e, t) {
              var r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : "value",
                n = arguments[3],
                i = void 0;
              e.static
                ? ((this.hasStaticDescriptors = !0),
                  (i = this.staticMutatorMap))
                : ((this.hasInstanceDescriptors = !0),
                  (i = this.instanceMutatorMap));
              var s = m.push(i, e, r, this.file, n);
              return t && (s.enumerable = b.booleanLiteral(!0)), s;
            }),
            (e.prototype.constructorMeMaybe = function () {
              for (
                var e = !1,
                  t = this.path.get("body.body"),
                  r = t,
                  n = Array.isArray(r),
                  i = 0,
                  r = n ? r : (0, a.default)(r);
                ;

              ) {
                var s;
                if (n) {
                  if (i >= r.length) break;
                  s = r[i++];
                } else {
                  if (((i = r.next()), i.done)) break;
                  s = i.value;
                }
                var o = s;
                if ((e = o.equals("kind", "constructor"))) break;
              }
              if (!e) {
                var u = void 0,
                  l = void 0;
                if (this.isDerived) {
                  var c = E().expression;
                  (u = c.params), (l = c.body);
                } else (u = []), (l = b.blockStatement([]));
                this.path
                  .get("body")
                  .unshiftContainer(
                    "body",
                    b.classMethod(
                      "constructor",
                      b.identifier("constructor"),
                      u,
                      l
                    )
                  );
              }
            }),
            (e.prototype.buildBody = function () {
              if (
                (this.constructorMeMaybe(),
                this.pushBody(),
                this.verifyConstructor(),
                this.userConstructor)
              ) {
                var e = this.constructorBody;
                (e.body = e.body.concat(this.userConstructor.body.body)),
                  b.inherits(this.constructor, this.userConstructor),
                  b.inherits(e, this.userConstructor.body);
              }
              this.pushDescriptors();
            }),
            (e.prototype.pushBody = function () {
              for (
                var e = this.path.get("body.body"),
                  t = e,
                  r = Array.isArray(t),
                  n = 0,
                  t = r ? t : (0, a.default)(t);
                ;

              ) {
                var i;
                if (r) {
                  if (n >= t.length) break;
                  i = t[n++];
                } else {
                  if (((n = t.next()), n.done)) break;
                  i = n.value;
                }
                var s = i,
                  o = s.node;
                if (s.isClassProperty())
                  throw s.buildCodeFrameError(
                    "Missing class properties transform."
                  );
                if (o.decorators)
                  throw s.buildCodeFrameError(
                    "Method has decorators, put the decorator plugin before the classes one."
                  );
                if (b.isClassMethod(o)) {
                  var u = "constructor" === o.kind;
                  if (
                    u &&
                    (s.traverse(A, this), !this.hasBareSuper && this.isDerived)
                  )
                    throw s.buildCodeFrameError(
                      "missing super() call in constructor"
                    );
                  var l = new f.default(
                    {
                      forceSuperMemoisation: u,
                      methodPath: s,
                      methodNode: o,
                      objectRef: this.classRef,
                      superRef: this.superName,
                      isStatic: o.static,
                      isLoose: this.isLoose,
                      scope: this.scope,
                      file: this.file,
                    },
                    !0
                  );
                  l.replace(),
                    u ? this.pushConstructor(l, o, s) : this.pushMethod(o, s);
                }
              }
            }),
            (e.prototype.clearDescriptors = function () {
              (this.hasInstanceDescriptors = !1),
                (this.hasStaticDescriptors = !1),
                (this.instanceMutatorMap = {}),
                (this.staticMutatorMap = {});
            }),
            (e.prototype.pushDescriptors = function () {
              this.pushInherits();
              var e = this.body,
                t = void 0,
                r = void 0;
              if (
                (this.hasInstanceDescriptors &&
                  (t = m.toClassObject(this.instanceMutatorMap)),
                this.hasStaticDescriptors &&
                  (r = m.toClassObject(this.staticMutatorMap)),
                t || r)
              ) {
                t && (t = m.toComputedObjectFromClass(t)),
                  r && (r = m.toComputedObjectFromClass(r));
                var n = b.nullLiteral(),
                  i = [this.classRef, n, n, n, n];
                t && (i[1] = t),
                  r && (i[2] = r),
                  this.instanceInitializersId &&
                    ((i[3] = this.instanceInitializersId),
                    e.unshift(
                      this.buildObjectAssignment(this.instanceInitializersId)
                    )),
                  this.staticInitializersId &&
                    ((i[4] = this.staticInitializersId),
                    e.unshift(
                      this.buildObjectAssignment(this.staticInitializersId)
                    ));
                for (var s = 0, a = 0; a < i.length; a++) i[a] !== n && (s = a);
                (i = i.slice(0, s + 1)),
                  e.push(
                    b.expressionStatement(
                      b.callExpression(this.file.addHelper("createClass"), i)
                    )
                  );
              }
              this.clearDescriptors();
            }),
            (e.prototype.buildObjectAssignment = function (e) {
              return b.variableDeclaration("var", [
                b.variableDeclarator(e, b.objectExpression([])),
              ]);
            }),
            (e.prototype.wrapSuperCall = function (e, t, r, n) {
              var i = e.node;
              this.isLoose
                ? (i.arguments.unshift(b.thisExpression()),
                  2 === i.arguments.length &&
                  b.isSpreadElement(i.arguments[1]) &&
                  b.isIdentifier(i.arguments[1].argument, { name: "arguments" })
                    ? ((i.arguments[1] = i.arguments[1].argument),
                      (i.callee = b.memberExpression(t, b.identifier("apply"))))
                    : (i.callee = b.memberExpression(t, b.identifier("call"))))
                : (i = (0, h.default)(
                    b.logicalExpression(
                      "||",
                      b.memberExpression(
                        this.classRef,
                        b.identifier("__proto__")
                      ),
                      b.callExpression(
                        b.memberExpression(
                          b.identifier("Object"),
                          b.identifier("getPrototypeOf")
                        ),
                        [this.classRef]
                      )
                    ),
                    b.thisExpression(),
                    i.arguments
                  ));
              var s = b.callExpression(
                  this.file.addHelper("possibleConstructorReturn"),
                  [b.thisExpression(), i]
                ),
                a = this.bareSuperAfter.map(function (e) {
                  return e(r);
                });
              e.parentPath.isExpressionStatement() &&
              e.parentPath.container === n.node.body &&
              n.node.body.length - 1 === e.parentPath.key
                ? ((this.superThises.length || a.length) &&
                    (e.scope.push({ id: r }),
                    (s = b.assignmentExpression("=", r, s))),
                  a.length && (s = b.toSequenceExpression([s].concat(a, [r]))),
                  e.parentPath.replaceWith(b.returnStatement(s)))
                : e.replaceWithMultiple(
                    [
                      b.variableDeclaration("var", [
                        b.variableDeclarator(r, s),
                      ]),
                    ].concat(a, [b.expressionStatement(r)])
                  );
            }),
            (e.prototype.verifyConstructor = function () {
              var e = this;
              if (this.isDerived) {
                var t = this.userConstructorPath,
                  r = t.get("body");
                t.traverse(D, this);
                for (
                  var n = !!this.bareSupers.length,
                    i = this.superName || b.identifier("Function"),
                    s = t.scope.generateUidIdentifier("this"),
                    o = this.bareSupers,
                    u = Array.isArray(o),
                    l = 0,
                    o = u ? o : (0, a.default)(o);
                  ;

                ) {
                  var c;
                  if (u) {
                    if (l >= o.length) break;
                    c = o[l++];
                  } else {
                    if (((l = o.next()), l.done)) break;
                    c = l.value;
                  }
                  var f = c;
                  this.wrapSuperCall(f, i, s, r),
                    n &&
                      f.find(function (e) {
                        return (
                          e === t ||
                          (e.isLoop() || e.isConditional()
                            ? ((n = !1), !0)
                            : void 0)
                        );
                      });
                }
                for (
                  var p = this.superThises,
                    h = Array.isArray(p),
                    d = 0,
                    p = h ? p : (0, a.default)(p);
                  ;

                ) {
                  var m;
                  if (h) {
                    if (d >= p.length) break;
                    m = p[d++];
                  } else {
                    if (((d = p.next()), d.done)) break;
                    m = d.value;
                  }
                  var v = m;
                  v.replaceWith(s);
                }
                var y = function (t) {
                    return b.callExpression(
                      e.file.addHelper("possibleConstructorReturn"),
                      [s].concat(t || [])
                    );
                  },
                  g = r.get("body");
                g.length &&
                  !g.pop().isReturnStatement() &&
                  r.pushContainer("body", b.returnStatement(n ? s : y()));
                for (
                  var E = this.superReturns,
                    x = Array.isArray(E),
                    A = 0,
                    E = x ? E : (0, a.default)(E);
                  ;

                ) {
                  var C;
                  if (x) {
                    if (A >= E.length) break;
                    C = E[A++];
                  } else {
                    if (((A = E.next()), A.done)) break;
                    C = A.value;
                  }
                  var S = C;
                  if (S.node.argument) {
                    var _ = S.scope.generateDeclaredUidIdentifier("ret");
                    S.get("argument").replaceWithMultiple([
                      b.assignmentExpression("=", _, S.node.argument),
                      y(_),
                    ]);
                  } else S.get("argument").replaceWith(y());
                }
              }
            }),
            (e.prototype.pushMethod = function (e, t) {
              var r = t ? t.scope : this.scope;
              ("method" === e.kind && this._processMethod(e, r)) ||
                this.pushToMap(e, !1, null, r);
            }),
            (e.prototype._processMethod = function () {
              return !1;
            }),
            (e.prototype.pushConstructor = function (e, t, r) {
              (this.bareSupers = e.bareSupers),
                (this.superReturns = e.returns),
                r.scope.hasOwnBinding(this.classRef.name) &&
                  r.scope.rename(this.classRef.name);
              var n = this.constructor;
              (this.userConstructorPath = r),
                (this.userConstructor = t),
                (this.hasConstructor = !0),
                b.inheritsComments(n, t),
                (n._ignoreUserWhitespace = !0),
                (n.params = t.params),
                b.inherits(n.body, t.body),
                (n.body.directives = t.body.directives),
                this._pushConstructor();
            }),
            (e.prototype._pushConstructor = function () {
              this.pushedConstructor ||
                ((this.pushedConstructor = !0),
                (this.hasInstanceDescriptors || this.hasStaticDescriptors) &&
                  this.pushDescriptors(),
                this.body.push(this.constructor),
                this.pushInherits());
            }),
            (e.prototype.pushInherits = function () {
              this.isDerived &&
                !this.pushedInherits &&
                ((this.pushedInherits = !0),
                this.body.unshift(
                  b.expressionStatement(
                    b.callExpression(this.file.addHelper("inherits"), [
                      this.classRef,
                      this.superName,
                    ])
                  )
                ));
            }),
            e
          );
        })();
      (t.default = C), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = function e(t, r) {
          (0, s.default)(this, e), (this.file = t), (this.options = r);
        };
      (t.default = a), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0),
        (t.Flow = t.Pure = t.Generated = t.User = t.Var = t.BlockScoped = t.Referenced = t.Scope = t.Expression = t.Statement = t.BindingIdentifier = t.ReferencedMemberExpression = t.ReferencedIdentifier = void 0);
      var i = r(1),
        s = n(i);
      (t.ReferencedIdentifier = {
        types: ["Identifier", "JSXIdentifier"],
        checkPath: function (e, t) {
          var r = e.node,
            n = e.parent;
          if (!s.isIdentifier(r, t) && !s.isJSXMemberExpression(n, t)) {
            if (!s.isJSXIdentifier(r, t)) return !1;
            if (i.react.isCompatTag(r.name)) return !1;
          }
          return s.isReferenced(r, n);
        },
      }),
        (t.ReferencedMemberExpression = {
          types: ["MemberExpression"],
          checkPath: function (e) {
            var t = e.node,
              r = e.parent;
            return s.isMemberExpression(t) && s.isReferenced(t, r);
          },
        }),
        (t.BindingIdentifier = {
          types: ["Identifier"],
          checkPath: function (e) {
            var t = e.node,
              r = e.parent;
            return s.isIdentifier(t) && s.isBinding(t, r);
          },
        }),
        (t.Statement = {
          types: ["Statement"],
          checkPath: function (e) {
            var t = e.node,
              r = e.parent;
            if (s.isStatement(t)) {
              if (s.isVariableDeclaration(t)) {
                if (s.isForXStatement(r, { left: t })) return !1;
                if (s.isForStatement(r, { init: t })) return !1;
              }
              return !0;
            }
            return !1;
          },
        }),
        (t.Expression = {
          types: ["Expression"],
          checkPath: function (e) {
            return e.isIdentifier()
              ? e.isReferencedIdentifier()
              : s.isExpression(e.node);
          },
        }),
        (t.Scope = {
          types: ["Scopable"],
          checkPath: function (e) {
            return s.isScope(e.node, e.parent);
          },
        }),
        (t.Referenced = {
          checkPath: function (e) {
            return s.isReferenced(e.node, e.parent);
          },
        }),
        (t.BlockScoped = {
          checkPath: function (e) {
            return s.isBlockScoped(e.node);
          },
        }),
        (t.Var = {
          types: ["VariableDeclaration"],
          checkPath: function (e) {
            return s.isVar(e.node);
          },
        }),
        (t.User = {
          checkPath: function (e) {
            return e.node && !!e.node.loc;
          },
        }),
        (t.Generated = {
          checkPath: function (e) {
            return !e.isUser();
          },
        }),
        (t.Pure = {
          checkPath: function (e, t) {
            return e.scope.isPure(e.node, t);
          },
        }),
        (t.Flow = {
          types: ["Flow", "ImportDeclaration", "ExportDeclaration"],
          checkPath: function (e) {
            var t = e.node;
            return (
              !!s.isFlow(t) ||
              (s.isImportDeclaration(t)
                ? "type" === t.importKind || "typeof" === t.importKind
                : !!s.isExportDeclaration(t) && "type" === t.exportKind)
            );
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = (function () {
          function e(t) {
            var r = t.existing,
              n = t.identifier,
              i = t.scope,
              a = t.path,
              o = t.kind;
            (0, s.default)(this, e),
              (this.identifier = n),
              (this.scope = i),
              (this.path = a),
              (this.kind = o),
              (this.constantViolations = []),
              (this.constant = !0),
              (this.referencePaths = []),
              (this.referenced = !1),
              (this.references = 0),
              this.clearValue(),
              r &&
                (this.constantViolations = [].concat(
                  r.path,
                  r.constantViolations,
                  this.constantViolations
                ));
          }
          return (
            (e.prototype.deoptValue = function () {
              this.clearValue(), (this.hasDeoptedValue = !0);
            }),
            (e.prototype.setValue = function (e) {
              this.hasDeoptedValue || ((this.hasValue = !0), (this.value = e));
            }),
            (e.prototype.clearValue = function () {
              (this.hasDeoptedValue = !1),
                (this.hasValue = !1),
                (this.value = null);
            }),
            (e.prototype.reassign = function (e) {
              (this.constant = !1),
                this.constantViolations.indexOf(e) === -1 &&
                  this.constantViolations.push(e);
            }),
            (e.prototype.reference = function (e) {
              this.referencePaths.indexOf(e) === -1 &&
                ((this.referenced = !0),
                this.references++,
                this.referencePaths.push(e));
            }),
            (e.prototype.dereference = function () {
              this.references--, (this.referenced = !!this.references);
            }),
            e
          );
        })();
      (t.default = a), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t, r) {
        for (var n = [].concat(e), i = (0, u.default)(null); n.length; ) {
          var s = n.shift();
          if (s) {
            var a = c.getBindingIdentifiers.keys[s.type];
            if (c.isIdentifier(s))
              if (t) {
                var o = (i[s.name] = i[s.name] || []);
                o.push(s);
              } else i[s.name] = s;
            else if (c.isExportDeclaration(s))
              c.isDeclaration(e.declaration) && n.push(e.declaration);
            else {
              if (r) {
                if (c.isFunctionDeclaration(s)) {
                  n.push(s.id);
                  continue;
                }
                if (c.isFunctionExpression(s)) continue;
              }
              if (a)
                for (var l = 0; l < a.length; l++) {
                  var f = a[l];
                  s[f] && (n = n.concat(s[f]));
                }
            }
          }
        }
        return i;
      }
      function a(e, t) {
        return s(e, t, !0);
      }
      t.__esModule = !0;
      var o = r(33),
        u = i(o);
      (t.getBindingIdentifiers = s), (t.getOuterBindingIdentifiers = a);
      var l = r(1),
        c = n(l);
      s.keys = {
        DeclareClass: ["id"],
        DeclareFunction: ["id"],
        DeclareModule: ["id"],
        DeclareVariable: ["id"],
        InterfaceDeclaration: ["id"],
        TypeAlias: ["id"],
        CatchClause: ["param"],
        LabeledStatement: ["label"],
        UnaryExpression: ["argument"],
        AssignmentExpression: ["left"],
        ImportSpecifier: ["local"],
        ImportNamespaceSpecifier: ["local"],
        ImportDefaultSpecifier: ["local"],
        ImportDeclaration: ["specifiers"],
        ExportSpecifier: ["exported"],
        ExportNamespaceSpecifier: ["exported"],
        ExportDefaultSpecifier: ["exported"],
        FunctionDeclaration: ["id", "params"],
        FunctionExpression: ["id", "params"],
        ClassDeclaration: ["id"],
        ClassExpression: ["id"],
        RestElement: ["argument"],
        UpdateExpression: ["argument"],
        RestProperty: ["argument"],
        ObjectProperty: ["value"],
        AssignmentPattern: ["left"],
        ArrayPattern: ["elements"],
        ObjectPattern: ["properties"],
        VariableDeclaration: ["declarations"],
        VariableDeclarator: ["id"],
      };
    },
    function (e, t, r) {
      var n = r(105),
        i = r(8)("toStringTag"),
        s =
          "Arguments" ==
          n(
            (function () {
              return arguments;
            })()
          ),
        a = function (e, t) {
          try {
            return e[t];
          } catch (e) {}
        };
      e.exports = function (e) {
        var t, r, o;
        return void 0 === e
          ? "Undefined"
          : null === e
          ? "Null"
          : "string" == typeof (r = a((t = Object(e)), i))
          ? r
          : s
          ? n(t)
          : "Object" == (o = n(t)) && "function" == typeof t.callee
          ? "Arguments"
          : o;
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(112),
        i = r(55).getWeak,
        s = r(18),
        a = r(21),
        o = r(103),
        u = r(69),
        l = r(104),
        c = r(27),
        f = l(5),
        p = l(6),
        h = 0,
        d = function (e) {
          return e._l || (e._l = new m());
        },
        m = function () {
          this.a = [];
        },
        v = function (e, t) {
          return f(e.a, function (e) {
            return e[0] === t;
          });
        };
      (m.prototype = {
        get: function (e) {
          var t = v(this, e);
          if (t) return t[1];
        },
        has: function (e) {
          return !!v(this, e);
        },
        set: function (e, t) {
          var r = v(this, e);
          r ? (r[1] = t) : this.a.push([e, t]);
        },
        delete: function (e) {
          var t = p(this.a, function (t) {
            return t[0] === e;
          });
          return ~t && this.a.splice(t, 1), !!~t;
        },
      }),
        (e.exports = {
          getConstructor: function (e, t, r, s) {
            var l = e(function (e, n) {
              o(e, l, t, "_i"),
                (e._i = h++),
                (e._l = void 0),
                void 0 != n && u(n, r, e[s], e);
            });
            return (
              n(l.prototype, {
                delete: function (e) {
                  if (!a(e)) return !1;
                  var t = i(e);
                  return t === !0
                    ? d(this).delete(e)
                    : t && c(t, this._i) && delete t[this._i];
                },
                has: function (e) {
                  if (!a(e)) return !1;
                  var t = i(e);
                  return t === !0 ? d(this).has(e) : t && c(t, this._i);
                },
              }),
              l
            );
          },
          def: function (e, t, r) {
            var n = i(s(t), !0);
            return n === !0 ? d(e).set(t, r) : (n[e._i] = r), e;
          },
          ufstore: d,
        });
    },
    function (e, t, r) {
      var n = r(21),
        i = r(13).document,
        s = n(i) && n(i.createElement);
      e.exports = function (e) {
        return s ? i.createElement(e) : {};
      };
    },
    function (e, t, r) {
      e.exports =
        !r(19) &&
        !r(36)(function () {
          return (
            7 !=
            Object.defineProperty(r(164)("div"), "a", {
              get: function () {
                return 7;
              },
            }).a
          );
        });
    },
    function (e, t, r) {
      var n = r(105);
      e.exports =
        Array.isArray ||
        function (e) {
          return "Array" == n(e);
        };
    },
    function (e, t) {
      e.exports = function (e, t) {
        return { value: t, done: !!e };
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(41),
        i = r(111),
        s = r(71),
        a = r(74),
        o = r(108),
        u = Object.assign;
      e.exports =
        !u ||
        r(36)(function () {
          var e = {},
            t = {},
            r = Symbol(),
            n = "abcdefghijklmnopqrst";
          return (
            (e[r] = 7),
            n.split("").forEach(function (e) {
              t[e] = e;
            }),
            7 != u({}, e)[r] || Object.keys(u({}, t)).join("") != n
          );
        })
          ? function (e, t) {
              for (
                var r = a(e), u = arguments.length, l = 1, c = i.f, f = s.f;
                u > l;

              )
                for (
                  var p,
                    h = o(arguments[l++]),
                    d = c ? n(h).concat(c(h)) : n(h),
                    m = d.length,
                    v = 0;
                  m > v;

                )
                  f.call(h, (p = d[v++])) && (r[p] = h[p]);
              return r;
            }
          : u;
    },
    function (e, t, r) {
      var n = r(71),
        i = r(72),
        s = r(37),
        a = r(118),
        o = r(27),
        u = r(165),
        l = Object.getOwnPropertyDescriptor;
      t.f = r(19)
        ? l
        : function (e, t) {
            if (((e = s(e)), (t = a(t, !0)), u))
              try {
                return l(e, t);
              } catch (e) {}
            if (o(e, t)) return i(!n.f.call(e, t), e[t]);
          };
    },
    function (e, t, r) {
      var n = r(171),
        i = r(107).concat("length", "prototype");
      t.f =
        Object.getOwnPropertyNames ||
        function (e) {
          return n(e, i);
        };
    },
    function (e, t, r) {
      var n = r(27),
        i = r(37),
        s = r(358)(!1),
        a = r(114)("IE_PROTO");
      e.exports = function (e, t) {
        var r,
          o = i(e),
          u = 0,
          l = [];
        for (r in o) r != a && n(o, r) && l.push(r);
        for (; t.length > u; ) n(o, (r = t[u++])) && (~s(l, r) || l.push(r));
        return l;
      };
    },
    function (e, t, r) {
      var n = r(162),
        i = r(8)("iterator"),
        s = r(54);
      e.exports = r(4).getIteratorMethod = function (e) {
        if (void 0 != e) return e[i] || e["@@iterator"] || s[n(e)];
      };
    },
    function (e, t, r) {
      function n() {
        return t.colors[c++ % t.colors.length];
      }
      function i(e) {
        function r() {}
        function i() {
          var e = i,
            r = +new Date(),
            s = r - (l || r);
          (e.diff = s),
            (e.prev = l),
            (e.curr = r),
            (l = r),
            null == e.useColors && (e.useColors = t.useColors()),
            null == e.color && e.useColors && (e.color = n());
          for (var a = new Array(arguments.length), o = 0; o < a.length; o++)
            a[o] = arguments[o];
          (a[0] = t.coerce(a[0])),
            "string" != typeof a[0] && (a = ["%o"].concat(a));
          var u = 0;
          (a[0] = a[0].replace(/%([a-z%])/g, function (r, n) {
            if ("%%" === r) return r;
            u++;
            var i = t.formatters[n];
            if ("function" == typeof i) {
              var s = a[u];
              (r = i.call(e, s)), a.splice(u, 1), u--;
            }
            return r;
          })),
            (a = t.formatArgs.apply(e, a));
          var c = i.log || t.log || void 0;
          c.apply(e, a);
        }
        (r.enabled = !1), (i.enabled = !0);
        var s = t.enabled(e) ? i : r;
        return (s.namespace = e), s;
      }
      function s(e) {
        t.save(e);
        for (var r = (e || "").split(/[\s,]+/), n = r.length, i = 0; i < n; i++)
          r[i] &&
            ((e = r[i]
              .replace(/[\\^$+?.()|[\]{}]/g, "\\$&")
              .replace(/\*/g, ".*?")),
            "-" === e[0]
              ? t.skips.push(new RegExp("^" + e.substr(1) + "$"))
              : t.names.push(new RegExp("^" + e + "$")));
      }
      function a() {
        t.enable("");
      }
      function o(e) {
        var r, n;
        for (r = 0, n = t.skips.length; r < n; r++)
          if (t.skips[r].test(e)) return !1;
        for (r = 0, n = t.names.length; r < n; r++)
          if (t.names[r].test(e)) return !0;
        return !1;
      }
      function u(e) {
        return e instanceof Error ? e.stack || e.message : e;
      }
      (t = e.exports = i.debug = i),
        (t.coerce = u),
        (t.disable = a),
        (t.enable = s),
        (t.enabled = o),
        (t.humanize = r(538)),
        (t.names = []),
        (t.skips = []),
        (t.formatters = {});
      var l,
        c = 0;
    },
    function (e, t) {
      !(function () {
        "use strict";
        function t(e) {
          return 48 <= e && e <= 57;
        }
        function r(e) {
          return (
            (48 <= e && e <= 57) ||
            (97 <= e && e <= 102) ||
            (65 <= e && e <= 70)
          );
        }
        function n(e) {
          return e >= 48 && e <= 55;
        }
        function i(e) {
          return (
            32 === e ||
            9 === e ||
            11 === e ||
            12 === e ||
            160 === e ||
            (e >= 5760 && h.indexOf(e) >= 0)
          );
        }
        function s(e) {
          return 10 === e || 13 === e || 8232 === e || 8233 === e;
        }
        function a(e) {
          if (e <= 65535) return String.fromCharCode(e);
          var t = String.fromCharCode(Math.floor((e - 65536) / 1024) + 55296),
            r = String.fromCharCode(((e - 65536) % 1024) + 56320);
          return t + r;
        }
        function o(e) {
          return e < 128 ? d[e] : p.NonAsciiIdentifierStart.test(a(e));
        }
        function u(e) {
          return e < 128 ? m[e] : p.NonAsciiIdentifierPart.test(a(e));
        }
        function l(e) {
          return e < 128 ? d[e] : f.NonAsciiIdentifierStart.test(a(e));
        }
        function c(e) {
          return e < 128 ? m[e] : f.NonAsciiIdentifierPart.test(a(e));
        }
        var f, p, h, d, m, v;
        for (
          p = {
            NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
            NonAsciiIdentifierPart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]/,
          },
            f = {
              NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B2\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58\u0C59\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D60\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19C1-\u19C7\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDE00-\uDE11\uDE13-\uDE2B\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDE00-\uDE2F\uDE44\uDE80-\uDEAA]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]/,
              NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B2\u08E4-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58\u0C59\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D60-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F4\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FCC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA69D\uA69F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA78E\uA790-\uA7AD\uA7B0\uA7B1\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB5F\uAB64\uAB65\uABC0-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2D\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDD0-\uDDDA\uDE00-\uDE11\uDE13-\uDE37\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF01-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF98]|\uD809[\uDC00-\uDC6E]|[\uD80C\uD840-\uD868\uD86A-\uD86C][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
            },
            h = [
              5760,
              6158,
              8192,
              8193,
              8194,
              8195,
              8196,
              8197,
              8198,
              8199,
              8200,
              8201,
              8202,
              8239,
              8287,
              12288,
              65279,
            ],
            d = new Array(128),
            v = 0;
          v < 128;
          ++v
        )
          d[v] =
            (v >= 97 && v <= 122) ||
            (v >= 65 && v <= 90) ||
            36 === v ||
            95 === v;
        for (m = new Array(128), v = 0; v < 128; ++v)
          m[v] =
            (v >= 97 && v <= 122) ||
            (v >= 65 && v <= 90) ||
            (v >= 48 && v <= 57) ||
            36 === v ||
            95 === v;
        e.exports = {
          isDecimalDigit: t,
          isHexDigit: r,
          isOctalDigit: n,
          isWhiteSpace: i,
          isLineTerminator: s,
          isIdentifierStartES5: o,
          isIdentifierPartES5: u,
          isIdentifierStartES6: l,
          isIdentifierPartES6: c,
        };
      })();
    },
    function (e, t, r) {
      var n = r(38),
        i = r(15),
        s = n(i, "Set");
      e.exports = s;
    },
    function (e, t, r) {
      function n(e) {
        var t = -1,
          r = null == e ? 0 : e.length;
        for (this.__data__ = new i(); ++t < r; ) this.add(e[t]);
      }
      var i = r(125),
        s = r(495),
        a = r(496);
      (n.prototype.add = n.prototype.push = s),
        (n.prototype.has = a),
        (e.exports = n);
    },
    function (e, t, r) {
      var n = r(15),
        i = n.Uint8Array;
      e.exports = i;
    },
    function (e, t) {
      function r(e, t, r) {
        switch (r.length) {
          case 0:
            return e.call(t);
          case 1:
            return e.call(t, r[0]);
          case 2:
            return e.call(t, r[0], r[1]);
          case 3:
            return e.call(t, r[0], r[1], r[2]);
        }
        return e.apply(t, r);
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        for (
          var r = -1, n = null == e ? 0 : e.length;
          ++r < n && t(e[r], r, e) !== !1;

        );
        return e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = a(e),
          n = !r && s(e),
          c = !r && !n && o(e),
          p = !r && !n && !c && l(e),
          h = r || n || c || p,
          d = h ? i(e.length, String) : [],
          m = d.length;
        for (var v in e)
          (!t && !f.call(e, v)) ||
            (h &&
              ("length" == v ||
                (c && ("offset" == v || "parent" == v)) ||
                (p &&
                  ("buffer" == v || "byteLength" == v || "byteOffset" == v)) ||
                u(v, m))) ||
            d.push(v);
        return d;
      }
      var i = r(443),
        s = r(90),
        a = r(5),
        o = r(91),
        u = r(138),
        l = r(145),
        c = Object.prototype,
        f = c.hasOwnProperty;
      e.exports = n;
    },
    function (e, t) {
      function r(e, t, r, n) {
        var i = -1,
          s = null == e ? 0 : e.length;
        for (n && s && (r = e[++i]); ++i < s; ) r = t(r, e[i], i, e);
        return r;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        ((void 0 === r || s(e[t], r)) && (void 0 !== r || t in e)) ||
          i(e, t, r);
      }
      var i = r(128),
        s = r(43);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(420),
        i = r(459),
        s = i(n);
      e.exports = s;
    },
    function (e, t, r) {
      var n = r(460),
        i = n();
      e.exports = i;
    },
    function (e, t, r) {
      function n(e, t) {
        t = i(t, e);
        for (var r = 0, n = t.length; null != e && r < n; ) e = e[s(t[r++])];
        return r && r == n ? e : void 0;
      }
      var i = r(190),
        s = r(86);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = t(e);
        return s(e) ? n : i(n, r(e));
      }
      var i = r(126),
        s = r(5);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, o, u) {
        return (
          e === t ||
          (null == e || null == t || (!s(e) && !a(t))
            ? e !== e && t !== t
            : i(e, t, r, o, n, u))
        );
      }
      var i = r(424),
        s = r(9),
        a = r(10);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = -1,
          n = s(e) ? Array(e.length) : [];
        return (
          i(e, function (e, i, s) {
            n[++r] = t(e, i, s);
          }),
          n
        );
      }
      var i = r(183),
        s = r(23);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        return e.has(t);
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t) {
        return i(e) ? e : s(e, t) ? [e] : a(o(e));
      }
      var i = r(5),
        s = r(140),
        a = r(506),
        o = r(60);
      e.exports = n;
    },
    function (e, t, r) {
      (function (e) {
        function n(e, t) {
          if (t) return e.slice();
          var r = e.length,
            n = l ? l(r) : new e.constructor(r);
          return e.copy(n), n;
        }
        var i = r(15),
          s = "object" == typeof t && t && !t.nodeType && t,
          a = s && "object" == typeof e && e && !e.nodeType && e,
          o = a && a.exports === s,
          u = o ? i.Buffer : void 0,
          l = u ? u.allocUnsafe : void 0;
        e.exports = n;
      }.call(t, r(63)(e)));
    },
    function (e, t, r) {
      function n(e, t) {
        var r = t ? i(e.buffer) : e.buffer;
        return new e.constructor(r, e.byteOffset, e.length);
      }
      var i = r(135);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        var r = -1,
          n = e.length;
        for (t || (t = Array(n)); ++r < n; ) t[r] = e[r];
        return t;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return function (t, r, n) {
          var o = Object(t);
          if (!s(t)) {
            var u = i(r, 3);
            (t = a(t)),
              (r = function (e) {
                return u(o[e], e, o);
              });
          }
          var l = e(t, r, n);
          return l > -1 ? o[u ? t[l] : l] : void 0;
        };
      }
      var i = r(57),
        s = r(23),
        a = r(24);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(38),
        i = (function () {
          try {
            var e = n(Object, "defineProperty");
            return e({}, "", {}), e;
          } catch (e) {}
        })();
      e.exports = i;
    },
    function (e, t, r) {
      function n(e, t, r, n, l, c) {
        var f = r & o,
          p = e.length,
          h = t.length;
        if (p != h && !(f && h > p)) return !1;
        var d = c.get(e);
        if (d && c.get(t)) return d == t;
        var m = -1,
          v = !0,
          y = r & u ? new i() : void 0;
        for (c.set(e, t), c.set(t, e); ++m < p; ) {
          var g = e[m],
            b = t[m];
          if (n) var E = f ? n(b, g, m, t, e, c) : n(g, b, m, e, t, c);
          if (void 0 !== E) {
            if (E) continue;
            v = !1;
            break;
          }
          if (y) {
            if (
              !s(t, function (e, t) {
                if (!a(y, t) && (g === e || l(g, e, r, n, c))) return y.push(t);
              })
            ) {
              v = !1;
              break;
            }
          } else if (g !== b && !l(g, b, r, n, c)) {
            v = !1;
            break;
          }
        }
        return c.delete(e), c.delete(t), v;
      }
      var i = r(176),
        s = r(412),
        a = r(189),
        o = 1,
        u = 2;
      e.exports = n;
    },
    function (e, t) {
      (function (t) {
        var r = "object" == typeof t && t && t.Object === Object && t;
        e.exports = r;
      }.call(
        t,
        (function () {
          return this;
        })()
      ));
    },
    function (e, t, r) {
      var n = r(126),
        i = r(136),
        s = r(137),
        a = r(215),
        o = Object.getOwnPropertySymbols,
        u = o
          ? function (e) {
              for (var t = []; e; ) n(t, s(e)), (e = i(e));
              return t;
            }
          : a;
      e.exports = u;
    },
    function (e, t, r) {
      var n = r(404),
        i = r(124),
        s = r(406),
        a = r(175),
        o = r(407),
        u = r(14),
        l = r(206),
        c = "[object Map]",
        f = "[object Object]",
        p = "[object Promise]",
        h = "[object Set]",
        d = "[object WeakMap]",
        m = "[object DataView]",
        v = l(n),
        y = l(i),
        g = l(s),
        b = l(a),
        E = l(o),
        x = u;
      ((n && x(new n(new ArrayBuffer(1))) != m) ||
        (i && x(new i()) != c) ||
        (s && x(s.resolve()) != p) ||
        (a && x(new a()) != h) ||
        (o && x(new o()) != d)) &&
        (x = function (e) {
          var t = u(e),
            r = t == f ? e.constructor : void 0,
            n = r ? l(r) : "";
          if (n)
            switch (n) {
              case v:
                return m;
              case y:
                return c;
              case g:
                return p;
              case b:
                return h;
              case E:
                return d;
            }
          return t;
        }),
        (e.exports = x);
    },
    function (e, t, r) {
      function n(e, t, r) {
        t = i(t, e);
        for (var n = -1, c = t.length, f = !1; ++n < c; ) {
          var p = l(t[n]);
          if (!(f = null != e && r(e, p))) break;
          e = e[p];
        }
        return f || ++n != c
          ? f
          : ((c = null == e ? 0 : e.length),
            !!c && u(c) && o(p, c) && (a(e) || s(e)));
      }
      var i = r(190),
        s = r(90),
        a = r(5),
        o = r(138),
        u = r(143),
        l = r(86);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return "function" != typeof e.constructor || a(e) ? {} : i(s(e));
      }
      var i = r(418),
        s = r(136),
        a = r(83);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return e === e && !i(e);
      }
      var i = r(9);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = -1,
          r = Array(e.size);
        return (
          e.forEach(function (e, n) {
            r[++t] = [n, e];
          }),
          r
        );
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        return function (r) {
          return null != r && r[e] === t && (void 0 !== t || e in Object(r));
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      (function (e) {
        var n = r(197),
          i = "object" == typeof t && t && !t.nodeType && t,
          s = i && "object" == typeof e && e && !e.nodeType && e,
          a = s && s.exports === i,
          o = a && n.process,
          u = (function () {
            try {
              return o && o.binding && o.binding("util");
            } catch (e) {}
          })();
        e.exports = u;
      }.call(t, r(63)(e)));
    },
    function (e, t) {
      function r(e) {
        if (null != e) {
          try {
            return i.call(e);
          } catch (e) {}
          try {
            return e + "";
          } catch (e) {}
        }
        return "";
      }
      var n = Function.prototype,
        i = n.toString;
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(178),
        i = r(414),
        s = r(509),
        a = r(132),
        o = a(function (e) {
          return e.push(void 0, i), n(s, void 0, e);
        });
      e.exports = o;
    },
    function (e, t, r) {
      var n = r(194),
        i = r(516),
        s = n(i);
      e.exports = s;
    },
    function (e, t, r) {
      function n(e, t) {
        return null != e && s(e, t, i);
      }
      var i = r(421),
        s = r(200);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return e === !0 || e === !1 || (s(e) && i(e) == a);
      }
      var i = r(14),
        s = r(10),
        a = "[object Boolean]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return "number" == typeof e || (s(e) && i(e) == a);
      }
      var i = r(14),
        s = r(10),
        a = "[object Number]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        if (!a(e) || i(e) != o) return !1;
        var t = s(e);
        if (null === t) return !0;
        var r = f.call(t, "constructor") && t.constructor;
        return "function" == typeof r && r instanceof r && c.call(r) == p;
      }
      var i = r(14),
        s = r(136),
        a = r(10),
        o = "[object Object]",
        u = Function.prototype,
        l = Object.prototype,
        c = u.toString,
        f = l.hasOwnProperty,
        p = c.call(Object);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(428),
        i = r(134),
        s = r(205),
        a = s && s.isRegExp,
        o = a ? i(a) : n;
      e.exports = o;
    },
    function (e, t, r) {
      function n(e, t, r) {
        return (t = (r ? s(e, t, r) : void 0 === t) ? 1 : a(t)), i(o(e), t);
      }
      var i = r(439),
        s = r(139),
        a = r(45),
        o = r(60);
      e.exports = n;
    },
    function (e, t) {
      function r() {
        return [];
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return null == e ? [] : i(e, s(e));
      }
      var i = r(445),
        s = r(24);
      e.exports = n;
    },
    function (e, t) {
      "use strict";
      function r(e, t, r) {
        if (c)
          try {
            c.call(l, e, t, { value: r });
          } catch (n) {
            e[t] = r;
          }
        else e[t] = r;
      }
      function n(e) {
        return e && (r(e, "call", e.call), r(e, "apply", e.apply)), e;
      }
      function i(e) {
        return f ? f.call(l, e) : ((m.prototype = e || null), new m());
      }
      function s() {
        do var e = a(d.call(h.call(v(), 36), 2));
        while (p.call(y, e));
        return (y[e] = e);
      }
      function a(e) {
        var t = {};
        return (t[e] = !0), Object.keys(t)[0];
      }
      function o(e) {
        return i(null);
      }
      function u(e) {
        function t(t) {
          function n(r, n) {
            if (r === u) return n ? (i = null) : i || (i = e(t));
          }
          var i;
          r(t, a, n);
        }
        function n(e) {
          return p.call(e, a) || t(e), e[a](u);
        }
        var a = s(),
          u = i(null);
        return (
          (e = e || o),
          (n.forget = function (e) {
            p.call(e, a) && e[a](u, !0);
          }),
          n
        );
      }
      var l = Object,
        c = Object.defineProperty,
        f = Object.create;
      n(c), n(f);
      var p = n(Object.prototype.hasOwnProperty),
        h = n(Number.prototype.toString),
        d = n(String.prototype.slice),
        m = function () {},
        v = Math.random,
        y = i(null);
      r(t, "makeUniqueKey", s);
      var g = Object.getOwnPropertyNames;
      (Object.getOwnPropertyNames = function (e) {
        for (var t = g(e), r = 0, n = 0, i = t.length; r < i; ++r)
          p.call(y, t[r]) || (r > n && (t[n] = t[r]), ++n);
        return (t.length = n), t;
      }),
        r(t, "makeAccessor", u);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        d.default.ok(this instanceof s),
          v.assertIdentifier(e),
          (this.nextTempId = 0),
          (this.contextId = e),
          (this.listing = []),
          (this.marked = [!0]),
          (this.finalLoc = a()),
          (this.tryEntries = []),
          (this.leapManager = new g.LeapManager(this));
      }
      function a() {
        return v.numericLiteral(-1);
      }
      function o(e) {
        return new Error(
          "all declarations should have been transformed into assignments before the Exploder began its work: " +
            (0, p.default)(e)
        );
      }
      function u(e) {
        var t = e.type;
        return "normal" === t
          ? !D.call(e, "target")
          : "break" === t || "continue" === t
          ? !D.call(e, "value") && v.isLiteral(e.target)
          : ("return" === t || "throw" === t) &&
            D.call(e, "value") &&
            !D.call(e, "target");
      }
      var l = r(6),
        c = i(l),
        f = r(32),
        p = i(f),
        h = r(64),
        d = i(h),
        m = r(1),
        v = n(m),
        y = r(543),
        g = n(y),
        b = r(544),
        E = n(b),
        x = r(219),
        A = n(x),
        D = Object.prototype.hasOwnProperty,
        C = s.prototype;
      (t.Emitter = s),
        (C.mark = function (e) {
          v.assertLiteral(e);
          var t = this.listing.length;
          return (
            e.value === -1 ? (e.value = t) : d.default.strictEqual(e.value, t),
            (this.marked[t] = !0),
            e
          );
        }),
        (C.emit = function (e) {
          v.isExpression(e) && (e = v.expressionStatement(e)),
            v.assertStatement(e),
            this.listing.push(e);
        }),
        (C.emitAssign = function (e, t) {
          return this.emit(this.assign(e, t)), e;
        }),
        (C.assign = function (e, t) {
          return v.expressionStatement(v.assignmentExpression("=", e, t));
        }),
        (C.contextProperty = function (e, t) {
          return v.memberExpression(
            this.contextId,
            t ? v.stringLiteral(e) : v.identifier(e),
            !!t
          );
        }),
        (C.stop = function (e) {
          e && this.setReturnValue(e), this.jump(this.finalLoc);
        }),
        (C.setReturnValue = function (e) {
          v.assertExpression(e.value),
            this.emitAssign(
              this.contextProperty("rval"),
              this.explodeExpression(e)
            );
        }),
        (C.clearPendingException = function (e, t) {
          v.assertLiteral(e);
          var r = v.callExpression(this.contextProperty("catch", !0), [e]);
          t ? this.emitAssign(t, r) : this.emit(r);
        }),
        (C.jump = function (e) {
          this.emitAssign(this.contextProperty("next"), e),
            this.emit(v.breakStatement());
        }),
        (C.jumpIf = function (e, t) {
          v.assertExpression(e),
            v.assertLiteral(t),
            this.emit(
              v.ifStatement(
                e,
                v.blockStatement([
                  this.assign(this.contextProperty("next"), t),
                  v.breakStatement(),
                ])
              )
            );
        }),
        (C.jumpIfNot = function (e, t) {
          v.assertExpression(e), v.assertLiteral(t);
          var r = void 0;
          (r =
            v.isUnaryExpression(e) && "!" === e.operator
              ? e.argument
              : v.unaryExpression("!", e)),
            this.emit(
              v.ifStatement(
                r,
                v.blockStatement([
                  this.assign(this.contextProperty("next"), t),
                  v.breakStatement(),
                ])
              )
            );
        }),
        (C.makeTempVar = function () {
          return this.contextProperty("t" + this.nextTempId++);
        }),
        (C.getContextFunction = function (e) {
          return v.functionExpression(
            e || null,
            [this.contextId],
            v.blockStatement([this.getDispatchLoop()]),
            !1,
            !1
          );
        }),
        (C.getDispatchLoop = function () {
          var e = this,
            t = [],
            r = void 0,
            n = !1;
          return (
            e.listing.forEach(function (i, s) {
              e.marked.hasOwnProperty(s) &&
                (t.push(v.switchCase(v.numericLiteral(s), (r = []))), (n = !1)),
                n || (r.push(i), v.isCompletionStatement(i) && (n = !0));
            }),
            (this.finalLoc.value = this.listing.length),
            t.push(
              v.switchCase(this.finalLoc, []),
              v.switchCase(v.stringLiteral("end"), [
                v.returnStatement(
                  v.callExpression(this.contextProperty("stop"), [])
                ),
              ])
            ),
            v.whileStatement(
              v.numericLiteral(1),
              v.switchStatement(
                v.assignmentExpression(
                  "=",
                  this.contextProperty("prev"),
                  this.contextProperty("next")
                ),
                t
              )
            )
          );
        }),
        (C.getTryLocsList = function () {
          if (0 === this.tryEntries.length) return null;
          var e = 0;
          return v.arrayExpression(
            this.tryEntries.map(function (t) {
              var r = t.firstLoc.value;
              d.default.ok(r >= e, "try entries out of order"), (e = r);
              var n = t.catchEntry,
                i = t.finallyEntry,
                s = [t.firstLoc, n ? n.firstLoc : null];
              return (
                i && ((s[2] = i.firstLoc), (s[3] = i.afterLoc)),
                v.arrayExpression(s)
              );
            })
          );
        }),
        (C.explode = function (e, t) {
          var r = e.node,
            n = this;
          if ((v.assertNode(r), v.isDeclaration(r))) throw o(r);
          if (v.isStatement(r)) return n.explodeStatement(e);
          if (v.isExpression(r)) return n.explodeExpression(e, t);
          switch (r.type) {
            case "Program":
              return e.get("body").map(n.explodeStatement, n);
            case "VariableDeclarator":
              throw o(r);
            case "Property":
            case "SwitchCase":
            case "CatchClause":
              throw new Error(
                r.type + " nodes should be handled by their parents"
              );
            default:
              throw new Error("unknown Node of type " + (0, p.default)(r.type));
          }
        }),
        (C.explodeStatement = function (e, t) {
          var r = e.node,
            n = this,
            i = void 0,
            s = void 0,
            o = void 0;
          if (
            (v.assertStatement(r),
            t ? v.assertIdentifier(t) : (t = null),
            v.isBlockStatement(r))
          )
            return void e.get("body").forEach(function (e) {
              n.explodeStatement(e);
            });
          if (!E.containsLeap(r)) return void n.emit(r);
          var u = (function () {
            switch (r.type) {
              case "ExpressionStatement":
                n.explodeExpression(e.get("expression"), !0);
                break;
              case "LabeledStatement":
                (s = a()),
                  n.leapManager.withEntry(
                    new g.LabeledEntry(s, r.label),
                    function () {
                      n.explodeStatement(e.get("body"), r.label);
                    }
                  ),
                  n.mark(s);
                break;
              case "WhileStatement":
                (i = a()),
                  (s = a()),
                  n.mark(i),
                  n.jumpIfNot(n.explodeExpression(e.get("test")), s),
                  n.leapManager.withEntry(
                    new g.LoopEntry(s, i, t),
                    function () {
                      n.explodeStatement(e.get("body"));
                    }
                  ),
                  n.jump(i),
                  n.mark(s);
                break;
              case "DoWhileStatement":
                var u = a(),
                  l = a();
                (s = a()),
                  n.mark(u),
                  n.leapManager.withEntry(
                    new g.LoopEntry(s, l, t),
                    function () {
                      n.explode(e.get("body"));
                    }
                  ),
                  n.mark(l),
                  n.jumpIf(n.explodeExpression(e.get("test")), u),
                  n.mark(s);
                break;
              case "ForStatement":
                o = a();
                var c = a();
                (s = a()),
                  r.init && n.explode(e.get("init"), !0),
                  n.mark(o),
                  r.test && n.jumpIfNot(n.explodeExpression(e.get("test")), s),
                  n.leapManager.withEntry(
                    new g.LoopEntry(s, c, t),
                    function () {
                      n.explodeStatement(e.get("body"));
                    }
                  ),
                  n.mark(c),
                  r.update && n.explode(e.get("update"), !0),
                  n.jump(o),
                  n.mark(s);
                break;
              case "TypeCastExpression":
                return { v: n.explodeExpression(e.get("expression")) };
              case "ForInStatement":
                (o = a()), (s = a());
                var f = n.makeTempVar();
                n.emitAssign(
                  f,
                  v.callExpression(A.runtimeProperty("keys"), [
                    n.explodeExpression(e.get("right")),
                  ])
                ),
                  n.mark(o);
                var h = n.makeTempVar();
                n.jumpIf(
                  v.memberExpression(
                    v.assignmentExpression("=", h, v.callExpression(f, [])),
                    v.identifier("done"),
                    !1
                  ),
                  s
                ),
                  n.emitAssign(
                    r.left,
                    v.memberExpression(h, v.identifier("value"), !1)
                  ),
                  n.leapManager.withEntry(
                    new g.LoopEntry(s, o, t),
                    function () {
                      n.explodeStatement(e.get("body"));
                    }
                  ),
                  n.jump(o),
                  n.mark(s);
                break;
              case "BreakStatement":
                n.emitAbruptCompletion({
                  type: "break",
                  target: n.leapManager.getBreakLoc(r.label),
                });
                break;
              case "ContinueStatement":
                n.emitAbruptCompletion({
                  type: "continue",
                  target: n.leapManager.getContinueLoc(r.label),
                });
                break;
              case "SwitchStatement":
                var m = n.emitAssign(
                  n.makeTempVar(),
                  n.explodeExpression(e.get("discriminant"))
                );
                s = a();
                for (
                  var y = a(),
                    b = y,
                    E = [],
                    x = r.cases || [],
                    D = x.length - 1;
                  D >= 0;
                  --D
                ) {
                  var C = x[D];
                  v.assertSwitchCase(C),
                    C.test
                      ? (b = v.conditionalExpression(
                          v.binaryExpression("===", m, C.test),
                          (E[D] = a()),
                          b
                        ))
                      : (E[D] = y);
                }
                var _ = e.get("discriminant");
                _.replaceWith(b),
                  n.jump(n.explodeExpression(_)),
                  n.leapManager.withEntry(new g.SwitchEntry(s), function () {
                    e.get("cases").forEach(function (e) {
                      var t = e.key;
                      n.mark(E[t]),
                        e.get("consequent").forEach(function (e) {
                          n.explodeStatement(e);
                        });
                    });
                  }),
                  n.mark(s),
                  y.value === -1 &&
                    (n.mark(y), d.default.strictEqual(s.value, y.value));
                break;
              case "IfStatement":
                var w = r.alternate && a();
                (s = a()),
                  n.jumpIfNot(n.explodeExpression(e.get("test")), w || s),
                  n.explodeStatement(e.get("consequent")),
                  w &&
                    (n.jump(s),
                    n.mark(w),
                    n.explodeStatement(e.get("alternate"))),
                  n.mark(s);
                break;
              case "ReturnStatement":
                n.emitAbruptCompletion({
                  type: "return",
                  value: n.explodeExpression(e.get("argument")),
                });
                break;
              case "WithStatement":
                throw new Error(
                  "WithStatement not supported in generator functions."
                );
              case "TryStatement":
                s = a();
                var F = r.handler,
                  k = F && a(),
                  P = k && new g.CatchEntry(k, F.param),
                  T = r.finalizer && a(),
                  O = T && new g.FinallyEntry(T, s),
                  B = new g.TryEntry(n.getUnmarkedCurrentLoc(), P, O);
                n.tryEntries.push(B),
                  n.updateContextPrevLoc(B.firstLoc),
                  n.leapManager.withEntry(B, function () {
                    n.explodeStatement(e.get("block")),
                      k &&
                        !(function () {
                          T ? n.jump(T) : n.jump(s),
                            n.updateContextPrevLoc(n.mark(k));
                          var t = e.get("handler.body"),
                            r = n.makeTempVar();
                          n.clearPendingException(B.firstLoc, r),
                            t.traverse(S, {
                              safeParam: r,
                              catchParamName: F.param.name,
                            }),
                            n.leapManager.withEntry(P, function () {
                              n.explodeStatement(t);
                            });
                        })(),
                      T &&
                        (n.updateContextPrevLoc(n.mark(T)),
                        n.leapManager.withEntry(O, function () {
                          n.explodeStatement(e.get("finalizer"));
                        }),
                        n.emit(
                          v.returnStatement(
                            v.callExpression(n.contextProperty("finish"), [
                              O.firstLoc,
                            ])
                          )
                        ));
                  }),
                  n.mark(s);
                break;
              case "ThrowStatement":
                n.emit(
                  v.throwStatement(n.explodeExpression(e.get("argument")))
                );
                break;
              default:
                throw new Error(
                  "unknown Statement of type " + (0, p.default)(r.type)
                );
            }
          })();
          return "object" ===
            ("undefined" == typeof u ? "undefined" : (0, c.default)(u))
            ? u.v
            : void 0;
        });
      var S = {
        Identifier: function (e, t) {
          e.node.name === t.catchParamName &&
            A.isReference(e) &&
            e.replaceWith(t.safeParam);
        },
        Scope: function (e, t) {
          e.scope.hasOwnBinding(t.catchParamName) && e.skip();
        },
      };
      (C.emitAbruptCompletion = function (e) {
        u(e) ||
          d.default.ok(!1, "invalid completion record: " + (0, p.default)(e)),
          d.default.notStrictEqual(
            e.type,
            "normal",
            "normal completions are not abrupt"
          );
        var t = [v.stringLiteral(e.type)];
        "break" === e.type || "continue" === e.type
          ? (v.assertLiteral(e.target), (t[1] = e.target))
          : ("return" !== e.type && "throw" !== e.type) ||
            (e.value && (v.assertExpression(e.value), (t[1] = e.value))),
          this.emit(
            v.returnStatement(
              v.callExpression(this.contextProperty("abrupt"), t)
            )
          );
      }),
        (C.getUnmarkedCurrentLoc = function () {
          return v.numericLiteral(this.listing.length);
        }),
        (C.updateContextPrevLoc = function (e) {
          e
            ? (v.assertLiteral(e),
              e.value === -1
                ? (e.value = this.listing.length)
                : d.default.strictEqual(e.value, this.listing.length))
            : (e = this.getUnmarkedCurrentLoc()),
            this.emitAssign(this.contextProperty("prev"), e);
        }),
        (C.explodeExpression = function (e, t) {
          function r(e) {
            return v.assertExpression(e), t ? void s.emit(e) : e;
          }
          function n(e, t, r) {
            d.default.ok(
              !r || !e,
              "Ignoring the result of a child expression but forcing it to be assigned to a temporary variable?"
            );
            var n = s.explodeExpression(t, r);
            return (
              r ||
                ((e || (l && !v.isLiteral(n))) &&
                  (n = s.emitAssign(e || s.makeTempVar(), n))),
              n
            );
          }
          var i = e.node;
          if (!i) return i;
          v.assertExpression(i);
          var s = this,
            o = void 0,
            u = void 0;
          if (!E.containsLeap(i)) return r(i);
          var l = E.containsLeap.onlyChildren(i),
            f = (function () {
              switch (i.type) {
                case "MemberExpression":
                  return {
                    v: r(
                      v.memberExpression(
                        s.explodeExpression(e.get("object")),
                        i.computed ? n(null, e.get("property")) : i.property,
                        i.computed
                      )
                    ),
                  };
                case "CallExpression":
                  var l = e.get("callee"),
                    c = e.get("arguments"),
                    f = void 0,
                    h = [],
                    m = !1;
                  if (
                    (c.forEach(function (e) {
                      m = m || E.containsLeap(e.node);
                    }),
                    v.isMemberExpression(l.node))
                  )
                    if (m) {
                      var y = n(s.makeTempVar(), l.get("object")),
                        g = l.node.computed
                          ? n(null, l.get("property"))
                          : l.node.property;
                      h.unshift(y),
                        (f = v.memberExpression(
                          v.memberExpression(y, g, l.node.computed),
                          v.identifier("call"),
                          !1
                        ));
                    } else f = s.explodeExpression(l);
                  else
                    (f = n(null, l)),
                      v.isMemberExpression(f) &&
                        (f = v.sequenceExpression([v.numericLiteral(0), f]));
                  return (
                    c.forEach(function (e) {
                      h.push(n(null, e));
                    }),
                    { v: r(v.callExpression(f, h)) }
                  );
                case "NewExpression":
                  return {
                    v: r(
                      v.newExpression(
                        n(null, e.get("callee")),
                        e.get("arguments").map(function (e) {
                          return n(null, e);
                        })
                      )
                    ),
                  };
                case "ObjectExpression":
                  return {
                    v: r(
                      v.objectExpression(
                        e.get("properties").map(function (e) {
                          return e.isObjectProperty()
                            ? v.objectProperty(
                                e.node.key,
                                n(null, e.get("value")),
                                e.node.computed
                              )
                            : e.node;
                        })
                      )
                    ),
                  };
                case "ArrayExpression":
                  return {
                    v: r(
                      v.arrayExpression(
                        e.get("elements").map(function (e) {
                          return n(null, e);
                        })
                      )
                    ),
                  };
                case "SequenceExpression":
                  var b = i.expressions.length - 1;
                  return (
                    e.get("expressions").forEach(function (e) {
                      e.key === b
                        ? (o = s.explodeExpression(e, t))
                        : s.explodeExpression(e, !0);
                    }),
                    { v: o }
                  );
                case "LogicalExpression":
                  (u = a()), t || (o = s.makeTempVar());
                  var x = n(o, e.get("left"));
                  return (
                    "&&" === i.operator
                      ? s.jumpIfNot(x, u)
                      : (d.default.strictEqual(i.operator, "||"),
                        s.jumpIf(x, u)),
                    n(o, e.get("right"), t),
                    s.mark(u),
                    { v: o }
                  );
                case "ConditionalExpression":
                  var A = a();
                  u = a();
                  var D = s.explodeExpression(e.get("test"));
                  return (
                    s.jumpIfNot(D, A),
                    t || (o = s.makeTempVar()),
                    n(o, e.get("consequent"), t),
                    s.jump(u),
                    s.mark(A),
                    n(o, e.get("alternate"), t),
                    s.mark(u),
                    { v: o }
                  );
                case "UnaryExpression":
                  return {
                    v: r(
                      v.unaryExpression(
                        i.operator,
                        s.explodeExpression(e.get("argument")),
                        !!i.prefix
                      )
                    ),
                  };
                case "BinaryExpression":
                  return {
                    v: r(
                      v.binaryExpression(
                        i.operator,
                        n(null, e.get("left")),
                        n(null, e.get("right"))
                      )
                    ),
                  };
                case "AssignmentExpression":
                  return {
                    v: r(
                      v.assignmentExpression(
                        i.operator,
                        s.explodeExpression(e.get("left")),
                        s.explodeExpression(e.get("right"))
                      )
                    ),
                  };
                case "UpdateExpression":
                  return {
                    v: r(
                      v.updateExpression(
                        i.operator,
                        s.explodeExpression(e.get("argument")),
                        i.prefix
                      )
                    ),
                  };
                case "YieldExpression":
                  u = a();
                  var C = i.argument && s.explodeExpression(e.get("argument"));
                  if (C && i.delegate) {
                    var S = s.makeTempVar();
                    return (
                      s.emit(
                        v.returnStatement(
                          v.callExpression(s.contextProperty("delegateYield"), [
                            C,
                            v.stringLiteral(S.property.name),
                            u,
                          ])
                        )
                      ),
                      s.mark(u),
                      { v: S }
                    );
                  }
                  return (
                    s.emitAssign(s.contextProperty("next"), u),
                    s.emit(v.returnStatement(C || null)),
                    s.mark(u),
                    { v: s.contextProperty("sent") }
                  );
                default:
                  throw new Error(
                    "unknown Expression of type " + (0, p.default)(i.type)
                  );
              }
            })();
          return "object" ===
            ("undefined" == typeof f ? "undefined" : (0, c.default)(f))
            ? f.v
            : void 0;
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return o.memberExpression(
          o.identifier("regeneratorRuntime"),
          o.identifier(e),
          !1
        );
      }
      function s(e) {
        return (
          e.isReferenced() ||
          e.parentPath.isAssignmentExpression({ left: e.node })
        );
      }
      (t.__esModule = !0), (t.runtimeProperty = i), (t.isReference = s);
      var a = r(1),
        o = n(a);
    },
    function (e, t) {
      "use strict";
      e.exports = function (e) {
        var t = /^\\\\\?\\/.test(e),
          r = /[^\x00-\x80]+/.test(e);
        return t || r ? e : e.replace(/\\/g, "/");
      };
    },
    function (e, t, r) {
      function n() {
        (this._array = []), (this._set = Object.create(null));
      }
      var i = r(61),
        s = Object.prototype.hasOwnProperty;
      (n.fromArray = function (e, t) {
        for (var r = new n(), i = 0, s = e.length; i < s; i++) r.add(e[i], t);
        return r;
      }),
        (n.prototype.size = function () {
          return Object.getOwnPropertyNames(this._set).length;
        }),
        (n.prototype.add = function (e, t) {
          var r = i.toSetString(e),
            n = s.call(this._set, r),
            a = this._array.length;
          (n && !t) || this._array.push(e), n || (this._set[r] = a);
        }),
        (n.prototype.has = function (e) {
          var t = i.toSetString(e);
          return s.call(this._set, t);
        }),
        (n.prototype.indexOf = function (e) {
          var t = i.toSetString(e);
          if (s.call(this._set, t)) return this._set[t];
          throw new Error('"' + e + '" is not in the set.');
        }),
        (n.prototype.at = function (e) {
          if (e >= 0 && e < this._array.length) return this._array[e];
          throw new Error("No element indexed by " + e);
        }),
        (n.prototype.toArray = function () {
          return this._array.slice();
        }),
        (t.ArraySet = n);
    },
    function (e, t, r) {
      function n(e) {
        return e < 0 ? (-e << 1) + 1 : (e << 1) + 0;
      }
      function i(e) {
        var t = 1 === (1 & e),
          r = e >> 1;
        return t ? -r : r;
      }
      var s = r(546),
        a = 5,
        o = 1 << a,
        u = o - 1,
        l = o;
      (t.encode = function (e) {
        var t,
          r = "",
          i = n(e);
        do (t = i & u), (i >>>= a), i > 0 && (t |= l), (r += s.encode(t));
        while (i > 0);
        return r;
      }),
        (t.decode = function (e, t, r) {
          var n,
            o,
            c = e.length,
            f = 0,
            p = 0;
          do {
            if (t >= c)
              throw new Error("Expected more digits in base 64 VLQ value.");
            if (((o = s.decode(e.charCodeAt(t++))), o === -1))
              throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
            (n = !!(o & l)), (o &= u), (f += o << p), (p += a);
          } while (n);
          (r.value = i(f)), (r.rest = t);
        });
    },
    function (e, t, r) {
      function n(e) {
        e || (e = {}),
          (this._file = s.getArg(e, "file", null)),
          (this._sourceRoot = s.getArg(e, "sourceRoot", null)),
          (this._skipValidation = s.getArg(e, "skipValidation", !1)),
          (this._sources = new a()),
          (this._names = new a()),
          (this._mappings = new o()),
          (this._sourcesContents = null);
      }
      var i = r(222),
        s = r(61),
        a = r(221).ArraySet,
        o = r(548).MappingList;
      (n.prototype._version = 3),
        (n.fromSourceMap = function (e) {
          var t = e.sourceRoot,
            r = new n({ file: e.file, sourceRoot: t });
          return (
            e.eachMapping(function (e) {
              var n = {
                generated: { line: e.generatedLine, column: e.generatedColumn },
              };
              null != e.source &&
                ((n.source = e.source),
                null != t && (n.source = s.relative(t, n.source)),
                (n.original = {
                  line: e.originalLine,
                  column: e.originalColumn,
                }),
                null != e.name && (n.name = e.name)),
                r.addMapping(n);
            }),
            e.sources.forEach(function (t) {
              var n = e.sourceContentFor(t);
              null != n && r.setSourceContent(t, n);
            }),
            r
          );
        }),
        (n.prototype.addMapping = function (e) {
          var t = s.getArg(e, "generated"),
            r = s.getArg(e, "original", null),
            n = s.getArg(e, "source", null),
            i = s.getArg(e, "name", null);
          this._skipValidation || this._validateMapping(t, r, n, i),
            null != n &&
              ((n = String(n)), this._sources.has(n) || this._sources.add(n)),
            null != i &&
              ((i = String(i)), this._names.has(i) || this._names.add(i)),
            this._mappings.add({
              generatedLine: t.line,
              generatedColumn: t.column,
              originalLine: null != r && r.line,
              originalColumn: null != r && r.column,
              source: n,
              name: i,
            });
        }),
        (n.prototype.setSourceContent = function (e, t) {
          var r = e;
          null != this._sourceRoot && (r = s.relative(this._sourceRoot, r)),
            null != t
              ? (this._sourcesContents ||
                  (this._sourcesContents = Object.create(null)),
                (this._sourcesContents[s.toSetString(r)] = t))
              : this._sourcesContents &&
                (delete this._sourcesContents[s.toSetString(r)],
                0 === Object.keys(this._sourcesContents).length &&
                  (this._sourcesContents = null));
        }),
        (n.prototype.applySourceMap = function (e, t, r) {
          var n = t;
          if (null == t) {
            if (null == e.file)
              throw new Error(
                'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.'
              );
            n = e.file;
          }
          var i = this._sourceRoot;
          null != i && (n = s.relative(i, n));
          var o = new a(),
            u = new a();
          this._mappings.unsortedForEach(function (t) {
            if (t.source === n && null != t.originalLine) {
              var a = e.originalPositionFor({
                line: t.originalLine,
                column: t.originalColumn,
              });
              null != a.source &&
                ((t.source = a.source),
                null != r && (t.source = s.join(r, t.source)),
                null != i && (t.source = s.relative(i, t.source)),
                (t.originalLine = a.line),
                (t.originalColumn = a.column),
                null != a.name && (t.name = a.name));
            }
            var l = t.source;
            null == l || o.has(l) || o.add(l);
            var c = t.name;
            null == c || u.has(c) || u.add(c);
          }, this),
            (this._sources = o),
            (this._names = u),
            e.sources.forEach(function (t) {
              var n = e.sourceContentFor(t);
              null != n &&
                (null != r && (t = s.join(r, t)),
                null != i && (t = s.relative(i, t)),
                this.setSourceContent(t, n));
            }, this);
        }),
        (n.prototype._validateMapping = function (e, t, r, n) {
          if (
            (!(
              e &&
              "line" in e &&
              "column" in e &&
              e.line > 0 &&
              e.column >= 0
            ) ||
              t ||
              r ||
              n) &&
            !(
              e &&
              "line" in e &&
              "column" in e &&
              t &&
              "line" in t &&
              "column" in t &&
              e.line > 0 &&
              e.column >= 0 &&
              t.line > 0 &&
              t.column >= 0 &&
              r
            )
          )
            throw new Error(
              "Invalid mapping: " +
                JSON.stringify({
                  generated: e,
                  source: r,
                  original: t,
                  name: n,
                })
            );
        }),
        (n.prototype._serializeMappings = function () {
          for (
            var e,
              t,
              r,
              n,
              a = 0,
              o = 1,
              u = 0,
              l = 0,
              c = 0,
              f = 0,
              p = "",
              h = this._mappings.toArray(),
              d = 0,
              m = h.length;
            d < m;
            d++
          ) {
            if (((t = h[d]), (e = ""), t.generatedLine !== o))
              for (a = 0; t.generatedLine !== o; ) (e += ";"), o++;
            else if (d > 0) {
              if (!s.compareByGeneratedPositionsInflated(t, h[d - 1])) continue;
              e += ",";
            }
            (e += i.encode(t.generatedColumn - a)),
              (a = t.generatedColumn),
              null != t.source &&
                ((n = this._sources.indexOf(t.source)),
                (e += i.encode(n - f)),
                (f = n),
                (e += i.encode(t.originalLine - 1 - l)),
                (l = t.originalLine - 1),
                (e += i.encode(t.originalColumn - u)),
                (u = t.originalColumn),
                null != t.name &&
                  ((r = this._names.indexOf(t.name)),
                  (e += i.encode(r - c)),
                  (c = r))),
              (p += e);
          }
          return p;
        }),
        (n.prototype._generateSourcesContent = function (e, t) {
          return e.map(function (e) {
            if (!this._sourcesContents) return null;
            null != t && (e = s.relative(t, e));
            var r = s.toSetString(e);
            return Object.prototype.hasOwnProperty.call(
              this._sourcesContents,
              r
            )
              ? this._sourcesContents[r]
              : null;
          }, this);
        }),
        (n.prototype.toJSON = function () {
          var e = {
            version: this._version,
            sources: this._sources.toArray(),
            names: this._names.toArray(),
            mappings: this._serializeMappings(),
          };
          return (
            null != this._file && (e.file = this._file),
            null != this._sourceRoot && (e.sourceRoot = this._sourceRoot),
            this._sourcesContents &&
              (e.sourcesContent = this._generateSourcesContent(
                e.sources,
                e.sourceRoot
              )),
            e
          );
        }),
        (n.prototype.toString = function () {
          return JSON.stringify(this.toJSON());
        }),
        (t.SourceMapGenerator = n);
    },
    function (e, t, r) {
      (t.SourceMapGenerator = r(223).SourceMapGenerator),
        (t.SourceMapConsumer = r(550).SourceMapConsumer),
        (t.SourceNode = r(551).SourceNode);
    },
    function (e, t, r) {
      (function (e) {
        "use strict";
        function t() {
          var e = {
            modifiers: {
              reset: [0, 0],
              bold: [1, 22],
              dim: [2, 22],
              italic: [3, 23],
              underline: [4, 24],
              inverse: [7, 27],
              hidden: [8, 28],
              strikethrough: [9, 29],
            },
            colors: {
              black: [30, 39],
              red: [31, 39],
              green: [32, 39],
              yellow: [33, 39],
              blue: [34, 39],
              magenta: [35, 39],
              cyan: [36, 39],
              white: [37, 39],
              gray: [90, 39],
            },
            bgColors: {
              bgBlack: [40, 49],
              bgRed: [41, 49],
              bgGreen: [42, 49],
              bgYellow: [43, 49],
              bgBlue: [44, 49],
              bgMagenta: [45, 49],
              bgCyan: [46, 49],
              bgWhite: [47, 49],
            },
          };
          return (
            (e.colors.grey = e.colors.gray),
            Object.keys(e).forEach(function (t) {
              var r = e[t];
              Object.keys(r).forEach(function (t) {
                var n = r[t];
                e[t] = r[t] = {
                  open: "[" + n[0] + "m",
                  close: "[" + n[1] + "m",
                };
              }),
                Object.defineProperty(e, t, { value: r, enumerable: !1 });
            }),
            e
          );
        }
        Object.defineProperty(e, "exports", { enumerable: !0, get: t });
      }.call(t, r(63)(e)));
    },
    function (e, t, r) {
      e.exports = r(148);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      t.default = function (e, t) {
        if (e && t)
          return (0, o.default)(e, t, function (e, t) {
            if (t && Array.isArray(e)) {
              for (
                var r = t.slice(0),
                  n = e,
                  i = Array.isArray(n),
                  a = 0,
                  n = i ? n : (0, s.default)(n);
                ;

              ) {
                var o;
                if (i) {
                  if (a >= n.length) break;
                  o = n[a++];
                } else {
                  if (((a = n.next()), a.done)) break;
                  o = a.value;
                }
                var u = o;
                r.indexOf(u) < 0 && r.push(u);
              }
              return r;
            }
          });
      };
      var a = r(526),
        o = n(a);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0),
        (t.default = function (e, t, r) {
          if (e) {
            if ("Program" === e.type) return s.file(e, t || [], r || []);
            if ("File" === e.type) return e;
          }
          throw new Error("Not a valid ast?");
        });
      var i = r(1),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function s(e, t) {
        var r = [],
          n = E.functionExpression(
            null,
            [E.identifier("global")],
            E.blockStatement(r)
          ),
          i = E.program([
            E.expressionStatement(E.callExpression(n, [c.get("selfGlobal")])),
          ]);
        return (
          r.push(
            E.variableDeclaration("var", [
              E.variableDeclarator(
                e,
                E.assignmentExpression(
                  "=",
                  E.memberExpression(E.identifier("global"), e),
                  E.objectExpression([])
                )
              ),
            ])
          ),
          t(r),
          i
        );
      }
      function a(e, t) {
        var r = [];
        return (
          r.push(
            E.variableDeclaration("var", [
              E.variableDeclarator(e, E.identifier("global")),
            ])
          ),
          t(r),
          E.program([
            x({
              FACTORY_PARAMETERS: E.identifier("global"),
              BROWSER_ARGUMENTS: E.assignmentExpression(
                "=",
                E.memberExpression(E.identifier("root"), e),
                E.objectExpression([])
              ),
              COMMON_ARGUMENTS: E.identifier("exports"),
              AMD_ARGUMENTS: E.arrayExpression([E.stringLiteral("exports")]),
              FACTORY_BODY: r,
              UMD_ROOT: E.identifier("this"),
            }),
          ])
        );
      }
      function o(e, t) {
        var r = [];
        return (
          r.push(
            E.variableDeclaration("var", [
              E.variableDeclarator(e, E.objectExpression([])),
            ])
          ),
          t(r),
          r.push(E.expressionStatement(e)),
          E.program(r)
        );
      }
      function u(e, t, r) {
        (0, g.default)(c.list, function (n) {
          if (!(r && r.indexOf(n) < 0)) {
            var i = E.identifier(n);
            e.push(
              E.expressionStatement(
                E.assignmentExpression("=", E.memberExpression(t, i), c.get(n))
              )
            );
          }
        });
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "global",
            r = E.identifier("babelHelpers"),
            n = function (t) {
              return u(t, r, e);
            },
            i = void 0,
            l = { global: s, umd: a, var: o }[t];
          if (!l) throw new Error(d.get("unsupportedOutputType", t));
          return (i = l(r, n)), (0, p.default)(i).code;
        });
      var l = r(155),
        c = i(l),
        f = r(151),
        p = n(f),
        h = r(16),
        d = i(h),
        m = r(12),
        v = n(m),
        y = r(88),
        g = n(y),
        b = r(1),
        E = i(b),
        x = (0, v.default)(
          '\n  (function (root, factory) {\n    if (typeof define === "function" && define.amd) {\n      define(AMD_ARGUMENTS, factory);\n    } else if (typeof exports === "object") {\n      factory(COMMON_ARGUMENTS);\n    } else {\n      factory(BROWSER_ARGUMENTS);\n    }\n  })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n    FACTORY_BODY\n  });\n'
        );
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(65),
        s = n(i),
        a = r(529),
        o = n(a);
      (t.default = new s.default({
        name: "internal.blockHoist",
        visitor: {
          Block: {
            exit: function (e) {
              for (var t = e.node, r = !1, n = 0; n < t.body.length; n++) {
                var i = t.body[n];
                if (i && null != i._blockHoist) {
                  r = !0;
                  break;
                }
              }
              r &&
                (t.body = (0, o.default)(t.body, function (e) {
                  var t = e && e._blockHoist;
                  return null == t && (t = 1), t === !0 && (t = 2), -1 * t;
                }));
            },
          },
        },
      })),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        return !!e.is("_forceShadow") || t;
      }
      function a(e, t) {
        var r = e.inShadow(t);
        if (s(e, r)) {
          var n = e.node._shadowedFunctionLiteral,
            i = void 0,
            a = !1,
            o = e.find(function (t) {
              if (
                t.parentPath &&
                t.parentPath.isClassProperty() &&
                "value" === t.key
              )
                return !0;
              if (e === t) return !1;
              if (
                ((t.isProgram() || t.isFunction()) && (i = i || t),
                t.isProgram())
              )
                return (a = !0), !0;
              if (t.isFunction() && !t.isArrowFunctionExpression()) {
                if (n) {
                  if (t === n || t.node === n.node) return !0;
                } else if (!t.is("shadow")) return !0;
                return (a = !0), !1;
              }
              return !1;
            });
          if (
            (n &&
              o.isProgram() &&
              !n.isProgram() &&
              (o = e.findParent(function (e) {
                return e.isProgram() || e.isFunction();
              })),
            o !== i && a)
          ) {
            var u = o.getData(t);
            if (u) return e.replaceWith(u);
            var l = e.scope.generateUidIdentifier(t);
            o.setData(t, l);
            var c = o.findParent(function (e) {
                return e.isClass();
              }),
              f = !!(c && c.node && c.node.superClass);
            if ("this" === t && o.isMethod({ kind: "constructor" }) && f)
              o.scope.push({ id: l }), o.traverse(d, { id: l });
            else {
              var h = "this" === t ? p.thisExpression() : p.identifier(t);
              n && (h._shadowedFunctionLiteral = n),
                o.scope.push({ id: l, init: h });
            }
            return e.replaceWith(l);
          }
        }
      }
      t.__esModule = !0;
      var o = r(34),
        u = i(o),
        l = r(65),
        c = i(l),
        f = r(1),
        p = n(f),
        h = (0, u.default)("super this bound"),
        d = {
          CallExpression: function (e) {
            if (e.get("callee").isSuper()) {
              var t = e.node;
              t[h] ||
                ((t[h] = !0),
                e.replaceWith(p.assignmentExpression("=", this.id, t)));
            }
          },
        };
      (t.default = new c.default({
        name: "internal.shadowFunctions",
        visitor: {
          ThisExpression: function (e) {
            a(e, "this");
          },
          ReferencedIdentifier: function (e) {
            "arguments" === e.node.name && a(e, "arguments");
          },
        },
      })),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = r(228),
        o = n(a),
        u = r(65),
        l = n(u),
        c = r(47),
        f = n(c),
        p = (function () {
          function e() {
            (0, s.default)(this, e);
          }
          return (
            (e.prototype.lint = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              return (t.code = !1), (t.mode = "lint"), this.transform(e, t);
            }),
            (e.prototype.pretransform = function (e, t) {
              var r = new f.default(t, this);
              return r.wrap(e, function () {
                return r.addCode(e), r.parseCode(e), r;
              });
            }),
            (e.prototype.transform = function (e, t) {
              var r = new f.default(t, this);
              return r.wrap(e, function () {
                return r.addCode(e), r.parseCode(e), r.transform();
              });
            }),
            (e.prototype.analyse = function (e) {
              var t =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {},
                r = arguments[2];
              return (
                (t.code = !1),
                r &&
                  ((t.plugins = t.plugins || []),
                  t.plugins.push(new l.default({ visitor: r }))),
                this.transform(e, t).metadata
              );
            }),
            (e.prototype.transformFromAst = function (e, t, r) {
              e = (0, o.default)(e);
              var n = new f.default(r, this);
              return n.wrap(t, function () {
                return n.addCode(t), n.addAst(e), n.transform();
              });
            }),
            e
          );
        })();
      (t.default = p), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = r(40),
        o = n(a),
        u = r(39),
        l = n(u),
        c = r(94),
        f = n(c),
        p = r(47),
        h =
          (n(p),
          (function (e) {
            function t(r, n) {
              var i =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              (0, s.default)(this, t);
              var a = (0, o.default)(this, e.call(this));
              return (
                (a.plugin = n), (a.key = n.key), (a.file = r), (a.opts = i), a
              );
            }
            return (
              (0, l.default)(t, e),
              (t.prototype.addHelper = function () {
                var e;
                return (e = this.file).addHelper.apply(e, arguments);
              }),
              (t.prototype.addImport = function () {
                var e;
                return (e = this.file).addImport.apply(e, arguments);
              }),
              (t.prototype.getModuleName = function () {
                var e;
                return (e = this.file).getModuleName.apply(e, arguments);
              }),
              (t.prototype.buildCodeFrameError = function () {
                var e;
                return (e = this.file).buildCodeFrameError.apply(e, arguments);
              }),
              t
            );
          })(f.default));
      (t.default = h), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = r(535),
        o = n(a),
        u = /^[ \t]+$/,
        l = (function () {
          function e(t) {
            (0, s.default)(this, e),
              (this._map = null),
              (this._buf = []),
              (this._last = ""),
              (this._queue = []),
              (this._position = { line: 1, column: 0 }),
              (this._sourcePosition = {
                identifierName: null,
                line: null,
                column: null,
                filename: null,
              }),
              (this._map = t);
          }
          return (
            (e.prototype.get = function () {
              return (
                this._flush(),
                {
                  code: (0, o.default)(this._buf.join("")),
                  map: this._map ? this._map.get() : null,
                }
              );
            }),
            (e.prototype.append = function (e) {
              this._flush();
              var t = this._sourcePosition,
                r = t.line,
                n = t.column,
                i = t.filename,
                s = t.identifierName;
              this._append(e, r, n, s, i);
            }),
            (e.prototype.queue = function (e) {
              if ("\n" === e)
                for (; this._queue.length > 0 && u.test(this._queue[0][0]); )
                  this._queue.shift();
              var t = this._sourcePosition,
                r = t.line,
                n = t.column,
                i = t.filename,
                s = t.identifierName;
              this._queue.unshift([e, r, n, s, i]);
            }),
            (e.prototype._flush = function () {
              for (var e = void 0; (e = this._queue.pop()); )
                this._append.apply(this, e);
            }),
            (e.prototype._append = function (e, t, r, n, i) {
              this._map &&
                "\n" !== e[0] &&
                this._map.mark(
                  this._position.line,
                  this._position.column,
                  t,
                  r,
                  n,
                  i
                ),
                this._buf.push(e),
                (this._last = e[e.length - 1]);
              for (var s = 0; s < e.length; s++)
                "\n" === e[s]
                  ? (this._position.line++, (this._position.column = 0))
                  : this._position.column++;
            }),
            (e.prototype.removeTrailingNewline = function () {
              this._queue.length > 0 &&
                "\n" === this._queue[0][0] &&
                this._queue.shift();
            }),
            (e.prototype.removeLastSemicolon = function () {
              this._queue.length > 0 &&
                ";" === this._queue[0][0] &&
                this._queue.shift();
            }),
            (e.prototype.endsWith = function (e) {
              if (1 === e.length) {
                var t = void 0;
                if (this._queue.length > 0) {
                  var r = this._queue[0][0];
                  t = r[r.length - 1];
                } else t = this._last;
                return t === e;
              }
              var n =
                this._last +
                this._queue.reduce(function (e, t) {
                  return t[0] + e;
                }, "");
              return e.length <= n.length && n.slice(-e.length) === e;
            }),
            (e.prototype.hasContent = function () {
              return this._queue.length > 0 || !!this._last;
            }),
            (e.prototype.source = function (e, t) {
              if (!e || t) {
                var r = t ? t[e] : null;
                (this._sourcePosition.identifierName =
                  (t && t.identifierName) || null),
                  (this._sourcePosition.line = r ? r.line : null),
                  (this._sourcePosition.column = r ? r.column : null),
                  (this._sourcePosition.filename = (t && t.filename) || null);
              }
            }),
            (e.prototype.withSource = function (e, t, r) {
              if (!this._map) return r();
              var n = this._sourcePosition.line,
                i = this._sourcePosition.column,
                s = this._sourcePosition.filename,
                a = this._sourcePosition.identifierName;
              this.source(e, t),
                r(),
                (this._sourcePosition.line = n),
                (this._sourcePosition.column = i),
                (this._sourcePosition.filename = s),
                (this._sourcePosition.identifierName = a);
            }),
            (e.prototype.getCurrentColumn = function () {
              var e = this._queue.reduce(function (e, t) {
                  return t[0] + e;
                }, ""),
                t = e.lastIndexOf("\n");
              return t === -1
                ? this._position.column + e.length
                : e.length - 1 - t;
            }),
            (e.prototype.getCurrentLine = function () {
              for (
                var e = this._queue.reduce(function (e, t) {
                    return t[0] + e;
                  }, ""),
                  t = 0,
                  r = 0;
                r < e.length;
                r++
              )
                "\n" === e[r] && t++;
              return this._position.line + t;
            }),
            e
          );
        })();
      (t.default = l), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        this.print(e.program, e);
      }
      function i(e) {
        this.printInnerComments(e, !1),
          this.printSequence(e.directives, e),
          e.directives && e.directives.length && this.newline(),
          this.printSequence(e.body, e);
      }
      function s(e) {
        this.token("{"),
          this.printInnerComments(e),
          e.body.length
            ? (this.newline(),
              this.printSequence(e.directives, e, { indent: !0 }),
              e.directives && e.directives.length && this.newline(),
              this.printSequence(e.body, e, { indent: !0 }),
              this.removeTrailingNewline(),
              this.source("end", e.loc),
              this.endsWith("\n") || this.newline(),
              this.rightBrace())
            : (this.source("end", e.loc), this.token("}"));
      }
      function a() {}
      function o(e) {
        this.print(e.value, e), this.semicolon();
      }
      (t.__esModule = !0),
        (t.File = n),
        (t.Program = i),
        (t.BlockStatement = s),
        (t.Noop = a),
        (t.Directive = o);
      var u = r(98);
      Object.defineProperty(t, "DirectiveLiteral", {
        enumerable: !0,
        get: function () {
          return u.StringLiteral;
        },
      });
    },
    function (e, t) {
      "use strict";
      function r(e) {
        this.printJoin(e.decorators, e),
          this.word("class"),
          e.id && (this.space(), this.print(e.id, e)),
          this.print(e.typeParameters, e),
          e.superClass &&
            (this.space(),
            this.word("extends"),
            this.space(),
            this.print(e.superClass, e),
            this.print(e.superTypeParameters, e)),
          e.implements &&
            (this.space(),
            this.word("implements"),
            this.space(),
            this.printList(e.implements, e)),
          this.space(),
          this.print(e.body, e);
      }
      function n(e) {
        this.token("{"),
          this.printInnerComments(e),
          0 === e.body.length
            ? this.token("}")
            : (this.newline(),
              this.indent(),
              this.printSequence(e.body, e),
              this.dedent(),
              this.endsWith("\n") || this.newline(),
              this.rightBrace());
      }
      function i(e) {
        this.printJoin(e.decorators, e),
          e.static && (this.word("static"), this.space()),
          e.computed
            ? (this.token("["), this.print(e.key, e), this.token("]"))
            : (this._variance(e), this.print(e.key, e)),
          this.print(e.typeAnnotation, e),
          e.value &&
            (this.space(),
            this.token("="),
            this.space(),
            this.print(e.value, e)),
          this.semicolon();
      }
      function s(e) {
        this.printJoin(e.decorators, e),
          e.static && (this.word("static"), this.space()),
          "constructorCall" === e.kind && (this.word("call"), this.space()),
          this._method(e);
      }
      (t.__esModule = !0),
        (t.ClassDeclaration = r),
        (t.ClassBody = n),
        (t.ClassProperty = i),
        (t.ClassMethod = s),
        (t.ClassExpression = r);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        "void" === e.operator ||
        "delete" === e.operator ||
        "typeof" === e.operator
          ? (this.word(e.operator), this.space())
          : this.token(e.operator),
          this.print(e.argument, e);
      }
      function a(e) {
        this.word("do"), this.space(), this.print(e.body, e);
      }
      function o(e) {
        this.token("("), this.print(e.expression, e), this.token(")");
      }
      function u(e) {
        e.prefix
          ? (this.token(e.operator), this.print(e.argument, e))
          : (this.print(e.argument, e), this.token(e.operator));
      }
      function l(e) {
        this.print(e.test, e),
          this.space(),
          this.token("?"),
          this.space(),
          this.print(e.consequent, e),
          this.space(),
          this.token(":"),
          this.space(),
          this.print(e.alternate, e);
      }
      function c(e, t) {
        this.word("new"),
          this.space(),
          this.print(e.callee, e),
          (0 !== e.arguments.length ||
            !this.format.minified ||
            k.isCallExpression(t, { callee: e }) ||
            k.isMemberExpression(t) ||
            k.isNewExpression(t)) &&
            (this.token("("), this.printList(e.arguments, e), this.token(")"));
      }
      function f(e) {
        this.printList(e.expressions, e);
      }
      function p() {
        this.word("this");
      }
      function h() {
        this.word("super");
      }
      function d(e) {
        this.token("@"), this.print(e.expression, e), this.newline();
      }
      function m() {
        this.token(","), this.newline(), this.endsWith("\n") || this.space();
      }
      function v(e) {
        this.print(e.callee, e), this.token("(");
        var t = e._prettyCall,
          r = void 0;
        t && ((r = m), this.newline(), this.indent()),
          this.printList(e.arguments, e, { separator: r }),
          t && (this.newline(), this.dedent()),
          this.token(")");
      }
      function y() {
        this.word("import");
      }
      function g(e) {
        return function (t) {
          if ((this.word(e), t.delegate && this.token("*"), t.argument)) {
            this.space();
            var r = this.startTerminatorless();
            this.print(t.argument, t), this.endTerminatorless(r);
          }
        };
      }
      function b() {
        this.semicolon(!0);
      }
      function E(e) {
        this.print(e.expression, e), this.semicolon();
      }
      function x(e) {
        this.print(e.left, e),
          this.space(),
          this.token("="),
          this.space(),
          this.print(e.right, e);
      }
      function A(e, t) {
        var r =
          this.inForStatementInitCounter &&
          "in" === e.operator &&
          !T.needsParens(e, t);
        r && this.token("("),
          this.print(e.left, e),
          this.space(),
          "in" === e.operator || "instanceof" === e.operator
            ? this.word(e.operator)
            : this.token(e.operator),
          this.space(),
          this.print(e.right, e),
          r && this.token(")");
      }
      function D(e) {
        this.print(e.object, e), this.token("::"), this.print(e.callee, e);
      }
      function C(e) {
        if (
          (this.print(e.object, e),
          !e.computed && k.isMemberExpression(e.property))
        )
          throw new TypeError(
            "Got a MemberExpression for MemberExpression property"
          );
        var t = e.computed;
        k.isLiteral(e.property) && (0, w.default)(e.property.value) && (t = !0),
          t
            ? (this.token("["), this.print(e.property, e), this.token("]"))
            : (this.token("."), this.print(e.property, e));
      }
      function S(e) {
        this.print(e.meta, e), this.token("."), this.print(e.property, e);
      }
      (t.__esModule = !0),
        (t.LogicalExpression = t.BinaryExpression = t.AwaitExpression = t.YieldExpression = void 0),
        (t.UnaryExpression = s),
        (t.DoExpression = a),
        (t.ParenthesizedExpression = o),
        (t.UpdateExpression = u),
        (t.ConditionalExpression = l),
        (t.NewExpression = c),
        (t.SequenceExpression = f),
        (t.ThisExpression = p),
        (t.Super = h),
        (t.Decorator = d),
        (t.CallExpression = v),
        (t.Import = y),
        (t.EmptyStatement = b),
        (t.ExpressionStatement = E),
        (t.AssignmentPattern = x),
        (t.AssignmentExpression = A),
        (t.BindExpression = D),
        (t.MemberExpression = C),
        (t.MetaProperty = S);
      var _ = r(211),
        w = i(_),
        F = r(1),
        k = n(F),
        P = r(152),
        T = n(P);
      (t.YieldExpression = g("yield")), (t.AwaitExpression = g("await"));
      (t.BinaryExpression = A), (t.LogicalExpression = A);
    },
    function (e, t, r) {
      "use strict";
      function n() {
        this.word("any");
      }
      function i(e) {
        this.print(e.elementType, e), this.token("["), this.token("]");
      }
      function s() {
        this.word("boolean");
      }
      function a(e) {
        this.word(e.value ? "true" : "false");
      }
      function o() {
        this.word("null");
      }
      function u(e) {
        this.word("declare"),
          this.space(),
          this.word("class"),
          this.space(),
          this._interfaceish(e);
      }
      function l(e) {
        this.word("declare"),
          this.space(),
          this.word("function"),
          this.space(),
          this.print(e.id, e),
          this.print(e.id.typeAnnotation.typeAnnotation, e),
          this.semicolon();
      }
      function c(e) {
        this.word("declare"), this.space(), this.InterfaceDeclaration(e);
      }
      function f(e) {
        this.word("declare"),
          this.space(),
          this.word("module"),
          this.space(),
          this.print(e.id, e),
          this.space(),
          this.print(e.body, e);
      }
      function p(e) {
        this.word("declare"),
          this.space(),
          this.word("module"),
          this.token("."),
          this.word("exports"),
          this.print(e.typeAnnotation, e);
      }
      function h(e) {
        this.word("declare"), this.space(), this.TypeAlias(e);
      }
      function d(e) {
        this.word("declare"),
          this.space(),
          this.word("var"),
          this.space(),
          this.print(e.id, e),
          this.print(e.id.typeAnnotation, e),
          this.semicolon();
      }
      function m() {
        this.token("*");
      }
      function v(e, t) {
        this.print(e.typeParameters, e),
          this.token("("),
          this.printList(e.params, e),
          e.rest &&
            (e.params.length && (this.token(","), this.space()),
            this.token("..."),
            this.print(e.rest, e)),
          this.token(")"),
          "ObjectTypeCallProperty" === t.type || "DeclareFunction" === t.type
            ? this.token(":")
            : (this.space(), this.token("=>")),
          this.space(),
          this.print(e.returnType, e);
      }
      function y(e) {
        this.print(e.name, e),
          e.optional && this.token("?"),
          this.token(":"),
          this.space(),
          this.print(e.typeAnnotation, e);
      }
      function g(e) {
        this.print(e.id, e), this.print(e.typeParameters, e);
      }
      function b(e) {
        this.print(e.id, e),
          this.print(e.typeParameters, e),
          e.extends.length &&
            (this.space(),
            this.word("extends"),
            this.space(),
            this.printList(e.extends, e)),
          e.mixins &&
            e.mixins.length &&
            (this.space(),
            this.word("mixins"),
            this.space(),
            this.printList(e.mixins, e)),
          this.space(),
          this.print(e.body, e);
      }
      function E(e) {
        "plus" === e.variance
          ? this.token("+")
          : "minus" === e.variance && this.token("-");
      }
      function x(e) {
        this.word("interface"), this.space(), this._interfaceish(e);
      }
      function A() {
        this.space(), this.token("&"), this.space();
      }
      function D(e) {
        this.printJoin(e.types, e, { separator: A });
      }
      function C() {
        this.word("mixed");
      }
      function S() {
        this.word("empty");
      }
      function _(e) {
        this.token("?"), this.print(e.typeAnnotation, e);
      }
      function w() {
        this.word("number");
      }
      function F() {
        this.word("string");
      }
      function k() {
        this.word("this");
      }
      function P(e) {
        this.token("["), this.printList(e.types, e), this.token("]");
      }
      function T(e) {
        this.word("typeof"), this.space(), this.print(e.argument, e);
      }
      function O(e) {
        this.word("type"),
          this.space(),
          this.print(e.id, e),
          this.print(e.typeParameters, e),
          this.space(),
          this.token("="),
          this.space(),
          this.print(e.right, e),
          this.semicolon();
      }
      function B(e) {
        this.token(":"),
          this.space(),
          e.optional && this.token("?"),
          this.print(e.typeAnnotation, e);
      }
      function I(e) {
        this._variance(e),
          this.word(e.name),
          e.bound && this.print(e.bound, e),
          e.default &&
            (this.space(),
            this.token("="),
            this.space(),
            this.print(e.default, e));
      }
      function N(e) {
        this.token("<"), this.printList(e.params, e, {}), this.token(">");
      }
      function M(e) {
        var t = this;
        e.exact ? this.token("{|") : this.token("{");
        var r = e.properties.concat(e.callProperties, e.indexers);
        r.length &&
          (this.space(),
          this.printJoin(r, e, {
            addNewlines: function (e) {
              if (e && !r[0]) return 1;
            },
            indent: !0,
            statement: !0,
            iterator: function () {
              1 !== r.length &&
                (t.format.flowCommaSeparator ? t.token(",") : t.semicolon(),
                t.space());
            },
          }),
          this.space()),
          e.exact ? this.token("|}") : this.token("}");
      }
      function R(e) {
        e.static && (this.word("static"), this.space()), this.print(e.value, e);
      }
      function L(e) {
        e.static && (this.word("static"), this.space()),
          this._variance(e),
          this.token("["),
          this.print(e.id, e),
          this.token(":"),
          this.space(),
          this.print(e.key, e),
          this.token("]"),
          this.token(":"),
          this.space(),
          this.print(e.value, e);
      }
      function j(e) {
        e.static && (this.word("static"), this.space()),
          this._variance(e),
          this.print(e.key, e),
          e.optional && this.token("?"),
          this.token(":"),
          this.space(),
          this.print(e.value, e);
      }
      function V(e) {
        this.print(e.qualification, e), this.token("."), this.print(e.id, e);
      }
      function U() {
        this.space(), this.token("|"), this.space();
      }
      function G(e) {
        this.printJoin(e.types, e, { separator: U });
      }
      function W(e) {
        this.token("("),
          this.print(e.expression, e),
          this.print(e.typeAnnotation, e),
          this.token(")");
      }
      function Y() {
        this.word("void");
      }
      (t.__esModule = !0),
        (t.AnyTypeAnnotation = n),
        (t.ArrayTypeAnnotation = i),
        (t.BooleanTypeAnnotation = s),
        (t.BooleanLiteralTypeAnnotation = a),
        (t.NullLiteralTypeAnnotation = o),
        (t.DeclareClass = u),
        (t.DeclareFunction = l),
        (t.DeclareInterface = c),
        (t.DeclareModule = f),
        (t.DeclareModuleExports = p),
        (t.DeclareTypeAlias = h),
        (t.DeclareVariable = d),
        (t.ExistentialTypeParam = m),
        (t.FunctionTypeAnnotation = v),
        (t.FunctionTypeParam = y),
        (t.InterfaceExtends = g),
        (t._interfaceish = b),
        (t._variance = E),
        (t.InterfaceDeclaration = x),
        (t.IntersectionTypeAnnotation = D),
        (t.MixedTypeAnnotation = C),
        (t.EmptyTypeAnnotation = S),
        (t.NullableTypeAnnotation = _);
      var q = r(98);
      Object.defineProperty(t, "NumericLiteralTypeAnnotation", {
        enumerable: !0,
        get: function () {
          return q.NumericLiteral;
        },
      }),
        Object.defineProperty(t, "StringLiteralTypeAnnotation", {
          enumerable: !0,
          get: function () {
            return q.StringLiteral;
          },
        }),
        (t.NumberTypeAnnotation = w),
        (t.StringTypeAnnotation = F),
        (t.ThisTypeAnnotation = k),
        (t.TupleTypeAnnotation = P),
        (t.TypeofTypeAnnotation = T),
        (t.TypeAlias = O),
        (t.TypeAnnotation = B),
        (t.TypeParameter = I),
        (t.TypeParameterInstantiation = N),
        (t.ObjectTypeAnnotation = M),
        (t.ObjectTypeCallProperty = R),
        (t.ObjectTypeIndexer = L),
        (t.ObjectTypeProperty = j),
        (t.QualifiedTypeIdentifier = V),
        (t.UnionTypeAnnotation = G),
        (t.TypeCastExpression = W),
        (t.VoidTypeAnnotation = Y),
        (t.ClassImplements = g),
        (t.GenericTypeAnnotation = g),
        (t.TypeParameterDeclaration = N);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        this.print(e.name, e),
          e.value && (this.token("="), this.print(e.value, e));
      }
      function s(e) {
        this.word(e.name);
      }
      function a(e) {
        this.print(e.namespace, e), this.token(":"), this.print(e.name, e);
      }
      function o(e) {
        this.print(e.object, e), this.token("."), this.print(e.property, e);
      }
      function u(e) {
        this.token("{"),
          this.token("..."),
          this.print(e.argument, e),
          this.token("}");
      }
      function l(e) {
        this.token("{"), this.print(e.expression, e), this.token("}");
      }
      function c(e) {
        this.token(e.value);
      }
      function f(e) {
        var t = e.openingElement;
        if ((this.print(t, e), !t.selfClosing)) {
          this.indent();
          for (
            var r = e.children,
              n = Array.isArray(r),
              i = 0,
              r = n ? r : (0, y.default)(r);
            ;

          ) {
            var s;
            if (n) {
              if (i >= r.length) break;
              s = r[i++];
            } else {
              if (((i = r.next()), i.done)) break;
              s = i.value;
            }
            var a = s;
            this.print(a, e);
          }
          this.dedent(), this.print(e.closingElement, e);
        }
      }
      function p() {
        this.space();
      }
      function h(e) {
        this.token("<"),
          this.print(e.name, e),
          e.attributes.length > 0 &&
            (this.space(), this.printJoin(e.attributes, e, { separator: p })),
          e.selfClosing ? (this.space(), this.token("/>")) : this.token(">");
      }
      function d(e) {
        this.token("</"), this.print(e.name, e), this.token(">");
      }
      function m() {}
      t.__esModule = !0;
      var v = r(2),
        y = n(v);
      (t.JSXAttribute = i),
        (t.JSXIdentifier = s),
        (t.JSXNamespacedName = a),
        (t.JSXMemberExpression = o),
        (t.JSXSpreadAttribute = u),
        (t.JSXExpressionContainer = l),
        (t.JSXText = c),
        (t.JSXElement = f),
        (t.JSXOpeningElement = h),
        (t.JSXClosingElement = d),
        (t.JSXEmptyExpression = m);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        var t = this;
        this.print(e.typeParameters, e),
          this.token("("),
          this.printList(e.params, e, {
            iterator: function (e) {
              e.optional && t.token("?"), t.print(e.typeAnnotation, e);
            },
          }),
          this.token(")"),
          e.returnType && this.print(e.returnType, e);
      }
      function s(e) {
        var t = e.kind,
          r = e.key;
        ("method" !== t && "init" !== t) || (e.generator && this.token("*")),
          ("get" !== t && "set" !== t) || (this.word(t), this.space()),
          e.async && (this.word("async"), this.space()),
          e.computed
            ? (this.token("["), this.print(r, e), this.token("]"))
            : this.print(r, e),
          this._params(e),
          this.space(),
          this.print(e.body, e);
      }
      function a(e) {
        e.async && (this.word("async"), this.space()),
          this.word("function"),
          e.generator && this.token("*"),
          e.id ? (this.space(), this.print(e.id, e)) : this.space(),
          this._params(e),
          this.space(),
          this.print(e.body, e);
      }
      function o(e) {
        e.async && (this.word("async"), this.space());
        var t = e.params[0];
        1 === e.params.length && c.isIdentifier(t) && !u(e, t)
          ? this.print(t, e)
          : this._params(e),
          this.space(),
          this.token("=>"),
          this.space(),
          this.print(e.body, e);
      }
      function u(e, t) {
        return (
          e.typeParameters ||
          e.returnType ||
          t.typeAnnotation ||
          t.optional ||
          t.trailingComments
        );
      }
      (t.__esModule = !0),
        (t.FunctionDeclaration = void 0),
        (t._params = i),
        (t._method = s),
        (t.FunctionExpression = a),
        (t.ArrowFunctionExpression = o);
      var l = r(1),
        c = n(l);
      t.FunctionDeclaration = a;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        this.print(e.imported, e),
          e.local &&
            e.local.name !== e.imported.name &&
            (this.space(),
            this.word("as"),
            this.space(),
            this.print(e.local, e));
      }
      function s(e) {
        this.print(e.local, e);
      }
      function a(e) {
        this.print(e.exported, e);
      }
      function o(e) {
        this.print(e.local, e),
          e.exported &&
            e.local.name !== e.exported.name &&
            (this.space(),
            this.word("as"),
            this.space(),
            this.print(e.exported, e));
      }
      function u(e) {
        this.token("*"),
          this.space(),
          this.word("as"),
          this.space(),
          this.print(e.exported, e);
      }
      function l(e) {
        this.word("export"),
          this.space(),
          this.token("*"),
          e.exported &&
            (this.space(),
            this.word("as"),
            this.space(),
            this.print(e.exported, e)),
          this.space(),
          this.word("from"),
          this.space(),
          this.print(e.source, e),
          this.semicolon();
      }
      function c() {
        this.word("export"), this.space(), p.apply(this, arguments);
      }
      function f() {
        this.word("export"),
          this.space(),
          this.word("default"),
          this.space(),
          p.apply(this, arguments);
      }
      function p(e) {
        if (e.declaration) {
          var t = e.declaration;
          this.print(t, e), v.isStatement(t) || this.semicolon();
        } else {
          "type" === e.exportKind && (this.word("type"), this.space());
          for (var r = e.specifiers.slice(0), n = !1; ; ) {
            var i = r[0];
            if (
              !v.isExportDefaultSpecifier(i) &&
              !v.isExportNamespaceSpecifier(i)
            )
              break;
            (n = !0),
              this.print(r.shift(), e),
              r.length && (this.token(","), this.space());
          }
          (r.length || (!r.length && !n)) &&
            (this.token("{"),
            r.length && (this.space(), this.printList(r, e), this.space()),
            this.token("}")),
            e.source &&
              (this.space(),
              this.word("from"),
              this.space(),
              this.print(e.source, e)),
            this.semicolon();
        }
      }
      function h(e) {
        this.word("import"),
          this.space(),
          ("type" !== e.importKind && "typeof" !== e.importKind) ||
            (this.word(e.importKind), this.space());
        var t = e.specifiers.slice(0);
        if (t && t.length) {
          for (;;) {
            var r = t[0];
            if (
              !v.isImportDefaultSpecifier(r) &&
              !v.isImportNamespaceSpecifier(r)
            )
              break;
            this.print(t.shift(), e),
              t.length && (this.token(","), this.space());
          }
          t.length &&
            (this.token("{"),
            this.space(),
            this.printList(t, e),
            this.space(),
            this.token("}")),
            this.space(),
            this.word("from"),
            this.space();
        }
        this.print(e.source, e), this.semicolon();
      }
      function d(e) {
        this.token("*"),
          this.space(),
          this.word("as"),
          this.space(),
          this.print(e.local, e);
      }
      (t.__esModule = !0),
        (t.ImportSpecifier = i),
        (t.ImportDefaultSpecifier = s),
        (t.ExportDefaultSpecifier = a),
        (t.ExportSpecifier = o),
        (t.ExportNamespaceSpecifier = u),
        (t.ExportAllDeclaration = l),
        (t.ExportNamedDeclaration = c),
        (t.ExportDefaultDeclaration = f),
        (t.ImportDeclaration = h),
        (t.ImportNamespaceSpecifier = d);
      var m = r(1),
        v = n(m);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        this.word("with"),
          this.space(),
          this.token("("),
          this.print(e.object, e),
          this.token(")"),
          this.printBlock(e);
      }
      function a(e) {
        this.word("if"),
          this.space(),
          this.token("("),
          this.print(e.test, e),
          this.token(")"),
          this.space();
        var t = e.alternate && S.isIfStatement(o(e.consequent));
        t && (this.token("{"), this.newline(), this.indent()),
          this.printAndIndentOnComments(e.consequent, e),
          t && (this.dedent(), this.newline(), this.token("}")),
          e.alternate &&
            (this.endsWith("}") && this.space(),
            this.word("else"),
            this.space(),
            this.printAndIndentOnComments(e.alternate, e));
      }
      function o(e) {
        return S.isStatement(e.body) ? o(e.body) : e;
      }
      function u(e) {
        this.word("for"),
          this.space(),
          this.token("("),
          this.inForStatementInitCounter++,
          this.print(e.init, e),
          this.inForStatementInitCounter--,
          this.token(";"),
          e.test && (this.space(), this.print(e.test, e)),
          this.token(";"),
          e.update && (this.space(), this.print(e.update, e)),
          this.token(")"),
          this.printBlock(e);
      }
      function l(e) {
        this.word("while"),
          this.space(),
          this.token("("),
          this.print(e.test, e),
          this.token(")"),
          this.printBlock(e);
      }
      function c(e) {
        this.word("do"),
          this.space(),
          this.print(e.body, e),
          this.space(),
          this.word("while"),
          this.space(),
          this.token("("),
          this.print(e.test, e),
          this.token(")"),
          this.semicolon();
      }
      function f(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : "label";
        return function (r) {
          this.word(e);
          var n = r[t];
          if (n) {
            this.space();
            var i = this.startTerminatorless();
            this.print(n, r), this.endTerminatorless(i);
          }
          this.semicolon();
        };
      }
      function p(e) {
        this.print(e.label, e),
          this.token(":"),
          this.space(),
          this.print(e.body, e);
      }
      function h(e) {
        this.word("try"),
          this.space(),
          this.print(e.block, e),
          this.space(),
          e.handlers ? this.print(e.handlers[0], e) : this.print(e.handler, e),
          e.finalizer &&
            (this.space(),
            this.word("finally"),
            this.space(),
            this.print(e.finalizer, e));
      }
      function d(e) {
        this.word("catch"),
          this.space(),
          this.token("("),
          this.print(e.param, e),
          this.token(")"),
          this.space(),
          this.print(e.body, e);
      }
      function m(e) {
        this.word("switch"),
          this.space(),
          this.token("("),
          this.print(e.discriminant, e),
          this.token(")"),
          this.space(),
          this.token("{"),
          this.printSequence(e.cases, e, {
            indent: !0,
            addNewlines: function (t, r) {
              if (!t && e.cases[e.cases.length - 1] === r) return -1;
            },
          }),
          this.token("}");
      }
      function v(e) {
        e.test
          ? (this.word("case"),
            this.space(),
            this.print(e.test, e),
            this.token(":"))
          : (this.word("default"), this.token(":")),
          e.consequent.length &&
            (this.newline(),
            this.printSequence(e.consequent, e, { indent: !0 }));
      }
      function y() {
        this.word("debugger"), this.semicolon();
      }
      function g() {
        if ((this.token(","), this.newline(), this.endsWith("\n")))
          for (var e = 0; e < 4; e++) this.space(!0);
      }
      function b() {
        if ((this.token(","), this.newline(), this.endsWith("\n")))
          for (var e = 0; e < 6; e++) this.space(!0);
      }
      function E(e, t) {
        this.word(e.kind), this.space();
        var r = !1;
        if (!S.isFor(t))
          for (
            var n = e.declarations,
              i = Array.isArray(n),
              s = 0,
              n = i ? n : (0, D.default)(n);
            ;

          ) {
            var a;
            if (i) {
              if (s >= n.length) break;
              a = n[s++];
            } else {
              if (((s = n.next()), s.done)) break;
              a = s.value;
            }
            var o = a;
            o.init && (r = !0);
          }
        var u = void 0;
        r && (u = "const" === e.kind ? b : g),
          this.printList(e.declarations, e, { separator: u }),
          (!S.isFor(t) || (t.left !== e && t.init !== e)) && this.semicolon();
      }
      function x(e) {
        this.print(e.id, e),
          this.print(e.id.typeAnnotation, e),
          e.init &&
            (this.space(),
            this.token("="),
            this.space(),
            this.print(e.init, e));
      }
      (t.__esModule = !0),
        (t.ThrowStatement = t.BreakStatement = t.ReturnStatement = t.ContinueStatement = t.ForAwaitStatement = t.ForOfStatement = t.ForInStatement = void 0);
      var A = r(2),
        D = i(A);
      (t.WithStatement = s),
        (t.IfStatement = a),
        (t.ForStatement = u),
        (t.WhileStatement = l),
        (t.DoWhileStatement = c),
        (t.LabeledStatement = p),
        (t.TryStatement = h),
        (t.CatchClause = d),
        (t.SwitchStatement = m),
        (t.SwitchCase = v),
        (t.DebuggerStatement = y),
        (t.VariableDeclaration = E),
        (t.VariableDeclarator = x);
      var C = r(1),
        S = n(C),
        _ = function (e) {
          return function (t) {
            this.word("for"),
              this.space(),
              "await" === e && (this.word("await"), this.space(), (e = "of")),
              this.token("("),
              this.print(t.left, t),
              this.space(),
              this.word(e),
              this.space(),
              this.print(t.right, t),
              this.token(")"),
              this.printBlock(t);
          };
        };
      (t.ForInStatement = _("in")),
        (t.ForOfStatement = _("of")),
        (t.ForAwaitStatement = _("await")),
        (t.ContinueStatement = f("continue")),
        (t.ReturnStatement = f("return", "argument")),
        (t.BreakStatement = f("break")),
        (t.ThrowStatement = f("throw", "argument"));
    },
    function (e, t) {
      "use strict";
      function r(e) {
        this.print(e.tag, e), this.print(e.quasi, e);
      }
      function n(e, t) {
        var r = t.quasis[0] === e,
          n = t.quasis[t.quasis.length - 1] === e,
          i = (r ? "`" : "}") + e.value.raw + (n ? "`" : "${");
        r || this.space(), this.token(i), n || this.space();
      }
      function i(e) {
        for (var t = e.quasis, r = 0; r < t.length; r++)
          this.print(t[r], e),
            r + 1 < t.length && this.print(e.expressions[r], e);
      }
      (t.__esModule = !0),
        (t.TaggedTemplateExpression = r),
        (t.TemplateElement = n),
        (t.TemplateLiteral = i);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e, t) {
        return b.isArrayTypeAnnotation(t);
      }
      function s(e, t) {
        return !(!b.isMemberExpression(t) || t.object !== e);
      }
      function a(e, t, r) {
        return y(r, { considerArrow: !0 });
      }
      function o(e, t) {
        if ((b.isCallExpression(t) || b.isNewExpression(t)) && t.callee === e)
          return !0;
        if (b.isUnaryLike(t)) return !0;
        if (b.isMemberExpression(t) && t.object === e) return !0;
        if (b.isBinary(t)) {
          var r = t.operator,
            n = E[r],
            i = e.operator,
            s = E[i];
          if (n > s) return !0;
          if (n === s && t.right === e && !b.isLogicalExpression(t)) return !0;
        }
        return !1;
      }
      function u(e, t) {
        if ("in" === e.operator) {
          if (b.isVariableDeclarator(t)) return !0;
          if (b.isFor(t)) return !0;
        }
        return !1;
      }
      function l(e, t) {
        return (
          !b.isForStatement(t) &&
          (!b.isExpressionStatement(t) || t.expression !== e) &&
          !b.isReturnStatement(t) &&
          !b.isThrowStatement(t) &&
          (!b.isSwitchStatement(t) || t.discriminant !== e) &&
          (!b.isWhileStatement(t) || t.test !== e) &&
          (!b.isIfStatement(t) || t.test !== e) &&
          (!b.isForInStatement(t) || t.right !== e)
        );
      }
      function c(e, t) {
        return (
          b.isBinary(t) ||
          b.isUnaryLike(t) ||
          b.isCallExpression(t) ||
          b.isMemberExpression(t) ||
          b.isNewExpression(t) ||
          (b.isConditionalExpression(t) && e === t.test)
        );
      }
      function f(e, t, r) {
        return y(r, { considerDefaultExports: !0 });
      }
      function p(e, t) {
        return (
          !!b.isMemberExpression(t, { object: e }) ||
          !(
            !b.isCallExpression(t, { callee: e }) &&
            !b.isNewExpression(t, { callee: e })
          )
        );
      }
      function h(e, t, r) {
        return y(r, { considerDefaultExports: !0 });
      }
      function d(e, t) {
        return (
          !!b.isExportDeclaration(t) ||
          !(!b.isBinaryExpression(t) && !b.isLogicalExpression(t)) ||
          !!b.isUnaryExpression(t) ||
          p(e, t)
        );
      }
      function m(e, t) {
        return (
          !!b.isUnaryLike(t) ||
          !!b.isBinary(t) ||
          !!b.isConditionalExpression(t, { test: e }) ||
          p(e, t)
        );
      }
      function v(e) {
        return !!b.isObjectPattern(e.left) || m.apply(void 0, arguments);
      }
      function y(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          r = t.considerArrow,
          n = void 0 !== r && r,
          i = t.considerDefaultExports,
          s = void 0 !== i && i,
          a = e.length - 1,
          o = e[a];
        a--;
        for (var u = e[a]; a > 0; ) {
          if (b.isExpressionStatement(u, { expression: o })) return !0;
          if (s && b.isExportDefaultDeclaration(u, { declaration: o }))
            return !0;
          if (n && b.isArrowFunctionExpression(u, { body: o })) return !0;
          if (
            !(
              b.isCallExpression(u, { callee: o }) ||
              (b.isSequenceExpression(u) && u.expressions[0] === o) ||
              b.isMemberExpression(u, { object: o }) ||
              b.isConditional(u, { test: o }) ||
              b.isBinary(u, { left: o }) ||
              b.isAssignmentExpression(u, { left: o })
            )
          )
            return !1;
          (o = u), a--, (u = e[a]);
        }
        return !1;
      }
      (t.__esModule = !0),
        (t.AwaitExpression = t.FunctionTypeAnnotation = void 0),
        (t.NullableTypeAnnotation = i),
        (t.UpdateExpression = s),
        (t.ObjectExpression = a),
        (t.Binary = o),
        (t.BinaryExpression = u),
        (t.SequenceExpression = l),
        (t.YieldExpression = c),
        (t.ClassExpression = f),
        (t.UnaryLike = p),
        (t.FunctionExpression = h),
        (t.ArrowFunctionExpression = d),
        (t.ConditionalExpression = m),
        (t.AssignmentExpression = v);
      var g = r(1),
        b = n(g),
        E = {
          "||": 0,
          "&&": 1,
          "|": 2,
          "^": 3,
          "&": 4,
          "==": 5,
          "===": 5,
          "!=": 5,
          "!==": 5,
          "<": 6,
          ">": 6,
          "<=": 6,
          ">=": 6,
          in: 6,
          instanceof: 6,
          ">>": 7,
          "<<": 7,
          ">>>": 7,
          "+": 8,
          "-": 8,
          "*": 9,
          "/": 9,
          "%": 9,
          "**": 10,
        };
      (t.FunctionTypeAnnotation = i), (t.AwaitExpression = c);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        return (
          m.isMemberExpression(e)
            ? (s(e.object, t), e.computed && s(e.property, t))
            : m.isBinary(e) || m.isAssignmentExpression(e)
            ? (s(e.left, t), s(e.right, t))
            : m.isCallExpression(e)
            ? ((t.hasCall = !0), s(e.callee, t))
            : m.isFunction(e)
            ? (t.hasFunction = !0)
            : m.isIdentifier(e) && (t.hasHelper = t.hasHelper || a(e.callee)),
          t
        );
      }
      function a(e) {
        return m.isMemberExpression(e)
          ? a(e.object) || a(e.property)
          : m.isIdentifier(e)
          ? "require" === e.name || "_" === e.name[0]
          : m.isCallExpression(e)
          ? a(e.callee)
          : !(!m.isBinary(e) && !m.isAssignmentExpression(e)) &&
            ((m.isIdentifier(e.left) && a(e.left)) || a(e.right));
      }
      function o(e) {
        return (
          m.isLiteral(e) ||
          m.isObjectExpression(e) ||
          m.isArrayExpression(e) ||
          m.isIdentifier(e) ||
          m.isMemberExpression(e)
        );
      }
      var u = r(210),
        l = i(u),
        c = r(88),
        f = i(c),
        p = r(524),
        h = i(p),
        d = r(1),
        m = n(d);
      (t.nodes = {
        AssignmentExpression: function (e) {
          var t = s(e.right);
          if ((t.hasCall && t.hasHelper) || t.hasFunction)
            return { before: t.hasFunction, after: !0 };
        },
        SwitchCase: function (e, t) {
          return { before: e.consequent.length || t.cases[0] === e };
        },
        LogicalExpression: function (e) {
          if (m.isFunction(e.left) || m.isFunction(e.right))
            return { after: !0 };
        },
        Literal: function (e) {
          if ("use strict" === e.value) return { after: !0 };
        },
        CallExpression: function (e) {
          if (m.isFunction(e.callee) || a(e)) return { before: !0, after: !0 };
        },
        VariableDeclaration: function (e) {
          for (var t = 0; t < e.declarations.length; t++) {
            var r = e.declarations[t],
              n = a(r.id) && !o(r.init);
            if (!n) {
              var i = s(r.init);
              n = (a(r.init) && i.hasCall) || i.hasFunction;
            }
            if (n) return { before: !0, after: !0 };
          }
        },
        IfStatement: function (e) {
          if (m.isBlockStatement(e.consequent))
            return { before: !0, after: !0 };
        },
      }),
        (t.nodes.ObjectProperty = t.nodes.ObjectTypeProperty = t.nodes.ObjectMethod = t.nodes.SpreadProperty = function (
          e,
          t
        ) {
          if (t.properties[0] === e) return { before: !0 };
        }),
        (t.list = {
          VariableDeclaration: function (e) {
            return (0, h.default)(e.declarations, "init");
          },
          ArrayExpression: function (e) {
            return e.elements;
          },
          ObjectExpression: function (e) {
            return e.properties;
          },
        }),
        (0, f.default)(
          {
            Function: !0,
            Class: !0,
            Loop: !0,
            LabeledStatement: !0,
            SwitchStatement: !0,
            TryStatement: !0,
          },
          function (e, r) {
            (0, l.default)(e) && (e = { after: e, before: e }),
              (0, f.default)(
                [r].concat(m.FLIPPED_ALIAS_KEYS[r] || []),
                function (r) {
                  t.nodes[r] = function () {
                    return e;
                  };
                }
              );
          }
        );
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s() {
        this.token(","), this.space();
      }
      t.__esModule = !0;
      var a = r(66),
        o = i(a),
        u = r(2),
        l = i(u),
        c = r(32),
        f = i(c),
        p = r(300),
        h = i(p),
        d = r(3),
        m = i(d),
        v = r(208),
        y = i(v),
        g = r(517),
        b = i(g),
        E = r(523),
        x = i(E),
        A = r(214),
        D = i(A),
        C = r(234),
        S = i(C),
        _ = r(152),
        w = n(_),
        F = r(248),
        k = i(F),
        P = r(1),
        T = n(P),
        O = /e/i,
        B = /\.0+$/,
        I = /^0[box]/,
        N = (function () {
          function e(t, r, n) {
            (0, m.default)(this, e),
              (this.inForStatementInitCounter = 0),
              (this._printStack = []),
              (this._indent = 0),
              (this._insideAux = !1),
              (this._printedCommentStarts = {}),
              (this._parenPushNewlineState = null),
              (this._printAuxAfterOnNextUserNode = !1),
              (this._printedComments = new h.default()),
              (this._endsWithInteger = !1),
              (this._endsWithWord = !1),
              (this.format = t || {}),
              (this._buf = new S.default(r)),
              (this._whitespace = n.length > 0 ? new k.default(n) : null);
          }
          return (
            (e.prototype.generate = function (e) {
              return this.print(e), this._maybeAddAuxComment(), this._buf.get();
            }),
            (e.prototype.indent = function () {
              this.format.compact || this.format.concise || this._indent++;
            }),
            (e.prototype.dedent = function () {
              this.format.compact || this.format.concise || this._indent--;
            }),
            (e.prototype.semicolon = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
              this._maybeAddAuxComment(), this._append(";", !e);
            }),
            (e.prototype.rightBrace = function () {
              this.format.minified && this._buf.removeLastSemicolon(),
                this.token("}");
            }),
            (e.prototype.space = function () {
              var e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
              this.format.compact ||
                (((this._buf.hasContent() &&
                  !this.endsWith(" ") &&
                  !this.endsWith("\n")) ||
                  e) &&
                  this._space());
            }),
            (e.prototype.word = function (e) {
              this._endsWithWord && this._space(),
                this._maybeAddAuxComment(),
                this._append(e),
                (this._endsWithWord = !0);
            }),
            (e.prototype.number = function (e) {
              this.word(e),
                (this._endsWithInteger =
                  (0, x.default)(+e) &&
                  !I.test(e) &&
                  !O.test(e) &&
                  !B.test(e) &&
                  "." !== e[e.length - 1]);
            }),
            (e.prototype.token = function (e) {
              (("--" === e && this.endsWith("!")) ||
                ("+" === e[0] && this.endsWith("+")) ||
                ("-" === e[0] && this.endsWith("-")) ||
                ("." === e[0] && this._endsWithInteger)) &&
                this._space(),
                this._maybeAddAuxComment(),
                this._append(e);
            }),
            (e.prototype.newline = function (e) {
              if (!this.format.retainLines && !this.format.compact) {
                if (this.format.concise) return void this.space();
                if (
                  !(
                    this.endsWith("\n\n") ||
                    ("number" != typeof e && (e = 1),
                    (e = Math.min(2, e)),
                    (this.endsWith("{\n") || this.endsWith(":\n")) && e--,
                    e <= 0)
                  )
                )
                  for (var t = 0; t < e; t++) this._newline();
              }
            }),
            (e.prototype.endsWith = function (e) {
              return this._buf.endsWith(e);
            }),
            (e.prototype.removeTrailingNewline = function () {
              this._buf.removeTrailingNewline();
            }),
            (e.prototype.source = function (e, t) {
              this._catchUp(e, t), this._buf.source(e, t);
            }),
            (e.prototype.withSource = function (e, t, r) {
              this._catchUp(e, t), this._buf.withSource(e, t, r);
            }),
            (e.prototype._space = function () {
              this._append(" ", !0);
            }),
            (e.prototype._newline = function () {
              this._append("\n", !0);
            }),
            (e.prototype._append = function (e) {
              var t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
              this._maybeAddParen(e),
                this._maybeIndent(e),
                t ? this._buf.queue(e) : this._buf.append(e),
                (this._endsWithWord = !1),
                (this._endsWithInteger = !1);
            }),
            (e.prototype._maybeIndent = function (e) {
              this._indent &&
                this.endsWith("\n") &&
                "\n" !== e[0] &&
                this._buf.queue(this._getIndent());
            }),
            (e.prototype._maybeAddParen = function (e) {
              var t = this._parenPushNewlineState;
              if (t) {
                this._parenPushNewlineState = null;
                var r = void 0;
                for (r = 0; r < e.length && " " === e[r]; r++);
                if (r !== e.length) {
                  var n = e[r];
                  ("\n" !== n && "/" !== n) ||
                    (this.token("("), this.indent(), (t.printed = !0));
                }
              }
            }),
            (e.prototype._catchUp = function (e, t) {
              if (this.format.retainLines) {
                var r = t ? t[e] : null;
                if (r && null !== r.line)
                  for (
                    var n = r.line - this._buf.getCurrentLine(), i = 0;
                    i < n;
                    i++
                  )
                    this._newline();
              }
            }),
            (e.prototype._getIndent = function () {
              return (0, D.default)(this.format.indent.style, this._indent);
            }),
            (e.prototype.startTerminatorless = function () {
              return (this._parenPushNewlineState = { printed: !1 });
            }),
            (e.prototype.endTerminatorless = function (e) {
              e.printed && (this.dedent(), this.newline(), this.token(")"));
            }),
            (e.prototype.print = function (e, t) {
              var r = this;
              if (e) {
                var n = this.format.concise;
                e._compact && (this.format.concise = !0);
                var i = this[e.type];
                if (!i)
                  throw new ReferenceError(
                    "unknown node of type " +
                      (0, f.default)(e.type) +
                      " with constructor " +
                      (0, f.default)(e && e.constructor.name)
                  );
                this._printStack.push(e);
                var s = this._insideAux;
                (this._insideAux = !e.loc),
                  this._maybeAddAuxComment(this._insideAux && !s);
                var a = w.needsParens(e, t, this._printStack);
                this.format.retainFunctionParens &&
                  "FunctionExpression" === e.type &&
                  e.extra &&
                  e.extra.parenthesized &&
                  (a = !0),
                  a && this.token("("),
                  this._printLeadingComments(e, t);
                var o = T.isProgram(e) || T.isFile(e) ? null : e.loc;
                this.withSource("start", o, function () {
                  r[e.type](e, t);
                }),
                  this._printTrailingComments(e, t),
                  a && this.token(")"),
                  this._printStack.pop(),
                  (this.format.concise = n),
                  (this._insideAux = s);
              }
            }),
            (e.prototype._maybeAddAuxComment = function (e) {
              e && this._printAuxBeforeComment(),
                this._insideAux || this._printAuxAfterComment();
            }),
            (e.prototype._printAuxBeforeComment = function () {
              if (!this._printAuxAfterOnNextUserNode) {
                this._printAuxAfterOnNextUserNode = !0;
                var e = this.format.auxiliaryCommentBefore;
                e && this._printComment({ type: "CommentBlock", value: e });
              }
            }),
            (e.prototype._printAuxAfterComment = function () {
              if (this._printAuxAfterOnNextUserNode) {
                this._printAuxAfterOnNextUserNode = !1;
                var e = this.format.auxiliaryCommentAfter;
                e && this._printComment({ type: "CommentBlock", value: e });
              }
            }),
            (e.prototype.getPossibleRaw = function (e) {
              var t = e.extra;
              if (
                t &&
                null != t.raw &&
                null != t.rawValue &&
                e.value === t.rawValue
              )
                return t.raw;
            }),
            (e.prototype.printJoin = function (e, t) {
              var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              if (e && e.length) {
                r.indent && this.indent();
                for (
                  var n = { addNewlines: r.addNewlines }, i = 0;
                  i < e.length;
                  i++
                ) {
                  var s = e[i];
                  s &&
                    (r.statement && this._printNewline(!0, s, t, n),
                    this.print(s, t),
                    r.iterator && r.iterator(s, i),
                    r.separator && i < e.length - 1 && r.separator.call(this),
                    r.statement && this._printNewline(!1, s, t, n));
                }
                r.indent && this.dedent();
              }
            }),
            (e.prototype.printAndIndentOnComments = function (e, t) {
              var r = !!e.leadingComments;
              r && this.indent(), this.print(e, t), r && this.dedent();
            }),
            (e.prototype.printBlock = function (e) {
              var t = e.body;
              T.isEmptyStatement(t) || this.space(), this.print(t, e);
            }),
            (e.prototype._printTrailingComments = function (e, t) {
              this._printComments(this._getComments(!1, e, t));
            }),
            (e.prototype._printLeadingComments = function (e, t) {
              this._printComments(this._getComments(!0, e, t));
            }),
            (e.prototype.printInnerComments = function (e) {
              var t =
                !(arguments.length > 1 && void 0 !== arguments[1]) ||
                arguments[1];
              e.innerComments &&
                (t && this.indent(),
                this._printComments(e.innerComments),
                t && this.dedent());
            }),
            (e.prototype.printSequence = function (e, t) {
              var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              return (r.statement = !0), this.printJoin(e, t, r);
            }),
            (e.prototype.printList = function (e, t) {
              var r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {};
              return (
                null == r.separator && (r.separator = s),
                this.printJoin(e, t, r)
              );
            }),
            (e.prototype._printNewline = function (e, t, r, n) {
              var i = this;
              if (!this.format.retainLines && !this.format.compact) {
                if (this.format.concise) return void this.space();
                var s = 0;
                if (
                  null != t.start &&
                  !t._ignoreUserWhitespace &&
                  this._whitespace
                )
                  if (e) {
                    var a = t.leadingComments,
                      o =
                        a &&
                        (0, y.default)(a, function (e) {
                          return (
                            !!e.loc && i.format.shouldPrintComment(e.value)
                          );
                        });
                    s = this._whitespace.getNewlinesBefore(o || t);
                  } else {
                    var u = t.trailingComments,
                      l =
                        u &&
                        (0, b.default)(u, function (e) {
                          return (
                            !!e.loc && i.format.shouldPrintComment(e.value)
                          );
                        });
                    s = this._whitespace.getNewlinesAfter(l || t);
                  }
                else {
                  e || s++, n.addNewlines && (s += n.addNewlines(e, t) || 0);
                  var c = w.needsWhitespaceAfter;
                  e && (c = w.needsWhitespaceBefore),
                    c(t, r) && s++,
                    this._buf.hasContent() || (s = 0);
                }
                this.newline(s);
              }
            }),
            (e.prototype._getComments = function (e, t) {
              return (t && (e ? t.leadingComments : t.trailingComments)) || [];
            }),
            (e.prototype._printComment = function (e) {
              var t = this;
              if (
                this.format.shouldPrintComment(e.value) &&
                !e.ignore &&
                !this._printedComments.has(e)
              ) {
                if ((this._printedComments.add(e), null != e.start)) {
                  if (this._printedCommentStarts[e.start]) return;
                  this._printedCommentStarts[e.start] = !0;
                }
                this.newline(
                  this._whitespace ? this._whitespace.getNewlinesBefore(e) : 0
                ),
                  this.endsWith("[") || this.endsWith("{") || this.space();
                var r =
                  "CommentLine" === e.type
                    ? "//" + e.value + "\n"
                    : "/*" + e.value + "*/";
                if (
                  "CommentBlock" === e.type &&
                  this.format.indent.adjustMultilineComment
                ) {
                  var n = e.loc && e.loc.start.column;
                  if (n) {
                    var i = new RegExp("\\n\\s{1," + n + "}", "g");
                    r = r.replace(i, "\n");
                  }
                  var s = Math.max(
                    this._getIndent().length,
                    this._buf.getCurrentColumn()
                  );
                  r = r.replace(/\n(?!$)/g, "\n" + (0, D.default)(" ", s));
                }
                this.withSource("start", e.loc, function () {
                  t._append(r);
                }),
                  this.newline(
                    (this._whitespace
                      ? this._whitespace.getNewlinesAfter(e)
                      : 0) + ("CommentLine" === e.type ? -1 : 0)
                  );
              }
            }),
            (e.prototype._printComments = function (e) {
              if (e && e.length)
                for (
                  var t = e,
                    r = Array.isArray(t),
                    n = 0,
                    t = r ? t : (0, l.default)(t);
                  ;

                ) {
                  var i;
                  if (r) {
                    if (n >= t.length) break;
                    i = t[n++];
                  } else {
                    if (((n = t.next()), n.done)) break;
                    i = n.value;
                  }
                  var s = i;
                  this._printComment(s);
                }
            }),
            e
          );
        })();
      t.default = N;
      for (
        var M = [
            r(243),
            r(237),
            r(242),
            r(236),
            r(240),
            r(241),
            r(98),
            r(238),
            r(235),
            r(239),
          ],
          R = 0;
        R < M.length;
        R++
      ) {
        var L = M[R];
        (0, o.default)(N.prototype, L);
      }
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(17),
        s = n(i),
        a = r(6),
        o = n(a),
        u = r(3),
        l = n(u),
        c = r(224),
        f = n(c),
        p = (function () {
          function e(t, r) {
            var n = this;
            (0, l.default)(this, e),
              (this._opts = t),
              (this._map = new f.default.SourceMapGenerator({
                file: t.sourceMapTarget,
                sourceRoot: t.sourceRoot,
              })),
              "string" == typeof r
                ? this._map.setSourceContent(t.sourceFileName, r)
                : "object" ===
                    ("undefined" == typeof r
                      ? "undefined"
                      : (0, o.default)(r)) &&
                  (0, s.default)(r).forEach(function (e) {
                    n._map.setSourceContent(e, r[e]);
                  });
          }
          return (
            (e.prototype.get = function () {
              return this._map.toJSON();
            }),
            (e.prototype.mark = function (e, t, r, n, i, s) {
              (this._lastGenLine !== e && null === r) ||
                (this._lastGenLine === e &&
                  this._lastSourceLine === r &&
                  this._lastSourceColumn === n) ||
                ((this._lastGenLine = e),
                (this._lastSourceLine = r),
                (this._lastSourceColumn = n),
                this._map.addMapping({
                  name: i,
                  generated: { line: e, column: t },
                  source: null == r ? null : s || this._opts.sourceFileName,
                  original: null == r ? null : { line: r, column: n },
                }));
            }),
            e
          );
        })();
      (t.default = p), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = (function () {
          function e(t) {
            (0, s.default)(this, e), (this.tokens = t), (this.used = {});
          }
          return (
            (e.prototype.getNewlinesBefore = function (e) {
              var t = void 0,
                r = void 0,
                n = this.tokens,
                i = this._findToken(
                  function (t) {
                    return t.start - e.start;
                  },
                  0,
                  n.length
                );
              if (i >= 0) {
                for (; i && e.start === n[i - 1].start; ) --i;
                (t = n[i - 1]), (r = n[i]);
              }
              return this._getNewlinesBetween(t, r);
            }),
            (e.prototype.getNewlinesAfter = function (e) {
              var t = void 0,
                r = void 0,
                n = this.tokens,
                i = this._findToken(
                  function (t) {
                    return t.end - e.end;
                  },
                  0,
                  n.length
                );
              if (i >= 0) {
                for (; i && e.end === n[i - 1].end; ) --i;
                (t = n[i]),
                  (r = n[i + 1]),
                  "," === r.type.label && (r = n[i + 2]);
              }
              return r && "eof" === r.type.label
                ? 1
                : this._getNewlinesBetween(t, r);
            }),
            (e.prototype._getNewlinesBetween = function (e, t) {
              if (!t || !t.loc) return 0;
              for (
                var r = e ? e.loc.end.line : 1,
                  n = t.loc.start.line,
                  i = 0,
                  s = r;
                s < n;
                s++
              )
                "undefined" == typeof this.used[s] &&
                  ((this.used[s] = !0), i++);
              return i;
            }),
            (e.prototype._findToken = function (e, t, r) {
              if (t >= r) return -1;
              var n = (t + r) >>> 1,
                i = e(this.tokens[n]);
              return i < 0
                ? this._findToken(e, n + 1, r)
                : i > 0
                ? this._findToken(e, t, n)
                : 0 === i
                ? n
                : -1;
            }),
            e
          );
        })();
      (t.default = a), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        var t = 0,
          r = 0,
          n = 0;
        for (var i in e) {
          var s = e[i],
            a = s[0],
            o = s[1];
          (a > r || (a === r && o > n)) && ((r = a), (n = o), (t = Number(i)));
        }
        return t;
      }
      var i = r(250),
        s = /^(?:( )+|\t+)/;
      e.exports = function (e) {
        if ("string" != typeof e) throw new TypeError("Expected a string");
        var t,
          r,
          a = 0,
          o = 0,
          u = 0,
          l = {};
        e.split(/\n/g).forEach(function (e) {
          if (e) {
            var n,
              i = e.match(s);
            i ? ((n = i[0].length), i[1] ? o++ : a++) : (n = 0);
            var c = n - u;
            (u = n),
              c
                ? ((r = c > 0),
                  (t = l[r ? c : -c]),
                  t ? t[0]++ : (t = l[c] = [1, 0]))
                : t && (t[1] += Number(r));
          }
        });
        var c,
          f,
          p = n(l);
        return (
          p
            ? o >= a
              ? ((c = "space"), (f = i(" ", p)))
              : ((c = "tab"), (f = i("\t", p)))
            : ((c = null), (f = "")),
          { amount: p, type: c, indent: f }
        );
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(398);
      e.exports = function (e, t) {
        if ("string" != typeof e)
          throw new TypeError("Expected `input` to be a string");
        if (t < 0 || !n(t))
          throw new TypeError(
            "Expected `count` to be a positive finite number"
          );
        var r = "";
        do 1 & t && (r += e), (e += e);
        while ((t >>= 1));
        return r;
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          function t(e, r) {
            if (u.isJSXIdentifier(e)) {
              if ("this" === e.name && u.isReferenced(e, r))
                return u.thisExpression();
              if (!a.default.keyword.isIdentifierNameES6(e.name))
                return u.stringLiteral(e.name);
              e.type = "Identifier";
            } else if (u.isJSXMemberExpression(e))
              return u.memberExpression(t(e.object, e), t(e.property, e));
            return e;
          }
          function r(e) {
            return u.isJSXExpressionContainer(e) ? e.expression : e;
          }
          function n(e) {
            var t = r(e.value || u.booleanLiteral(!0));
            return (
              u.isStringLiteral(t) &&
                !u.isJSXExpressionContainer(e.value) &&
                (t.value = t.value.replace(/\n\s+/g, " ")),
              u.isValidIdentifier(e.name.name)
                ? (e.name.type = "Identifier")
                : (e.name = u.stringLiteral(e.name.name)),
              u.inherits(u.objectProperty(e.name, t), e)
            );
          }
          function i(r, n) {
            r.parent.children = u.react.buildChildren(r.parent);
            var i = t(r.node.name, r.node),
              a = [],
              o = void 0;
            u.isIdentifier(i) ? (o = i.name) : u.isLiteral(i) && (o = i.value);
            var l = { tagExpr: i, tagName: o, args: a };
            e.pre && e.pre(l, n);
            var c = r.node.attributes;
            return (
              (c = c.length ? s(c, n) : u.nullLiteral()),
              a.push(c),
              e.post && e.post(l, n),
              l.call || u.callExpression(l.callee, a)
            );
          }
          function s(e, t) {
            function r() {
              i.length && (s.push(u.objectExpression(i)), (i = []));
            }
            var i = [],
              s = [],
              a = t.opts.useBuiltIns || !1;
            if ("boolean" != typeof a)
              throw new Error(
                "transform-react-jsx currently only accepts a boolean option for useBuiltIns (defaults to false)"
              );
            for (; e.length; ) {
              var o = e.shift();
              u.isJSXSpreadAttribute(o)
                ? (r(), s.push(o.argument))
                : i.push(n(o));
            }
            if ((r(), 1 === s.length)) e = s[0];
            else {
              u.isObjectExpression(s[0]) || s.unshift(u.objectExpression([]));
              var l = a
                ? u.memberExpression(
                    u.identifier("Object"),
                    u.identifier("assign")
                  )
                : t.addHelper("extends");
              e = u.callExpression(l, s);
            }
            return e;
          }
          var o = {};
          return (
            (o.JSXNamespacedName = function (e) {
              throw e.buildCodeFrameError(
                "Namespace tags are not supported. ReactJSX is not XML."
              );
            }),
            (o.JSXElement = {
              exit: function (e, t) {
                var r = i(e.get("openingElement"), t);
                (r.arguments = r.arguments.concat(e.node.children)),
                  r.arguments.length >= 3 && (r._prettyCall = !0),
                  e.replaceWith(u.inherits(r, e.node));
              },
            }),
            o
          );
        });
      var s = r(123),
        a = i(s),
        o = r(1),
        u = n(o);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : e.scope,
            r = e.node,
            n = u.functionExpression(null, [], r.body, r.generator, r.async),
            i = n,
            s = [];
          (0, a.default)(e, function (e) {
            return t.push({ id: e });
          });
          var o = { foundThis: !1, foundArguments: !1 };
          e.traverse(l, o),
            o.foundArguments &&
              ((i = u.memberExpression(n, u.identifier("apply"))),
              (s = []),
              o.foundThis && s.push(u.thisExpression()),
              o.foundArguments &&
                (o.foundThis || s.push(u.nullLiteral()),
                s.push(u.identifier("arguments"))));
          var c = u.callExpression(i, s);
          return (
            r.generator && (c = u.yieldExpression(c, !0)), u.returnStatement(c)
          );
        });
      var s = r(254),
        a = i(s),
        o = r(1),
        u = n(o),
        l = {
          enter: function (e, t) {
            e.isThisExpression() && (t.foundThis = !0),
              e.isReferencedIdentifier({ name: "arguments" }) &&
                (t.foundArguments = !0);
          },
          Function: function (e) {
            e.skip();
          },
        };
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        return (!g.isClassMethod(e) && !g.isObjectMethod(e)) ||
          ("get" !== e.kind && "set" !== e.kind)
          ? "value"
          : e.kind;
      }
      function a(e, t, r, n, i) {
        var a = g.toKeyAlias(t),
          o = {};
        if (
          ((0, v.default)(e, a) && (o = e[a]),
          (e[a] = o),
          (o._inherits = o._inherits || []),
          o._inherits.push(t),
          (o._key = t.key),
          t.computed && (o._computed = !0),
          t.decorators)
        ) {
          var u = (o.decorators = o.decorators || g.arrayExpression([]));
          u.elements = u.elements.concat(
            t.decorators
              .map(function (e) {
                return e.expression;
              })
              .reverse()
          );
        }
        if (o.value || o.initializer)
          throw n.buildCodeFrameError(t, "Key conflict with sibling node");
        var l = void 0,
          c = void 0;
        (g.isObjectProperty(t) || g.isObjectMethod(t) || g.isClassMethod(t)) &&
          (l = g.toComputedKey(t, t.key)),
          g.isObjectProperty(t) || g.isClassProperty(t)
            ? (c = t.value)
            : (g.isObjectMethod(t) || g.isClassMethod(t)) &&
              ((c = g.functionExpression(
                null,
                t.params,
                t.body,
                t.generator,
                t.async
              )),
              (c.returnType = t.returnType));
        var f = s(t);
        return (
          (r && "value" === f) || (r = f),
          i &&
            g.isStringLiteral(l) &&
            ("value" === r || "initializer" === r) &&
            g.isFunctionExpression(c) &&
            (c = (0, p.default)({ id: l, node: c, scope: i })),
          c && (g.inheritsComments(c, t), (o[r] = c)),
          o
        );
      }
      function o(e) {
        for (var t in e) if (e[t]._computed) return !0;
        return !1;
      }
      function u(e) {
        for (
          var t = g.arrayExpression([]), r = 0;
          r < e.properties.length;
          r++
        ) {
          var n = e.properties[r],
            i = n.value;
          i.properties.unshift(
            g.objectProperty(g.identifier("key"), g.toComputedKey(n))
          ),
            t.elements.push(i);
        }
        return t;
      }
      function l(e) {
        var t = g.objectExpression([]);
        return (
          (0, d.default)(e, function (e) {
            var r = g.objectExpression([]),
              n = g.objectProperty(e._key, r, e._computed);
            (0, d.default)(e, function (e, t) {
              if ("_" !== t[0]) {
                var n = e;
                (g.isClassMethod(e) || g.isClassProperty(e)) && (e = e.value);
                var i = g.objectProperty(g.identifier(t), e);
                g.inheritsComments(i, n),
                  g.removeComments(n),
                  r.properties.push(i);
              }
            }),
              t.properties.push(n);
          }),
          t
        );
      }
      function c(e) {
        return (
          (0, d.default)(e, function (e) {
            e.value && (e.writable = g.booleanLiteral(!0)),
              (e.configurable = g.booleanLiteral(!0)),
              (e.enumerable = g.booleanLiteral(!0));
          }),
          l(e)
        );
      }
      (t.__esModule = !0),
        (t.push = a),
        (t.hasComputed = o),
        (t.toComputedObjectFromClass = u),
        (t.toClassObject = l),
        (t.toDefineObject = c);
      var f = r(52),
        p = i(f),
        h = r(88),
        d = i(h),
        m = r(209),
        v = i(m),
        y = r(1),
        g = n(y);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s);
      t.default = function (e, t) {
        var r =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : "var";
        e.traverse(l, { kind: r, emit: t });
      };
      var o = r(1),
        u = n(o),
        l = {
          Scope: function (e, t) {
            "let" === t.kind && e.skip();
          },
          Function: function (e) {
            e.skip();
          },
          VariableDeclaration: function (e, t) {
            if (!t.kind || e.node.kind === t.kind) {
              for (
                var r = [],
                  n = e.get("declarations"),
                  i = void 0,
                  s = n,
                  o = Array.isArray(s),
                  l = 0,
                  s = o ? s : (0, a.default)(s);
                ;

              ) {
                var c;
                if (o) {
                  if (l >= s.length) break;
                  c = s[l++];
                } else {
                  if (((l = s.next()), l.done)) break;
                  c = l.value;
                }
                var f = c;
                (i = f.node.id),
                  f.node.init &&
                    r.push(
                      u.expressionStatement(
                        u.assignmentExpression("=", f.node.id, f.node.init)
                      )
                    );
                for (var p in f.getBindingIdentifiers())
                  t.emit(u.identifier(p), p);
              }
              e.parentPath.isFor({ left: e.node })
                ? e.replaceWith(i)
                : e.replaceWithMultiple(r);
            }
          },
        };
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        return (
          !!y.isSuper(e) &&
          !y.isMemberExpression(t, { computed: !1 }) &&
          !y.isCallExpression(t, { callee: e })
        );
      }
      function a(e) {
        return y.isMemberExpression(e) && y.isSuper(e.object);
      }
      function o(e, t) {
        var r = t ? e : y.memberExpression(e, y.identifier("prototype"));
        return y.logicalExpression(
          "||",
          y.memberExpression(r, y.identifier("__proto__")),
          y.callExpression(
            y.memberExpression(
              y.identifier("Object"),
              y.identifier("getPrototypeOf")
            ),
            [r]
          )
        );
      }
      t.__esModule = !0;
      var u = r(3),
        l = i(u),
        c = r(34),
        f = i(c),
        p = r(154),
        h = i(p),
        d = r(16),
        m = n(d),
        v = r(1),
        y = n(v),
        g = (0, f.default)(),
        b = {
          Function: function (e) {
            e.inShadow("this") || e.skip();
          },
          ReturnStatement: function (e, t) {
            e.inShadow("this") || t.returns.push(e);
          },
          ThisExpression: function (e, t) {
            e.node[g] || t.thises.push(e);
          },
          enter: function (e, t) {
            var r = t.specHandle;
            t.isLoose && (r = t.looseHandle);
            var n = e.isCallExpression() && e.get("callee").isSuper(),
              i = r.call(t, e);
            i && (t.hasSuper = !0),
              n && t.bareSupers.push(e),
              i === !0 && e.requeue(),
              i !== !0 &&
                i &&
                (Array.isArray(i)
                  ? e.replaceWithMultiple(i)
                  : e.replaceWith(i));
          },
        },
        E = (function () {
          function e(t) {
            var r =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            (0, l.default)(this, e),
              (this.forceSuperMemoisation = t.forceSuperMemoisation),
              (this.methodPath = t.methodPath),
              (this.methodNode = t.methodNode),
              (this.superRef = t.superRef),
              (this.isStatic = t.isStatic),
              (this.hasSuper = !1),
              (this.inClass = r),
              (this.isLoose = t.isLoose),
              (this.scope = this.methodPath.scope),
              (this.file = t.file),
              (this.opts = t),
              (this.bareSupers = []),
              (this.returns = []),
              (this.thises = []);
          }
          return (
            (e.prototype.getObjectRef = function () {
              return this.opts.objectRef || this.opts.getObjectRef();
            }),
            (e.prototype.setSuperProperty = function (e, t, r) {
              return y.callExpression(this.file.addHelper("set"), [
                o(this.getObjectRef(), this.isStatic),
                r ? e : y.stringLiteral(e.name),
                t,
                y.thisExpression(),
              ]);
            }),
            (e.prototype.getSuperProperty = function (e, t) {
              return y.callExpression(this.file.addHelper("get"), [
                o(this.getObjectRef(), this.isStatic),
                t ? e : y.stringLiteral(e.name),
                y.thisExpression(),
              ]);
            }),
            (e.prototype.replace = function () {
              this.methodPath.traverse(b, this);
            }),
            (e.prototype.getLooseSuperProperty = function (e, t) {
              var r = this.methodNode,
                n = this.superRef || y.identifier("Function");
              return t.property === e
                ? void 0
                : y.isCallExpression(t, { callee: e })
                ? void 0
                : y.isMemberExpression(t) && !r.static
                ? y.memberExpression(n, y.identifier("prototype"))
                : n;
            }),
            (e.prototype.looseHandle = function (e) {
              var t = e.node;
              if (e.isSuper()) return this.getLooseSuperProperty(t, e.parent);
              if (e.isCallExpression()) {
                var r = t.callee;
                if (!y.isMemberExpression(r)) return;
                if (!y.isSuper(r.object)) return;
                return (
                  y.appendToMemberExpression(r, y.identifier("call")),
                  t.arguments.unshift(y.thisExpression()),
                  !0
                );
              }
            }),
            (e.prototype.specHandleAssignmentExpression = function (e, t, r) {
              return "=" === r.operator
                ? this.setSuperProperty(
                    r.left.property,
                    r.right,
                    r.left.computed
                  )
                : ((e = e || t.scope.generateUidIdentifier("ref")),
                  [
                    y.variableDeclaration("var", [
                      y.variableDeclarator(e, r.left),
                    ]),
                    y.expressionStatement(
                      y.assignmentExpression(
                        "=",
                        r.left,
                        y.binaryExpression(r.operator[0], e, r.right)
                      )
                    ),
                  ]);
            }),
            (e.prototype.specHandle = function (e) {
              var t = void 0,
                r = void 0,
                n = void 0,
                i = e.parent,
                o = e.node;
              if (s(o, i))
                throw e.buildCodeFrameError(m.get("classesIllegalBareSuper"));
              if (y.isCallExpression(o)) {
                var u = o.callee;
                if (y.isSuper(u)) return;
                a(u) && ((t = u.property), (r = u.computed), (n = o.arguments));
              } else if (y.isMemberExpression(o) && y.isSuper(o.object))
                (t = o.property), (r = o.computed);
              else {
                if (y.isUpdateExpression(o) && a(o.argument)) {
                  var l = y.binaryExpression(
                    o.operator[0],
                    o.argument,
                    y.numericLiteral(1)
                  );
                  if (o.prefix)
                    return this.specHandleAssignmentExpression(null, e, l);
                  var c = e.scope.generateUidIdentifier("ref");
                  return this.specHandleAssignmentExpression(c, e, l).concat(
                    y.expressionStatement(c)
                  );
                }
                if (y.isAssignmentExpression(o) && a(o.left))
                  return this.specHandleAssignmentExpression(null, e, o);
              }
              if (t) {
                var f = this.getSuperProperty(t, r);
                return n ? this.optimiseCall(f, n) : f;
              }
            }),
            (e.prototype.optimiseCall = function (e, t) {
              var r = y.thisExpression();
              return (r[g] = !0), (0, h.default)(e, r, t);
            }),
            e
          );
        })();
      (t.default = E), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(12),
        s = n(i),
        a = {};
      (t.default = a),
        (a.typeof = (0, s.default)(
          '\n  (typeof Symbol === "function" && typeof Symbol.iterator === "symbol")\n    ? function (obj) { return typeof obj; }\n    : function (obj) {\n        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype\n          ? "symbol"\n          : typeof obj;\n      };\n'
        )),
        (a.jsx = (0, s.default)(
          '\n  (function () {\n    var REACT_ELEMENT_TYPE = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;\n\n    return function createRawReactElement (type, props, key, children) {\n      var defaultProps = type && type.defaultProps;\n      var childrenLength = arguments.length - 3;\n\n      if (!props && childrenLength !== 0) {\n        // If we\'re going to assign props.children, we create a new object now\n        // to avoid mutating defaultProps.\n        props = {};\n      }\n      if (props && defaultProps) {\n        for (var propName in defaultProps) {\n          if (props[propName] === void 0) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      } else if (!props) {\n        props = defaultProps || {};\n      }\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 3];\n        }\n        props.children = childArray;\n      }\n\n      return {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key === undefined ? null : \'\' + key,\n        ref: null,\n        props: props,\n        _owner: null,\n      };\n    };\n\n  })()\n'
        )),
        (a.asyncIterator = (0, s.default)(
          '\n  (function (iterable) {\n    if (typeof Symbol === "function") {\n      if (Symbol.asyncIterator) {\n        var method = iterable[Symbol.asyncIterator];\n        if (method != null) return method.call(iterable);\n      }\n      if (Symbol.iterator) {\n        return iterable[Symbol.iterator]();\n      }\n    }\n    throw new TypeError("Object is not async iterable");\n  })\n'
        )),
        (a.asyncGenerator = (0, s.default)(
          '\n  (function () {\n    function AwaitValue(value) {\n      this.value = value;\n    }\n\n    function AsyncGenerator(gen) {\n      var front, back;\n\n      function send(key, arg) {\n        return new Promise(function (resolve, reject) {\n          var request = {\n            key: key,\n            arg: arg,\n            resolve: resolve,\n            reject: reject,\n            next: null\n          };\n\n          if (back) {\n            back = back.next = request;\n          } else {\n            front = back = request;\n            resume(key, arg);\n          }\n        });\n      }\n\n      function resume(key, arg) {\n        try {\n          var result = gen[key](arg)\n          var value = result.value;\n          if (value instanceof AwaitValue) {\n            Promise.resolve(value.value).then(\n              function (arg) { resume("next", arg); },\n              function (arg) { resume("throw", arg); });\n          } else {\n            settle(result.done ? "return" : "normal", result.value);\n          }\n        } catch (err) {\n          settle("throw", err);\n        }\n      }\n\n      function settle(type, value) {\n        switch (type) {\n          case "return":\n            front.resolve({ value: value, done: true });\n            break;\n          case "throw":\n            front.reject(value);\n            break;\n          default:\n            front.resolve({ value: value, done: false });\n            break;\n        }\n\n        front = front.next;\n        if (front) {\n          resume(front.key, front.arg);\n        } else {\n          back = null;\n        }\n      }\n\n      this._invoke = send;\n\n      // Hide "return" method if generator return is not supported\n      if (typeof gen.return !== "function") {\n        this.return = undefined;\n      }\n    }\n\n    if (typeof Symbol === "function" && Symbol.asyncIterator) {\n      AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; };\n    }\n\n    AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };\n    AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };\n    AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };\n\n    return {\n      wrap: function (fn) {\n        return function () {\n          return new AsyncGenerator(fn.apply(this, arguments));\n        };\n      },\n      await: function (value) {\n        return new AwaitValue(value);\n      }\n    };\n\n  })()\n'
        )),
        (a.asyncGeneratorDelegate = (0, s.default)(
          '\n  (function (inner, awaitWrap) {\n    var iter = {}, waiting = false;\n\n    function pump(key, value) {\n      waiting = true;\n      value = new Promise(function (resolve) { resolve(inner[key](value)); });\n      return { done: false, value: awaitWrap(value) };\n    };\n\n    if (typeof Symbol === "function" && Symbol.iterator) {\n      iter[Symbol.iterator] = function () { return this; };\n    }\n\n    iter.next = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n      return pump("next", value);\n    };\n\n    if (typeof inner.throw === "function") {\n      iter.throw = function (value) {\n        if (waiting) {\n          waiting = false;\n          throw value;\n        }\n        return pump("throw", value);\n      };\n    }\n\n    if (typeof inner.return === "function") {\n      iter.return = function (value) {\n        return pump("return", value);\n      };\n    }\n\n    return iter;\n  })\n'
        )),
        (a.asyncToGenerator = (0, s.default)(
          '\n  (function (fn) {\n    return function () {\n      var gen = fn.apply(this, arguments);\n      return new Promise(function (resolve, reject) {\n        function step(key, arg) {\n          try {\n            var info = gen[key](arg);\n            var value = info.value;\n          } catch (error) {\n            reject(error);\n            return;\n          }\n\n          if (info.done) {\n            resolve(value);\n          } else {\n            return Promise.resolve(value).then(function (value) {\n              step("next", value);\n            }, function (err) {\n              step("throw", err);\n            });\n          }\n        }\n\n        return step("next");\n      });\n    };\n  })\n'
        )),
        (a.classCallCheck = (0, s.default)(
          '\n  (function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError("Cannot call a class as a function");\n    }\n  });\n'
        )),
        (a.createClass = (0, s.default)(
          '\n  (function() {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i ++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ("value" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })()\n'
        )),
        (a.defineEnumerableProperties = (0, s.default)(
          '\n  (function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if ("value" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n    return obj;\n  })\n'
        )),
        (a.defaults = (0, s.default)(
          "\n  (function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n    return obj;\n  })\n"
        )),
        (a.defineProperty = (0, s.default)(
          "\n  (function (obj, key, value) {\n    // Shortcircuit the slow defineProperty path when possible.\n    // We are trying to avoid issues where setters defined on the\n    // prototype cause side effects under the fast path of simple\n    // assignment. By checking for existence of the property with\n    // the in operator, we can optimize most of this overhead away.\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  });\n"
        )),
        (a.extends = (0, s.default)(
          "\n  Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  })\n"
        )),
        (a.get = (0, s.default)(
          '\n  (function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if ("value" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  });\n'
        )),
        (a.inherits = (0, s.default)(
          '\n  (function (subClass, superClass) {\n    if (typeof superClass !== "function" && superClass !== null) {\n      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  })\n'
        )),
        (a.instanceof = (0, s.default)(
          '\n  (function (left, right) {\n    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  });\n'
        )),
        (a.interopRequireDefault = (0, s.default)(
          "\n  (function (obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n  })\n"
        )),
        (a.interopRequireWildcard = (0, s.default)(
          "\n  (function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  })\n"
        )),
        (a.newArrowCheck = (0, s.default)(
          '\n  (function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError("Cannot instantiate an arrow function");\n    }\n  });\n'
        )),
        (a.objectDestructuringEmpty = (0, s.default)(
          '\n  (function (obj) {\n    if (obj == null) throw new TypeError("Cannot destructure undefined");\n  });\n'
        )),
        (a.objectWithoutProperties = (0, s.default)(
          "\n  (function (obj, keys) {\n    var target = {};\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n    return target;\n  })\n"
        )),
        (a.possibleConstructorReturn = (0, s.default)(
          '\n  (function (self, call) {\n    if (!self) {\n      throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n    }\n    return call && (typeof call === "object" || typeof call === "function") ? call : self;\n  });\n'
        )),
        (a.selfGlobal = (0, s.default)(
          '\n  typeof global === "undefined" ? self : global\n'
        )),
        (a.set = (0, s.default)(
          '\n  (function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if ("value" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  });\n'
        )),
        (a.slicedToArray = (0, s.default)(
          '\n  (function () {\n    // Broken out into a separate function to avoid deoptimizations due to the try/catch for the\n    // array iterator case.\n    function sliceIterator(arr, i) {\n      // this is an expanded form of `for...of` that properly supports abrupt completions of\n      // iterators etc. variable names have been minimised to reduce the size of this massive\n      // helper. sometimes spec compliancy is annoying :(\n      //\n      // _n = _iteratorNormalCompletion\n      // _d = _didIteratorError\n      // _e = _iteratorError\n      // _i = _iterator\n      // _s = _step\n\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i["return"]) _i["return"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError("Invalid attempt to destructure non-iterable instance");\n      }\n    };\n  })();\n'
        )),
        (a.slicedToArrayLoose = (0, s.default)(
          '\n  (function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n        if (i && _arr.length === i) break;\n      }\n      return _arr;\n    } else {\n      throw new TypeError("Invalid attempt to destructure non-iterable instance");\n    }\n  });\n'
        )),
        (a.taggedTemplateLiteral = (0, s.default)(
          "\n  (function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n        raw: { value: Object.freeze(raw) }\n    }));\n  });\n"
        )),
        (a.taggedTemplateLiteralLoose = (0, s.default)(
          "\n  (function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  });\n"
        )),
        (a.temporalRef = (0, s.default)(
          '\n  (function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + " is not defined - temporal dead zone");\n    } else {\n      return val;\n    }\n  })\n'
        )),
        (a.temporalUndefined = (0, s.default)("\n  ({})\n")),
        (a.toArray = (0, s.default)(
          "\n  (function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  });\n"
        )),
        (a.toConsumableArray = (0, s.default)(
          "\n  (function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  });\n"
        )),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      function r(e) {
        return (
          "Identifier" === e.object.type &&
          "Symbol" === e.object.name &&
          "Identifier" === e.property.type
        );
      }
      e.exports = function (e) {
        var t = e.types;
        return {
          visitor: {
            MemberExpression: function (e) {
              var n = e.node;
              r(n) &&
                (e.replaceWith(
                  t.conditionalExpression(
                    t.binaryExpression(
                      "===",
                      t.unaryExpression("typeof", t.identifier("Symbol"), !0),
                      t.stringLiteral("function")
                    ),
                    n,
                    t.stringLiteral("@@" + n.property.name)
                  )
                ),
                e.stop());
            },
          },
        };
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        return e.map(function (e) {
          return (
            Array.isArray(e) || (e = [e]),
            "string" == typeof e[0] &&
              ((e[0] = a.default["babel-plugin-" + e[0]]),
              (e[0] = e[0].__esModule ? e[0].default : e[0])),
            e
          );
        });
      }
      Object.defineProperty(t, "__esModule", { value: !0 });
      var s = r(293),
        a = n(s);
      t.default = i([
        "syntax-async-functions",
        "syntax-class-properties",
        "syntax-trailing-function-commas",
        "transform-class-properties",
        "transform-es2015-function-name",
        "transform-es2015-arrow-functions",
        "transform-es2015-block-scoping",
        "transform-es2015-classes",
        "transform-es2015-computed-properties",
        "check-es2015-constants",
        "transform-es2015-destructuring",
        [
          "transform-es2015-modules-commonjs",
          { strict: !1, allowTopLevelThis: !0 },
        ],
        "transform-es2015-parameters",
        "transform-es2015-shorthand-properties",
        "transform-es2015-spread",
        "transform-es2015-template-literals",
        "transform-es2015-literals",
        "transform-flow-strip-types",
        "transform-object-assign",
        "transform-object-rest-spread",
        "transform-react-display-name",
        "transform-react-jsx",
        "transform-regenerator",
        ["transform-es2015-for-of", { loose: !0 }],
        r(257),
      ]);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        var t = e.messages;
        return {
          visitor: {
            Scope: function (e) {
              var r = e.scope;
              for (var n in r.bindings) {
                var i = r.bindings[n];
                if ("const" === i.kind || "module" === i.kind)
                  for (
                    var a = i.constantViolations,
                      o = Array.isArray(a),
                      u = 0,
                      a = o ? a : (0, s.default)(a);
                    ;

                  ) {
                    var l;
                    if (o) {
                      if (u >= a.length) break;
                      l = a[u++];
                    } else {
                      if (((u = a.next()), u.done)) break;
                      l = u.value;
                    }
                    var c = l;
                    throw c.buildCodeFrameError(t.get("readOnly", n));
                  }
              }
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e, t) {
        if (!(e instanceof t))
          throw new TypeError("Cannot call a class as a function");
      }
      Object.defineProperty(t, "__esModule", { value: !0 });
      var s =
          "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
            ? function (e) {
                return typeof e;
              }
            : function (e) {
                return e &&
                  "function" == typeof Symbol &&
                  e.constructor === Symbol
                  ? "symbol"
                  : typeof e;
              },
        a = (function () {
          function e(e, t) {
            for (var r = 0; r < t.length; r++) {
              var n = t[r];
              (n.enumerable = n.enumerable || !1),
                (n.configurable = !0),
                "value" in n && (n.writable = !0),
                Object.defineProperty(e, n.key, n);
            }
          }
          return function (t, r, n) {
            return r && e(t.prototype, r), n && e(t, n), t;
          };
        })();
      t.default = function (e) {
        function t(e, t) {
          return !!(0, u.default)(t, function (t) {
            return p.isIdentifier(e.node, { name: t }) || e.matchesPattern(t);
          });
        }
        function r(e) {
          return !!(0, u.default)(e.body.body, function (e) {
            return (
              p.isClassMethod(e) && p.isIdentifier(e.key, { name: "render" })
            );
          });
        }
        function n(e) {
          return (
            p.isObjectExpression(e) &&
            !!(0, u.default)(e.properties, function (e) {
              return (
                (p.isObjectProperty(e) || p.isObjectMethod(e)) &&
                (p.isIdentifier(e.key, { name: "render" }) ||
                  p.isStringLiteral(e.key, { value: "render" }))
              );
            })
          );
        }
        function o(e) {
          var t = (0, u.default)(e.arguments[0].properties, function (e) {
            return "displayName" === e.key.name;
          });
          return t && t.value.value;
        }
        function l(e) {
          return !!e.findParent(function (e) {
            return e.isFunction();
          });
        }
        function c(e, t, r) {
          return p.callExpression(p.callExpression(r, [p.stringLiteral(t)]), [
            e,
          ]);
        }
        function f(e) {
          var t = Object.keys(e).map(function (t) {
            return p.objectProperty(p.identifier(t), e[t]);
          });
          return p.objectExpression(t);
        }
        var p = e.types,
          h = e.template,
          d = h(
            "\n    function WRAPPER_FUNCTION_ID(ID_PARAM) {\n      return function(COMPONENT_PARAM) {\n        return EXPRESSION;\n      };\n    }\n  "
          ),
          m = "react-transform-" + Date.now(),
          v = {
            Class: function (e) {
              if (
                !e.node[m] &&
                t(e.get("superClass"), this.superClasses) &&
                r(e.node)
              ) {
                e.node[m] = !0;
                var n = (e.node.id && e.node.id.name) || null,
                  i = n || e.scope.generateUid("component"),
                  s = l(e);
                this.components.push({ id: i, name: n, isInFunction: s });
                var a = p.isStatement(e.node),
                  o = p.toExpression(e.node),
                  u = c(o, i, this.wrapperFunctionId),
                  f = void 0;
                a &&
                  ((f = p.identifier(n || i)),
                  (u = p.variableDeclaration("const", [
                    p.variableDeclarator(f, u),
                  ]))),
                  p.isExportDefaultDeclaration(e.parent)
                    ? (e.parentPath.insertBefore(u), (e.parent.declaration = f))
                    : e.replaceWith(u);
              }
            },
            CallExpression: function (e) {
              if (
                !e.node[m] &&
                t(e.get("callee"), this.factoryMethods) &&
                n(e.node.arguments[0])
              ) {
                e.node[m] = !0;
                var r = o(e.node),
                  i = r || e.scope.generateUid("component"),
                  s = l(e);
                this.components.push({ id: i, name: r, isInFunction: s }),
                  e.replaceWith(c(e.node, i, this.wrapperFunctionId));
              }
            },
          },
          y = (function () {
            function e(t, r) {
              i(this, e),
                (this.file = t),
                (this.program = t.path),
                (this.options = this.normalizeOptions(r)),
                (this.configuredTransformsIds = []);
            }
            return (
              a(
                e,
                [
                  {
                    key: "normalizeOptions",
                    value: function (e) {
                      return {
                        factoryMethods: e.factoryMethods || [
                          "React.createClass",
                        ],
                        superClasses: e.superClasses || [
                          "React.Component",
                          "Component",
                        ],
                        transforms: e.transforms.map(function (e) {
                          return {
                            transform: e.transform,
                            locals: e.locals || [],
                            imports: e.imports || [],
                          };
                        }),
                      };
                    },
                  },
                  {
                    key: "build",
                    value: function () {
                      var e = this.file.scope.generateUidIdentifier(
                          "components"
                        ),
                        t = this.file.scope.generateUidIdentifier(
                          "wrapComponent"
                        ),
                        r = this.collectAndWrapComponents(t);
                      if (r.length) {
                        var n = this.initComponentsDeclaration(e, r),
                          i = this.initTransformers(e),
                          s = this.initWrapperFunction(t),
                          a = this.program.node.body;
                        a.unshift(s),
                          i.reverse().forEach(function (e) {
                            return a.unshift(e);
                          }),
                          a.unshift(n);
                      }
                    },
                  },
                  {
                    key: "collectAndWrapComponents",
                    value: function (e) {
                      var t = [];
                      return (
                        this.file.path.traverse(v, {
                          wrapperFunctionId: e,
                          components: t,
                          factoryMethods: this.options.factoryMethods,
                          superClasses: this.options.superClasses,
                          currentlyInFunction: !1,
                        }),
                        t
                      );
                    },
                  },
                  {
                    key: "initComponentsDeclaration",
                    value: function (e, t) {
                      var r = t.map(function (e) {
                        var t = e.id,
                          r = [];
                        e.name &&
                          r.push(
                            p.objectProperty(
                              p.identifier("displayName"),
                              p.stringLiteral(e.name)
                            )
                          ),
                          e.isInFunction &&
                            r.push(
                              p.objectProperty(
                                p.identifier("isInFunction"),
                                p.booleanLiteral(!0)
                              )
                            );
                        var n = void 0;
                        return (
                          (n = p.isValidIdentifier(t)
                            ? p.identifier(t)
                            : p.stringLiteral(t)),
                          p.objectProperty(n, p.objectExpression(r))
                        );
                      });
                      return p.variableDeclaration("const", [
                        p.variableDeclarator(e, p.objectExpression(r)),
                      ]);
                    },
                  },
                  {
                    key: "initTransformers",
                    value: function (e) {
                      var t = this;
                      return this.options.transforms.map(function (r) {
                        var n = r.transform,
                          i = t.file.addImport(n, "default", n),
                          s = r.locals.map(function (e) {
                            return p.identifier(e);
                          }),
                          a = r.imports.map(function (e) {
                            return t.file.addImport(e, "default", e);
                          }),
                          o = t.file.scope.generateUidIdentifier(n),
                          u = p.variableDeclaration("const", [
                            p.variableDeclarator(
                              o,
                              p.callExpression(i, [
                                f({
                                  filename: p.stringLiteral(
                                    t.file.opts.filename
                                  ),
                                  components: e,
                                  locals: p.arrayExpression(s),
                                  imports: p.arrayExpression(a),
                                }),
                              ])
                            ),
                          ]);
                        return t.configuredTransformsIds.push(o), u;
                      });
                    },
                  },
                  {
                    key: "initWrapperFunction",
                    value: function (e) {
                      var t = p.identifier("id"),
                        r = p.identifier("Component"),
                        n = this.configuredTransformsIds
                          .reverse()
                          .reduce(function (e, r) {
                            return p.callExpression(r, [e, t]);
                          }, r);
                      return d({
                        WRAPPER_FUNCTION_ID: e,
                        ID_PARAM: t,
                        COMPONENT_PARAM: r,
                        EXPRESSION: n,
                      });
                    },
                  },
                ],
                [
                  {
                    key: "validateOptions",
                    value: function (e) {
                      return (
                        "object" ===
                          ("undefined" == typeof e ? "undefined" : s(e)) &&
                        Array.isArray(e.transforms)
                      );
                    },
                  },
                  {
                    key: "assertValidOptions",
                    value: function (t) {
                      if (!e.validateOptions(t))
                        throw new Error(
                          "babel-plugin-react-transform requires that you specify options in .babelrc or from the Babel Node API, and that it is an object with a transforms property which is an array."
                        );
                    },
                  },
                ]
              ),
              e
            );
          })();
        return {
          visitor: {
            Program: function (e, t) {
              var r = t.file,
                n = t.opts;
              y.assertValidOptions(n);
              var i = new y(r, n);
              i.build();
            },
          },
        };
      };
      var o = r(208),
        u = n(o);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("asyncFunctions");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("flow");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("jsx");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("objectRestSpread");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            manipulateOptions: function (e, t) {
              t.plugins.push("trailingFunctionCommas");
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      t.default = function (e) {
        var t = e.types,
          n = {
            Super: function (e) {
              e.parentPath.isCallExpression({ callee: e.node }) &&
                this.push(e.parentPath);
            },
          },
          i = {
            ReferencedIdentifier: function (e) {
              this.scope.hasOwnBinding(e.node.name) &&
                ((this.collision = !0), e.skip());
            },
          },
          a = (0, l.default)(
            "\n    Object.defineProperty(REF, KEY, {\n      // configurable is false by default\n      enumerable: true,\n      writable: true,\n      value: VALUE\n    });\n  "
          ),
          u = function (e, r) {
            var n = r.key,
              i = r.value,
              s = r.computed;
            return a({
              REF: e,
              KEY: t.isIdentifier(n) && !s ? t.stringLiteral(n.name) : n,
              VALUE: i ? i : t.identifier("undefined"),
            });
          },
          c = function (e, r) {
            var n = r.key,
              i = r.value,
              s = r.computed;
            return t.expressionStatement(
              t.assignmentExpression(
                "=",
                t.memberExpression(e, n, s || t.isLiteral(n)),
                i
              )
            );
          };
        return {
          inherits: r(156),
          visitor: {
            Class: function (e, r) {
              for (
                var a = r.opts.spec ? u : c,
                  l = !!e.node.superClass,
                  f = void 0,
                  p = [],
                  h = e.get("body"),
                  d = h.get("body"),
                  m = Array.isArray(d),
                  v = 0,
                  d = m ? d : (0, s.default)(d);
                ;

              ) {
                var y;
                if (m) {
                  if (v >= d.length) break;
                  y = d[v++];
                } else {
                  if (((v = d.next()), v.done)) break;
                  y = v.value;
                }
                var g = y;
                g.isClassProperty()
                  ? p.push(g)
                  : g.isClassMethod({ kind: "constructor" }) && (f = g);
              }
              if (p.length) {
                var b = [],
                  E = void 0;
                e.isClassExpression() || !e.node.id
                  ? ((0, o.default)(e),
                    (E = e.scope.generateUidIdentifier("class")))
                  : (E = e.node.id);
                for (
                  var x = [],
                    A = p,
                    D = Array.isArray(A),
                    C = 0,
                    A = D ? A : (0, s.default)(A);
                  ;

                ) {
                  var S;
                  if (D) {
                    if (C >= A.length) break;
                    S = A[C++];
                  } else {
                    if (((C = A.next()), C.done)) break;
                    S = C.value;
                  }
                  var _ = S,
                    w = _.node;
                  if (
                    !(w.decorators && w.decorators.length > 0) &&
                    (r.opts.spec || w.value)
                  ) {
                    var F = w.static;
                    if (F) b.push(a(E, w));
                    else {
                      if (!w.value) continue;
                      x.push(a(t.thisExpression(), w));
                    }
                  }
                }
                if (x.length) {
                  if (!f) {
                    var k = t.classMethod(
                      "constructor",
                      t.identifier("constructor"),
                      [],
                      t.blockStatement([])
                    );
                    l &&
                      ((k.params = [t.restElement(t.identifier("args"))]),
                      k.body.body.push(
                        t.returnStatement(
                          t.callExpression(t.super(), [
                            t.spreadElement(t.identifier("args")),
                          ])
                        )
                      ));
                    var P = h.unshiftContainer("body", k);
                    f = P[0];
                  }
                  for (
                    var T = { collision: !1, scope: f.scope },
                      O = p,
                      B = Array.isArray(O),
                      I = 0,
                      O = B ? O : (0, s.default)(O);
                    ;

                  ) {
                    var N;
                    if (B) {
                      if (I >= O.length) break;
                      N = O[I++];
                    } else {
                      if (((I = O.next()), I.done)) break;
                      N = I.value;
                    }
                    var M = N;
                    if ((M.traverse(i, T), T.collision)) break;
                  }
                  if (T.collision) {
                    var R = e.scope.generateUidIdentifier("initialiseProps");
                    b.push(
                      t.variableDeclaration("var", [
                        t.variableDeclarator(
                          R,
                          t.functionExpression(null, [], t.blockStatement(x))
                        ),
                      ])
                    ),
                      (x = [
                        t.expressionStatement(
                          t.callExpression(
                            t.memberExpression(R, t.identifier("call")),
                            [t.thisExpression()]
                          )
                        ),
                      ]);
                  }
                  if (l) {
                    var L = [];
                    f.traverse(n, L);
                    for (
                      var j = L,
                        V = Array.isArray(j),
                        U = 0,
                        j = V ? j : (0, s.default)(j);
                      ;

                    ) {
                      var G;
                      if (V) {
                        if (U >= j.length) break;
                        G = j[U++];
                      } else {
                        if (((U = j.next()), U.done)) break;
                        G = U.value;
                      }
                      var W = G;
                      W.insertAfter(x);
                    }
                  } else f.get("body").unshiftContainer("body", x);
                }
                for (
                  var Y = p,
                    q = Array.isArray(Y),
                    K = 0,
                    Y = q ? Y : (0, s.default)(Y);
                  ;

                ) {
                  var H;
                  if (q) {
                    if (K >= Y.length) break;
                    H = Y[K++];
                  } else {
                    if (((K = Y.next()), K.done)) break;
                    H = K.value;
                  }
                  var J = H;
                  J.remove();
                }
                b.length &&
                  (e.isClassExpression()
                    ? (e.scope.push({ id: E }),
                      e.replaceWith(t.assignmentExpression("=", E, e.node)))
                    : (e.node.id || (e.node.id = E),
                      e.parentPath.isExportDeclaration() && (e = e.parentPath)),
                  e.insertAfter(b));
              }
            },
            ArrowFunctionExpression: function (e) {
              var t = e.get("body");
              if (t.isClassExpression()) {
                var r = t.get("body"),
                  n = r.get("body");
                n.some(function (e) {
                  return e.isClassProperty();
                }) && e.ensureBlock();
              }
            },
          },
        };
      };
      var a = r(52),
        o = n(a),
        u = r(12),
        l = n(u);
      e.exports = t.default;
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function (e) {
          var t = e.types;
          return {
            visitor: {
              ArrowFunctionExpression: function (e, r) {
                if (r.opts.spec) {
                  var n = e.node;
                  if (n.shadow) return;
                  (n.shadow = { this: !1 }), (n.type = "FunctionExpression");
                  var i = t.thisExpression();
                  (i._forceShadow = e),
                    e.ensureBlock(),
                    e
                      .get("body")
                      .unshiftContainer(
                        "body",
                        t.expressionStatement(
                          t.callExpression(r.addHelper("newArrowCheck"), [
                            t.thisExpression(),
                            i,
                          ])
                        )
                      ),
                    e.replaceWith(
                      t.callExpression(
                        t.memberExpression(n, t.identifier("bind")),
                        [t.thisExpression()]
                      )
                    );
                } else e.arrowFunctionToShadowed();
              },
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        return E.isLoop(e.parent) || E.isCatchClause(e.parent);
      }
      function a(e) {
        return (
          !!E.isVariableDeclaration(e) &&
          (!!e[E.BLOCK_SCOPED_SYMBOL] || "let" === e.kind || "const" === e.kind)
        );
      }
      function o(e, t, r, n) {
        var i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
        if ((t || (t = e.node), !E.isFor(r)))
          for (var s = 0; s < t.declarations.length; s++) {
            var a = t.declarations[s];
            a.init = a.init || n.buildUndefinedNode();
          }
        if (((t[E.BLOCK_SCOPED_SYMBOL] = !0), (t.kind = "var"), i)) {
          var o = n.getFunctionParent(),
            u = e.getBindingIdentifiers();
          for (var l in u) {
            var c = n.getOwnBinding(l);
            c && (c.kind = "var"), n.moveBindingTo(l, o);
          }
        }
      }
      function u(e) {
        return E.isVariableDeclaration(e, { kind: "var" }) && !a(e);
      }
      function l(e) {
        return E.isBreakStatement(e)
          ? "break"
          : E.isContinueStatement(e)
          ? "continue"
          : void 0;
      }
      t.__esModule = !0;
      var c = r(34),
        f = i(c),
        p = r(33),
        h = i(p),
        d = r(3),
        m = i(d);
      t.default = function () {
        return {
          visitor: {
            VariableDeclaration: function (e, t) {
              var r = e.node,
                n = e.parent,
                i = e.scope;
              if (a(r) && (o(e, null, n, i, !0), r._tdzThis)) {
                for (var s = [r], u = 0; u < r.declarations.length; u++) {
                  var l = r.declarations[u];
                  if (l.init) {
                    var c = E.assignmentExpression("=", l.id, l.init);
                    (c._ignoreBlockScopingTDZ = !0),
                      s.push(E.expressionStatement(c));
                  }
                  l.init = t.addHelper("temporalUndefined");
                }
                (r._blockHoist = 2),
                  e.isCompletionRecord() &&
                    s.push(E.expressionStatement(i.buildUndefinedNode())),
                  e.replaceWithMultiple(s);
              }
            },
            Loop: function (e, t) {
              var r = e.node,
                n = e.parent,
                i = e.scope;
              E.ensureBlock(r);
              var s = new I(e, e.get("body"), n, i, t),
                a = s.run();
              a && e.replaceWith(a);
            },
            CatchClause: function (e, t) {
              var r = e.parent,
                n = e.scope,
                i = new I(null, e.get("body"), r, n, t);
              i.run();
            },
            "BlockStatement|SwitchStatement|Program": function (e, t) {
              if (!s(e)) {
                var r = new I(null, e, e.parent, e.scope, t);
                r.run();
              }
            },
          },
        };
      };
      var v = r(7),
        y = i(v),
        g = r(269),
        b = r(1),
        E = n(b),
        x = r(216),
        A = i(x),
        D = r(515),
        C = i(D),
        S = r(12),
        _ = i(S),
        w = (0, _.default)(
          '\n  if (typeof RETURN === "object") return RETURN.v;\n'
        ),
        F = y.default.visitors.merge([
          {
            Function: function (e, t) {
              return e.traverse(k, t), e.skip();
            },
          },
          g.visitor,
        ]),
        k = y.default.visitors.merge([
          {
            ReferencedIdentifier: function (e, t) {
              var r = t.letReferences[e.node.name];
              if (r) {
                var n = e.scope.getBindingIdentifier(e.node.name);
                (n && n !== r) || (t.closurify = !0);
              }
            },
          },
          g.visitor,
        ]),
        P = {
          enter: function (e, t) {
            var r = e.node,
              n = e.parent;
            if (e.isForStatement()) {
              if (u(r.init, r)) {
                var i = t.pushDeclar(r.init);
                1 === i.length
                  ? (r.init = i[0])
                  : (r.init = E.sequenceExpression(i));
              }
            } else if (e.isFor())
              u(r.left, r) &&
                (t.pushDeclar(r.left), (r.left = r.left.declarations[0].id));
            else if (u(r, n))
              e.replaceWithMultiple(
                t.pushDeclar(r).map(function (e) {
                  return E.expressionStatement(e);
                })
              );
            else if (e.isFunction()) return e.skip();
          },
        },
        T = {
          LabeledStatement: function (e, t) {
            var r = e.node;
            t.innerLabels.push(r.label.name);
          },
        },
        O = {
          enter: function (e, t) {
            if (e.isAssignmentExpression() || e.isUpdateExpression()) {
              var r = e.getBindingIdentifiers();
              for (var n in r)
                t.outsideReferences[n] === e.scope.getBindingIdentifier(n) &&
                  (t.reassignments[n] = !0);
            }
          },
        },
        B = {
          Loop: function (e, t) {
            var r = t.ignoreLabeless;
            (t.ignoreLabeless = !0),
              e.traverse(B, t),
              (t.ignoreLabeless = r),
              e.skip();
          },
          Function: function (e) {
            e.skip();
          },
          SwitchCase: function (e, t) {
            var r = t.inSwitchCase;
            (t.inSwitchCase = !0),
              e.traverse(B, t),
              (t.inSwitchCase = r),
              e.skip();
          },
          "BreakStatement|ContinueStatement|ReturnStatement": function (e, t) {
            var r = e.node,
              n = e.parent,
              i = e.scope;
            if (!r[this.LOOP_IGNORE]) {
              var s = void 0,
                a = l(r);
              if (a) {
                if (r.label) {
                  if (t.innerLabels.indexOf(r.label.name) >= 0) return;
                  a = a + "|" + r.label.name;
                } else {
                  if (t.ignoreLabeless) return;
                  if (t.inSwitchCase) return;
                  if (E.isBreakStatement(r) && E.isSwitchCase(n)) return;
                }
                (t.hasBreakContinue = !0),
                  (t.map[a] = r),
                  (s = E.stringLiteral(a));
              }
              e.isReturnStatement() &&
                ((t.hasReturn = !0),
                (s = E.objectExpression([
                  E.objectProperty(
                    E.identifier("v"),
                    r.argument || i.buildUndefinedNode()
                  ),
                ]))),
                s &&
                  ((s = E.returnStatement(s)),
                  (s[this.LOOP_IGNORE] = !0),
                  e.skip(),
                  e.replaceWith(E.inherits(s, r)));
            }
          },
        },
        I = (function () {
          function e(t, r, n, i, s) {
            (0, m.default)(this, e),
              (this.parent = n),
              (this.scope = i),
              (this.file = s),
              (this.blockPath = r),
              (this.block = r.node),
              (this.outsideLetReferences = (0, h.default)(null)),
              (this.hasLetReferences = !1),
              (this.letReferences = (0, h.default)(null)),
              (this.body = []),
              t &&
                ((this.loopParent = t.parent),
                (this.loopLabel =
                  E.isLabeledStatement(this.loopParent) &&
                  this.loopParent.label),
                (this.loopPath = t),
                (this.loop = t.node));
          }
          return (
            (e.prototype.run = function () {
              var e = this.block;
              if (!e._letDone) {
                e._letDone = !0;
                var t = this.getLetReferences();
                if (E.isFunction(this.parent) || E.isProgram(this.block))
                  return void this.updateScopeInfo();
                if (this.hasLetReferences)
                  return (
                    t ? this.wrapClosure() : this.remap(),
                    this.updateScopeInfo(),
                    this.loopLabel && !E.isLabeledStatement(this.loopParent)
                      ? E.labeledStatement(this.loopLabel, this.loop)
                      : void 0
                  );
              }
            }),
            (e.prototype.updateScopeInfo = function () {
              var e = this.scope,
                t = e.getFunctionParent(),
                r = this.letReferences;
              for (var n in r) {
                var i = r[n],
                  s = e.getBinding(i.name);
                s &&
                  (("let" !== s.kind && "const" !== s.kind) ||
                    ((s.kind = "var"), e.moveBindingTo(i.name, t)));
              }
            }),
            (e.prototype.remap = function () {
              var e = this.letReferences,
                t = this.scope;
              for (var r in e) {
                var n = e[r];
                (t.parentHasBinding(r) || t.hasGlobal(r)) &&
                  (t.hasOwnBinding(r) && t.rename(n.name),
                  this.blockPath.scope.hasOwnBinding(r) &&
                    this.blockPath.scope.rename(n.name));
              }
            }),
            (e.prototype.wrapClosure = function () {
              var e = this.block,
                t = this.outsideLetReferences;
              if (this.loop)
                for (var r in t) {
                  var n = t[r];
                  (this.scope.hasGlobal(n.name) ||
                    this.scope.parentHasBinding(n.name)) &&
                    (delete t[n.name],
                    delete this.letReferences[n.name],
                    this.scope.rename(n.name),
                    (this.letReferences[n.name] = n),
                    (t[n.name] = n));
                }
              (this.has = this.checkLoop()), this.hoistVarDeclarations();
              var i = (0, A.default)(t),
                s = (0, A.default)(t),
                a = this.blockPath.isSwitchStatement(),
                o = E.functionExpression(
                  null,
                  i,
                  E.blockStatement(a ? [e] : e.body)
                );
              (o.shadow = !0), this.addContinuations(o);
              var u = o;
              this.loop &&
                ((u = this.scope.generateUidIdentifier("loop")),
                this.loopPath.insertBefore(
                  E.variableDeclaration("var", [E.variableDeclarator(u, o)])
                ));
              var l = E.callExpression(u, s),
                c = this.scope.generateUidIdentifier("ret"),
                f = y.default.hasType(
                  o.body,
                  this.scope,
                  "YieldExpression",
                  E.FUNCTION_TYPES
                );
              f && ((o.generator = !0), (l = E.yieldExpression(l, !0)));
              var p = y.default.hasType(
                o.body,
                this.scope,
                "AwaitExpression",
                E.FUNCTION_TYPES
              );
              p && ((o.async = !0), (l = E.awaitExpression(l))),
                this.buildClosure(c, l),
                a
                  ? this.blockPath.replaceWithMultiple(this.body)
                  : (e.body = this.body);
            }),
            (e.prototype.buildClosure = function (e, t) {
              var r = this.has;
              r.hasReturn || r.hasBreakContinue
                ? this.buildHas(e, t)
                : this.body.push(E.expressionStatement(t));
            }),
            (e.prototype.addContinuations = function (e) {
              var t = {
                reassignments: {},
                outsideReferences: this.outsideLetReferences,
              };
              this.scope.traverse(e, O, t);
              for (var r = 0; r < e.params.length; r++) {
                var n = e.params[r];
                if (t.reassignments[n.name]) {
                  var i = this.scope.generateUidIdentifier(n.name);
                  (e.params[r] = i),
                    this.scope.rename(n.name, i.name, e),
                    e.body.body.push(
                      E.expressionStatement(E.assignmentExpression("=", n, i))
                    );
                }
              }
            }),
            (e.prototype.getLetReferences = function () {
              var e = this,
                t = this.block,
                r = [];
              if (this.loop) {
                var n = this.loop.left || this.loop.init;
                a(n) &&
                  (r.push(n),
                  (0, C.default)(
                    this.outsideLetReferences,
                    E.getBindingIdentifiers(n)
                  ));
              }
              var i = function n(i, s) {
                (s = s || i.node),
                  (E.isClassDeclaration(s) ||
                    E.isFunctionDeclaration(s) ||
                    a(s)) &&
                    (a(s) && o(i, s, t, e.scope),
                    (r = r.concat(s.declarations || s))),
                  E.isLabeledStatement(s) && n(i.get("body"), s.body);
              };
              if (t.body)
                for (var s = 0; s < t.body.length; s++) {
                  var u = this.blockPath.get("body")[s];
                  i(u);
                }
              if (t.cases)
                for (var l = 0; l < t.cases.length; l++)
                  for (
                    var c = t.cases[l].consequent, f = 0;
                    f < c.length;
                    f++
                  ) {
                    var p = this.blockPath.get("cases")[l],
                      h = c[f];
                    i(p, h);
                  }
              for (var d = 0; d < r.length; d++) {
                var m = r[d],
                  v = E.getBindingIdentifiers(m, !1, !0);
                (0, C.default)(this.letReferences, v),
                  (this.hasLetReferences = !0);
              }
              if (this.hasLetReferences) {
                var y = {
                  letReferences: this.letReferences,
                  closurify: !1,
                  file: this.file,
                };
                return this.blockPath.traverse(F, y), y.closurify;
              }
            }),
            (e.prototype.checkLoop = function () {
              var e = {
                hasBreakContinue: !1,
                ignoreLabeless: !1,
                inSwitchCase: !1,
                innerLabels: [],
                hasReturn: !1,
                isLoop: !!this.loop,
                map: {},
                LOOP_IGNORE: (0, f.default)(),
              };
              return (
                this.blockPath.traverse(T, e), this.blockPath.traverse(B, e), e
              );
            }),
            (e.prototype.hoistVarDeclarations = function () {
              this.blockPath.traverse(P, this);
            }),
            (e.prototype.pushDeclar = function (e) {
              var t = [],
                r = E.getBindingIdentifiers(e);
              for (var n in r) t.push(E.variableDeclarator(r[n]));
              this.body.push(E.variableDeclaration(e.kind, t));
              for (var i = [], s = 0; s < e.declarations.length; s++) {
                var a = e.declarations[s];
                if (a.init) {
                  var o = E.assignmentExpression("=", a.id, a.init);
                  i.push(E.inherits(o, a));
                }
              }
              return i;
            }),
            (e.prototype.buildHas = function (e, t) {
              var r = this.body;
              r.push(
                E.variableDeclaration("var", [E.variableDeclarator(e, t)])
              );
              var n = void 0,
                i = this.has,
                s = [];
              if ((i.hasReturn && (n = w({ RETURN: e })), i.hasBreakContinue)) {
                for (var a in i.map)
                  s.push(E.switchCase(E.stringLiteral(a), [i.map[a]]));
                if (
                  (i.hasReturn && s.push(E.switchCase(null, [n])),
                  1 === s.length)
                ) {
                  var o = s[0];
                  r.push(
                    E.ifStatement(
                      E.binaryExpression("===", e, o.test),
                      o.consequent[0]
                    )
                  );
                } else {
                  if (this.loop)
                    for (var u = 0; u < s.length; u++) {
                      var l = s[u].consequent[0];
                      E.isBreakStatement(l) &&
                        !l.label &&
                        (l.label = this.loopLabel =
                          this.loopLabel ||
                          this.scope.generateUidIdentifier("loop"));
                    }
                  r.push(E.switchStatement(e, s));
                }
              } else i.hasReturn && r.push(n);
            }),
            e
          );
        })();
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e, t) {
        var r = t._guessExecutionStatusRelativeTo(e);
        return "before" === r ? "inside" : "after" === r ? "outside" : "maybe";
      }
      function s(e, t) {
        return u.callExpression(t.addHelper("temporalRef"), [
          e,
          u.stringLiteral(e.name),
          t.addHelper("temporalUndefined"),
        ]);
      }
      function a(e, t, r) {
        var n = r.letReferences[e.name];
        return !!n && t.getBindingIdentifier(e.name) === n;
      }
      (t.__esModule = !0), (t.visitor = void 0);
      var o = r(1),
        u = n(o);
      t.visitor = {
        ReferencedIdentifier: function (e, t) {
          if (this.file.opts.tdz) {
            var r = e.node,
              n = e.parent,
              o = e.scope;
            if (!e.parentPath.isFor({ left: r }) && a(r, o, t)) {
              var l = o.getBinding(r.name).path,
                c = i(e, l);
              if ("inside" !== c)
                if ("maybe" === c) {
                  var f = s(r, t.file);
                  if (
                    ((l.parent._tdzThis = !0),
                    e.skip(),
                    e.parentPath.isUpdateExpression())
                  ) {
                    if (n._ignoreBlockScopingTDZ) return;
                    e.parentPath.replaceWith(u.sequenceExpression([f, n]));
                  } else e.replaceWith(f);
                } else
                  "outside" === c &&
                    e.replaceWith(
                      u.throwStatement(
                        u.inherits(
                          u.newExpression(u.identifier("ReferenceError"), [
                            u.stringLiteral(
                              r.name + " is not defined - temporal dead zone"
                            ),
                          ]),
                          r
                        )
                      )
                    );
            }
          }
        },
        AssignmentExpression: {
          exit: function (e, t) {
            if (this.file.opts.tdz) {
              var r = e.node;
              if (!r._ignoreBlockScopingTDZ) {
                var n = [],
                  i = e.getBindingIdentifiers();
                for (var o in i) {
                  var l = i[o];
                  a(l, e.scope, t) && n.push(s(l, t.file));
                }
                n.length &&
                  ((r._ignoreBlockScopingTDZ = !0),
                  n.push(r),
                  e.replaceWithMultiple(n.map(u.expressionStatement)));
              }
            }
          },
        },
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(34),
        s = n(i);
      t.default = function (e) {
        var t = e.types,
          r = (0, s.default)();
        return {
          visitor: {
            ExportDefaultDeclaration: function (e) {
              if (e.get("declaration").isClassDeclaration()) {
                var r = e.node,
                  n =
                    r.declaration.id || e.scope.generateUidIdentifier("class");
                (r.declaration.id = n),
                  e.replaceWith(r.declaration),
                  e.insertAfter(t.exportDefaultDeclaration(n));
              }
            },
            ClassDeclaration: function (e) {
              var r = e.node,
                n = r.id || e.scope.generateUidIdentifier("class");
              e.replaceWith(
                t.variableDeclaration("let", [
                  t.variableDeclarator(n, t.toExpression(r)),
                ])
              );
            },
            ClassExpression: function (e, t) {
              var n = e.node;
              if (!n[r]) {
                var i = (0, f.default)(e);
                if (i && i !== n) return e.replaceWith(i);
                n[r] = !0;
                var s = l.default;
                t.opts.loose && (s = o.default),
                  e.replaceWith(new s(e, t.file).run());
              }
            },
          },
        };
      };
      var a = r(271),
        o = n(a),
        u = r(157),
        l = n(u),
        c = r(52),
        f = n(c);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(3),
        a = i(s),
        o = r(40),
        u = i(o),
        l = r(39),
        c = i(l),
        f = r(52),
        p = i(f),
        h = r(157),
        d = i(h),
        m = r(1),
        v = n(m),
        y = (function (e) {
          function t() {
            (0, a.default)(this, t);
            var r = (0, u.default)(this, e.apply(this, arguments));
            return (r.isLoose = !0), r;
          }
          return (
            (0, c.default)(t, e),
            (t.prototype._processMethod = function (e, t) {
              if (!e.decorators) {
                var r = this.classRef;
                e.static ||
                  (r = v.memberExpression(r, v.identifier("prototype")));
                var n = v.memberExpression(
                    r,
                    e.key,
                    e.computed || v.isLiteral(e.key)
                  ),
                  i = v.functionExpression(
                    null,
                    e.params,
                    e.body,
                    e.generator,
                    e.async
                  );
                i.returnType = e.returnType;
                var s = v.toComputedKey(e, e.key);
                v.isStringLiteral(s) &&
                  (i = (0, p.default)({ node: i, id: s, scope: t }));
                var a = v.expressionStatement(
                  v.assignmentExpression("=", n, i)
                );
                return v.inheritsComments(a, e), this.body.push(a), !0;
              }
            }),
            t
          );
        })(d.default);
      (t.default = y), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        function t(e) {
          return o.isObjectProperty(e)
            ? e.value
            : o.isObjectMethod(e)
            ? o.functionExpression(null, e.params, e.body, e.generator, e.async)
            : void 0;
        }
        function r(e, r, i) {
          "get" === r.kind && "set" === r.kind
            ? n(e, r, i)
            : i.push(
                o.expressionStatement(
                  o.assignmentExpression(
                    "=",
                    o.memberExpression(
                      e,
                      r.key,
                      r.computed || o.isLiteral(r.key)
                    ),
                    t(r)
                  )
                )
              );
        }
        function n(e, r) {
          var n = (e.objId, e.body),
            i = e.getMutatorId,
            s = e.scope,
            a =
              !r.computed && o.isIdentifier(r.key)
                ? o.stringLiteral(r.key.name)
                : r.key,
            u = s.maybeGenerateMemoised(a);
          u &&
            (n.push(o.expressionStatement(o.assignmentExpression("=", u, a))),
            (a = u)),
            n.push.apply(
              n,
              l({
                MUTATOR_MAP_REF: i(),
                KEY: a,
                VALUE: t(r),
                KIND: o.identifier(r.kind),
              })
            );
        }
        function i(e) {
          for (
            var t = e.computedProps,
              i = Array.isArray(t),
              a = 0,
              t = i ? t : (0, s.default)(t);
            ;

          ) {
            var o;
            if (i) {
              if (a >= t.length) break;
              o = t[a++];
            } else {
              if (((a = t.next()), a.done)) break;
              o = a.value;
            }
            var u = o;
            "get" === u.kind || "set" === u.kind
              ? n(e, u)
              : r(e.objId, u, e.body);
          }
        }
        function a(e) {
          for (
            var i = e.objId,
              a = e.body,
              u = e.computedProps,
              l = e.state,
              c = u,
              f = Array.isArray(c),
              p = 0,
              c = f ? c : (0, s.default)(c);
            ;

          ) {
            var h;
            if (f) {
              if (p >= c.length) break;
              h = c[p++];
            } else {
              if (((p = c.next()), p.done)) break;
              h = p.value;
            }
            var d = h,
              m = o.toComputedKey(d);
            if ("get" === d.kind || "set" === d.kind) n(e, d);
            else if (o.isStringLiteral(m, { value: "__proto__" })) r(i, d, a);
            else {
              if (1 === u.length)
                return o.callExpression(l.addHelper("defineProperty"), [
                  e.initPropExpression,
                  m,
                  t(d),
                ]);
              a.push(
                o.expressionStatement(
                  o.callExpression(l.addHelper("defineProperty"), [i, m, t(d)])
                )
              );
            }
          }
        }
        var o = e.types,
          u = e.template,
          l = u(
            "\n    MUTATOR_MAP_REF[KEY] = MUTATOR_MAP_REF[KEY] || {};\n    MUTATOR_MAP_REF[KEY].KIND = VALUE;\n  "
          );
        return {
          visitor: {
            ObjectExpression: {
              exit: function (e, t) {
                for (
                  var r = e.node,
                    n = e.parent,
                    u = e.scope,
                    l = !1,
                    c = r.properties,
                    f = Array.isArray(c),
                    p = 0,
                    c = f ? c : (0, s.default)(c);
                  ;

                ) {
                  var h;
                  if (f) {
                    if (p >= c.length) break;
                    h = c[p++];
                  } else {
                    if (((p = c.next()), p.done)) break;
                    h = p.value;
                  }
                  var d = h;
                  if ((l = d.computed === !0)) break;
                }
                if (l) {
                  for (
                    var m = [],
                      v = [],
                      y = !1,
                      g = r.properties,
                      b = Array.isArray(g),
                      E = 0,
                      g = b ? g : (0, s.default)(g);
                    ;

                  ) {
                    var x;
                    if (b) {
                      if (E >= g.length) break;
                      x = g[E++];
                    } else {
                      if (((E = g.next()), E.done)) break;
                      x = E.value;
                    }
                    var A = x;
                    A.computed && (y = !0), y ? v.push(A) : m.push(A);
                  }
                  var D = u.generateUidIdentifierBasedOnNode(n),
                    C = o.objectExpression(m),
                    S = [];
                  S.push(
                    o.variableDeclaration("var", [o.variableDeclarator(D, C)])
                  );
                  var _ = a;
                  t.opts.loose && (_ = i);
                  var w = void 0,
                    F = function () {
                      return (
                        w ||
                          ((w = u.generateUidIdentifier("mutatorMap")),
                          S.push(
                            o.variableDeclaration("var", [
                              o.variableDeclarator(w, o.objectExpression([])),
                            ])
                          )),
                        w
                      );
                    },
                    k = _({
                      scope: u,
                      objId: D,
                      body: S,
                      computedProps: v,
                      initPropExpression: C,
                      getMutatorId: F,
                      state: t,
                    });
                  w &&
                    S.push(
                      o.expressionStatement(
                        o.callExpression(
                          t.addHelper("defineEnumerableProperties"),
                          [D, w]
                        )
                      )
                    ),
                    k
                      ? e.replaceWith(k)
                      : (S.push(o.expressionStatement(D)),
                        e.replaceWithMultiple(S));
                }
              },
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(3),
        s = n(i),
        a = r(2),
        o = n(a);
      (t.default = function (e) {
        function t(e) {
          for (
            var t = e.declarations,
              r = Array.isArray(t),
              i = 0,
              t = r ? t : (0, o.default)(t);
            ;

          ) {
            var s;
            if (r) {
              if (i >= t.length) break;
              s = t[i++];
            } else {
              if (((i = t.next()), i.done)) break;
              s = i.value;
            }
            var a = s;
            if (n.isPattern(a.id)) return !0;
          }
          return !1;
        }
        function r(e) {
          for (
            var t = e.elements,
              r = Array.isArray(t),
              i = 0,
              t = r ? t : (0, o.default)(t);
            ;

          ) {
            var s;
            if (r) {
              if (i >= t.length) break;
              s = t[i++];
            } else {
              if (((i = t.next()), i.done)) break;
              s = i.value;
            }
            var a = s;
            if (n.isRestElement(a)) return !0;
          }
          return !1;
        }
        var n = e.types,
          i = {
            ReferencedIdentifier: function (e, t) {
              t.bindings[e.node.name] && ((t.deopt = !0), e.stop());
            },
          },
          a = (function () {
            function e(t) {
              (0, s.default)(this, e),
                (this.blockHoist = t.blockHoist),
                (this.operator = t.operator),
                (this.arrays = {}),
                (this.nodes = t.nodes || []),
                (this.scope = t.scope),
                (this.file = t.file),
                (this.kind = t.kind);
            }
            return (
              (e.prototype.buildVariableAssignment = function (e, t) {
                var r = this.operator;
                n.isMemberExpression(e) && (r = "=");
                var i = void 0;
                return (
                  (i = r
                    ? n.expressionStatement(n.assignmentExpression(r, e, t))
                    : n.variableDeclaration(this.kind, [
                        n.variableDeclarator(e, t),
                      ])),
                  (i._blockHoist = this.blockHoist),
                  i
                );
              }),
              (e.prototype.buildVariableDeclaration = function (e, t) {
                var r = n.variableDeclaration("var", [
                  n.variableDeclarator(e, t),
                ]);
                return (r._blockHoist = this.blockHoist), r;
              }),
              (e.prototype.push = function (e, t) {
                n.isObjectPattern(e)
                  ? this.pushObjectPattern(e, t)
                  : n.isArrayPattern(e)
                  ? this.pushArrayPattern(e, t)
                  : n.isAssignmentPattern(e)
                  ? this.pushAssignmentPattern(e, t)
                  : this.nodes.push(this.buildVariableAssignment(e, t));
              }),
              (e.prototype.toArray = function (e, t) {
                return this.file.opts.loose ||
                  (n.isIdentifier(e) && this.arrays[e.name])
                  ? e
                  : this.scope.toArray(e, t);
              }),
              (e.prototype.pushAssignmentPattern = function (e, t) {
                var r = this.scope.generateUidIdentifierBasedOnNode(t),
                  i = n.variableDeclaration("var", [
                    n.variableDeclarator(r, t),
                  ]);
                (i._blockHoist = this.blockHoist), this.nodes.push(i);
                var s = n.conditionalExpression(
                    n.binaryExpression("===", r, n.identifier("undefined")),
                    e.right,
                    r
                  ),
                  a = e.left;
                if (n.isPattern(a)) {
                  var o = n.expressionStatement(
                    n.assignmentExpression("=", r, s)
                  );
                  (o._blockHoist = this.blockHoist),
                    this.nodes.push(o),
                    this.push(a, r);
                } else this.nodes.push(this.buildVariableAssignment(a, s));
              }),
              (e.prototype.pushObjectRest = function (e, t, r, i) {
                for (var s = [], a = 0; a < e.properties.length; a++) {
                  var o = e.properties[a];
                  if (a >= i) break;
                  if (!n.isRestProperty(o)) {
                    var u = o.key;
                    n.isIdentifier(u) &&
                      !o.computed &&
                      (u = n.stringLiteral(o.key.name)),
                      s.push(u);
                  }
                }
                s = n.arrayExpression(s);
                var l = n.callExpression(
                  this.file.addHelper("objectWithoutProperties"),
                  [t, s]
                );
                this.nodes.push(this.buildVariableAssignment(r.argument, l));
              }),
              (e.prototype.pushObjectProperty = function (e, t) {
                n.isLiteral(e.key) && (e.computed = !0);
                var r = e.value,
                  i = n.memberExpression(t, e.key, e.computed);
                n.isPattern(r)
                  ? this.push(r, i)
                  : this.nodes.push(this.buildVariableAssignment(r, i));
              }),
              (e.prototype.pushObjectPattern = function (e, t) {
                if (
                  (e.properties.length ||
                    this.nodes.push(
                      n.expressionStatement(
                        n.callExpression(
                          this.file.addHelper("objectDestructuringEmpty"),
                          [t]
                        )
                      )
                    ),
                  e.properties.length > 1 && !this.scope.isStatic(t))
                ) {
                  var r = this.scope.generateUidIdentifierBasedOnNode(t);
                  this.nodes.push(this.buildVariableDeclaration(r, t)), (t = r);
                }
                for (var i = 0; i < e.properties.length; i++) {
                  var s = e.properties[i];
                  n.isRestProperty(s)
                    ? this.pushObjectRest(e, t, s, i)
                    : this.pushObjectProperty(s, t);
                }
              }),
              (e.prototype.canUnpackArrayPattern = function (e, t) {
                if (!n.isArrayExpression(t)) return !1;
                if (!(e.elements.length > t.elements.length)) {
                  if (e.elements.length < t.elements.length && !r(e)) return !1;
                  for (
                    var s = e.elements,
                      a = Array.isArray(s),
                      u = 0,
                      s = a ? s : (0, o.default)(s);
                    ;

                  ) {
                    var l;
                    if (a) {
                      if (u >= s.length) break;
                      l = s[u++];
                    } else {
                      if (((u = s.next()), u.done)) break;
                      l = u.value;
                    }
                    var c = l;
                    if (!c) return !1;
                    if (n.isMemberExpression(c)) return !1;
                  }
                  for (
                    var f = t.elements,
                      p = Array.isArray(f),
                      h = 0,
                      f = p ? f : (0, o.default)(f);
                    ;

                  ) {
                    var d;
                    if (p) {
                      if (h >= f.length) break;
                      d = f[h++];
                    } else {
                      if (((h = f.next()), h.done)) break;
                      d = h.value;
                    }
                    var m = d;
                    if (n.isSpreadElement(m)) return !1;
                    if (n.isCallExpression(m)) return !1;
                    if (n.isMemberExpression(m)) return !1;
                  }
                  var v = n.getBindingIdentifiers(e),
                    y = { deopt: !1, bindings: v };
                  return this.scope.traverse(t, i, y), !y.deopt;
                }
              }),
              (e.prototype.pushUnpackedArrayPattern = function (e, t) {
                for (var r = 0; r < e.elements.length; r++) {
                  var i = e.elements[r];
                  n.isRestElement(i)
                    ? this.push(
                        i.argument,
                        n.arrayExpression(t.elements.slice(r))
                      )
                    : this.push(i, t.elements[r]);
                }
              }),
              (e.prototype.pushArrayPattern = function (e, t) {
                if (e.elements) {
                  if (this.canUnpackArrayPattern(e, t))
                    return this.pushUnpackedArrayPattern(e, t);
                  var i = !r(e) && e.elements.length,
                    s = this.toArray(t, i);
                  n.isIdentifier(s)
                    ? (t = s)
                    : ((t = this.scope.generateUidIdentifierBasedOnNode(t)),
                      (this.arrays[t.name] = !0),
                      this.nodes.push(this.buildVariableDeclaration(t, s)));
                  for (var a = 0; a < e.elements.length; a++) {
                    var o = e.elements[a];
                    if (o) {
                      var u = void 0;
                      n.isRestElement(o)
                        ? ((u = this.toArray(t)),
                          a > 0 &&
                            (u = n.callExpression(
                              n.memberExpression(u, n.identifier("slice")),
                              [n.numericLiteral(a)]
                            )),
                          (o = o.argument))
                        : (u = n.memberExpression(t, n.numericLiteral(a), !0)),
                        this.push(o, u);
                    }
                  }
                }
              }),
              (e.prototype.init = function (e, t) {
                if (!n.isArrayExpression(t) && !n.isMemberExpression(t)) {
                  var r = this.scope.maybeGenerateMemoised(t, !0);
                  r &&
                    (this.nodes.push(this.buildVariableDeclaration(r, t)),
                    (t = r));
                }
                return this.push(e, t), this.nodes;
              }),
              e
            );
          })();
        return {
          visitor: {
            ExportNamedDeclaration: function (e) {
              var r = e.get("declaration");
              if (r.isVariableDeclaration() && t(r.node)) {
                var i = [];
                for (var s in e.getOuterBindingIdentifiers(e)) {
                  var a = n.identifier(s);
                  i.push(n.exportSpecifier(a, a));
                }
                e.replaceWith(r.node),
                  e.insertAfter(n.exportNamedDeclaration(null, i));
              }
            },
            ForXStatement: function (e, t) {
              var r = e.node,
                i = e.scope,
                s = r.left;
              if (n.isPattern(s)) {
                var o = i.generateUidIdentifier("ref");
                return (
                  (r.left = n.variableDeclaration("var", [
                    n.variableDeclarator(o),
                  ])),
                  e.ensureBlock(),
                  void r.body.body.unshift(
                    n.variableDeclaration("var", [n.variableDeclarator(s, o)])
                  )
                );
              }
              if (n.isVariableDeclaration(s)) {
                var u = s.declarations[0].id;
                if (n.isPattern(u)) {
                  var l = i.generateUidIdentifier("ref");
                  r.left = n.variableDeclaration(s.kind, [
                    n.variableDeclarator(l, null),
                  ]);
                  var c = [],
                    f = new a({ kind: s.kind, file: t, scope: i, nodes: c });
                  f.init(u, l), e.ensureBlock();
                  var p = r.body;
                  p.body = c.concat(p.body);
                }
              }
            },
            CatchClause: function (e, t) {
              var r = e.node,
                i = e.scope,
                s = r.param;
              if (n.isPattern(s)) {
                var o = i.generateUidIdentifier("ref");
                r.param = o;
                var u = [],
                  l = new a({ kind: "let", file: t, scope: i, nodes: u });
                l.init(s, o), (r.body.body = u.concat(r.body.body));
              }
            },
            AssignmentExpression: function (e, t) {
              var r = e.node,
                i = e.scope;
              if (n.isPattern(r.left)) {
                var s = [],
                  o = new a({
                    operator: r.operator,
                    file: t,
                    scope: i,
                    nodes: s,
                  }),
                  u = void 0;
                (!e.isCompletionRecord() &&
                  e.parentPath.isExpressionStatement()) ||
                  ((u = i.generateUidIdentifierBasedOnNode(r.right, "ref")),
                  s.push(
                    n.variableDeclaration("var", [
                      n.variableDeclarator(u, r.right),
                    ])
                  ),
                  n.isArrayExpression(r.right) && (o.arrays[u.name] = !0)),
                  o.init(r.left, u || r.right),
                  u && s.push(n.expressionStatement(u)),
                  e.replaceWithMultiple(s);
              }
            },
            VariableDeclaration: function (e, r) {
              var i = e.node,
                s = e.scope,
                u = e.parent;
              if (!n.isForXStatement(u) && u && e.container && t(i)) {
                for (
                  var l = [], c = void 0, f = 0;
                  f < i.declarations.length;
                  f++
                ) {
                  c = i.declarations[f];
                  var p = c.init,
                    h = c.id,
                    d = new a({
                      blockHoist: i._blockHoist,
                      nodes: l,
                      scope: s,
                      kind: i.kind,
                      file: r,
                    });
                  n.isPattern(h)
                    ? (d.init(h, p),
                      +f !== i.declarations.length - 1 &&
                        n.inherits(l[l.length - 1], c))
                    : l.push(
                        n.inherits(d.buildVariableAssignment(c.id, c.init), c)
                      );
                }
                for (
                  var m = [],
                    v = l,
                    y = Array.isArray(v),
                    g = 0,
                    v = y ? v : (0, o.default)(v);
                  ;

                ) {
                  var b;
                  if (y) {
                    if (g >= v.length) break;
                    b = v[g++];
                  } else {
                    if (((g = v.next()), g.done)) break;
                    b = g.value;
                  }
                  var E = b,
                    x = m[m.length - 1];
                  if (
                    x &&
                    n.isVariableDeclaration(x) &&
                    n.isVariableDeclaration(E) &&
                    x.kind === E.kind
                  ) {
                    var A;
                    (A = x.declarations).push.apply(A, E.declarations);
                  } else m.push(E);
                }
                for (
                  var D = m,
                    C = Array.isArray(D),
                    S = 0,
                    D = C ? D : (0, o.default)(D);
                  ;

                ) {
                  var _;
                  if (C) {
                    if (S >= D.length) break;
                    _ = D[S++];
                  } else {
                    if (((S = D.next()), S.done)) break;
                    _ = S.value;
                  }
                  var w = _;
                  if (w.declarations)
                    for (
                      var F = w.declarations,
                        k = Array.isArray(F),
                        P = 0,
                        F = k ? F : (0, o.default)(F);
                      ;

                    ) {
                      var T;
                      if (k) {
                        if (P >= F.length) break;
                        T = F[P++];
                      } else {
                        if (((P = F.next()), P.done)) break;
                        T = P.value;
                      }
                      var O = T,
                        B = O.id.name;
                      s.bindings[B] && (s.bindings[B].kind = w.kind);
                    }
                }
                1 === m.length ? e.replaceWith(m[0]) : e.replaceWithMultiple(m);
              }
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function (e) {
          function t(e) {
            var t = e.node,
              r = e.scope,
              n = [],
              i = t.right;
            if (!a.isIdentifier(i) || !r.hasBinding(i.name)) {
              var s = r.generateUidIdentifier("arr");
              n.push(
                a.variableDeclaration("var", [a.variableDeclarator(s, i)])
              ),
                (i = s);
            }
            var u = r.generateUidIdentifier("i"),
              l = o({ BODY: t.body, KEY: u, ARR: i });
            a.inherits(l, t), a.ensureBlock(l);
            var c = a.memberExpression(i, u, !0),
              f = t.left;
            return (
              a.isVariableDeclaration(f)
                ? ((f.declarations[0].init = c), l.body.body.unshift(f))
                : l.body.body.unshift(
                    a.expressionStatement(a.assignmentExpression("=", f, c))
                  ),
              e.parentPath.isLabeledStatement() &&
                (l = a.labeledStatement(e.parentPath.node.label, l)),
              n.push(l),
              n
            );
          }
          function r(e, t) {
            var r = e.node,
              n = e.scope,
              s = r.left,
              o = void 0,
              l = void 0;
            if (a.isIdentifier(s) || a.isPattern(s) || a.isMemberExpression(s))
              l = s;
            else {
              if (!a.isVariableDeclaration(s))
                throw t.buildCodeFrameError(s, i.get("unknownForHead", s.type));
              (l = n.generateUidIdentifier("ref")),
                (o = a.variableDeclaration(s.kind, [
                  a.variableDeclarator(s.declarations[0].id, l),
                ]));
            }
            var c = n.generateUidIdentifier("iterator"),
              f = n.generateUidIdentifier("isArray"),
              p = u({
                LOOP_OBJECT: c,
                IS_ARRAY: f,
                OBJECT: r.right,
                INDEX: n.generateUidIdentifier("i"),
                ID: l,
              });
            return o || p.body.body.shift(), { declar: o, node: p, loop: p };
          }
          function n(e, t) {
            var r = e.node,
              n = e.scope,
              s = e.parent,
              o = r.left,
              u = void 0,
              c = n.generateUidIdentifier("step"),
              f = a.memberExpression(c, a.identifier("value"));
            if (a.isIdentifier(o) || a.isPattern(o) || a.isMemberExpression(o))
              u = a.expressionStatement(a.assignmentExpression("=", o, f));
            else {
              if (!a.isVariableDeclaration(o))
                throw t.buildCodeFrameError(o, i.get("unknownForHead", o.type));
              u = a.variableDeclaration(o.kind, [
                a.variableDeclarator(o.declarations[0].id, f),
              ]);
            }
            var p = n.generateUidIdentifier("iterator"),
              h = l({
                ITERATOR_HAD_ERROR_KEY: n.generateUidIdentifier(
                  "didIteratorError"
                ),
                ITERATOR_COMPLETION: n.generateUidIdentifier(
                  "iteratorNormalCompletion"
                ),
                ITERATOR_ERROR_KEY: n.generateUidIdentifier("iteratorError"),
                ITERATOR_KEY: p,
                STEP_KEY: c,
                OBJECT: r.right,
                BODY: null,
              }),
              d = a.isLabeledStatement(s),
              m = h[3].block.body,
              v = m[0];
            return (
              d && (m[0] = a.labeledStatement(s.label, v)),
              { replaceParent: d, declar: u, loop: v, node: h }
            );
          }
          var i = e.messages,
            s = e.template,
            a = e.types,
            o = s("\n    for (var KEY = 0; KEY < ARR.length; KEY++) BODY;\n  "),
            u = s(
              "\n    for (var LOOP_OBJECT = OBJECT,\n             IS_ARRAY = Array.isArray(LOOP_OBJECT),\n             INDEX = 0,\n             LOOP_OBJECT = IS_ARRAY ? LOOP_OBJECT : LOOP_OBJECT[Symbol.iterator]();;) {\n      var ID;\n      if (IS_ARRAY) {\n        if (INDEX >= LOOP_OBJECT.length) break;\n        ID = LOOP_OBJECT[INDEX++];\n      } else {\n        INDEX = LOOP_OBJECT.next();\n        if (INDEX.done) break;\n        ID = INDEX.value;\n      }\n    }\n  "
            ),
            l = s(
              "\n    var ITERATOR_COMPLETION = true;\n    var ITERATOR_HAD_ERROR_KEY = false;\n    var ITERATOR_ERROR_KEY = undefined;\n    try {\n      for (var ITERATOR_KEY = OBJECT[Symbol.iterator](), STEP_KEY; !(ITERATOR_COMPLETION = (STEP_KEY = ITERATOR_KEY.next()).done); ITERATOR_COMPLETION = true) {\n      }\n    } catch (err) {\n      ITERATOR_HAD_ERROR_KEY = true;\n      ITERATOR_ERROR_KEY = err;\n    } finally {\n      try {\n        if (!ITERATOR_COMPLETION && ITERATOR_KEY.return) {\n          ITERATOR_KEY.return();\n        }\n      } finally {\n        if (ITERATOR_HAD_ERROR_KEY) {\n          throw ITERATOR_ERROR_KEY;\n        }\n      }\n    }\n  "
            );
          return {
            visitor: {
              ForOfStatement: function (e, i) {
                if (e.get("right").isArrayExpression())
                  return e.parentPath.isLabeledStatement()
                    ? e.parentPath.replaceWithMultiple(t(e))
                    : e.replaceWithMultiple(t(e));
                var s = n;
                i.opts.loose && (s = r);
                var o = e.node,
                  u = s(e, i),
                  l = u.declar,
                  c = u.loop,
                  f = c.body;
                e.ensureBlock(),
                  l && f.body.push(l),
                  (f.body = f.body.concat(o.body.body)),
                  a.inherits(c, o),
                  a.inherits(c.body, o.body),
                  u.replaceParent
                    ? (e.parentPath.replaceWithMultiple(u.node), e.remove())
                    : e.replaceWithMultiple(u.node);
              },
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.__esModule = !0),
        (t.default = function () {
          return {
            visitor: {
              "ArrowFunctionExpression|FunctionExpression": {
                exit: function (e) {
                  if ("value" !== e.key && !e.parentPath.isObjectProperty()) {
                    var t = (0, s.default)(e);
                    t && e.replaceWith(t);
                  }
                },
              },
              ObjectProperty: function (e) {
                var t = e.get("value");
                if (t.isFunction()) {
                  var r = (0, s.default)(t);
                  r && t.replaceWith(r);
                }
              },
            },
          };
        });
      var i = r(52),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            visitor: {
              NumericLiteral: function (e) {
                var t = e.node;
                t.extra && /^0[ob]/i.test(t.extra.raw) && (t.extra = void 0);
              },
              StringLiteral: function (e) {
                var t = e.node;
                t.extra && /\\[u]/gi.test(t.extra.raw) && (t.extra = void 0);
              },
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(17),
        a = i(s),
        o = r(33),
        u = i(o),
        l = r(2),
        c = i(l),
        f = r(34),
        p = i(f);
      t.default = function () {
        var e = (0, p.default)(),
          t = {
            ReferencedIdentifier: function (e) {
              var t = e.node.name,
                r = this.remaps[t];
              if (r && this.scope.getBinding(t) === e.scope.getBinding(t)) {
                if (e.parentPath.isCallExpression({ callee: e.node }))
                  e.replaceWith(y.sequenceExpression([y.numericLiteral(0), r]));
                else if (e.isJSXIdentifier() && y.isMemberExpression(r)) {
                  var n = r.object,
                    i = r.property;
                  e.replaceWith(
                    y.JSXMemberExpression(
                      y.JSXIdentifier(n.name),
                      y.JSXIdentifier(i.name)
                    )
                  );
                } else e.replaceWith(r);
                this.requeueInParent(e);
              }
            },
            AssignmentExpression: function (t) {
              var r = t.node;
              if (!r[e]) {
                var n = t.get("left");
                if (n.isIdentifier()) {
                  var i = n.node.name,
                    s = this.exports[i];
                  if (s && this.scope.getBinding(i) === t.scope.getBinding(i)) {
                    r[e] = !0;
                    for (
                      var a = s,
                        o = Array.isArray(a),
                        u = 0,
                        a = o ? a : (0, c.default)(a);
                      ;

                    ) {
                      var l;
                      if (o) {
                        if (u >= a.length) break;
                        l = a[u++];
                      } else {
                        if (((u = a.next()), u.done)) break;
                        l = u.value;
                      }
                      var f = l;
                      r = A(f, r).expression;
                    }
                    t.replaceWith(r), this.requeueInParent(t);
                  }
                }
              }
            },
            UpdateExpression: function (e) {
              var t = e.get("argument");
              if (t.isIdentifier()) {
                var r = t.node.name,
                  n = this.exports[r];
                if (n && this.scope.getBinding(r) === e.scope.getBinding(r)) {
                  var i = y.assignmentExpression(
                    e.node.operator[0] + "=",
                    t.node,
                    y.numericLiteral(1)
                  );
                  if (
                    (e.parentPath.isExpressionStatement() &&
                      !e.isCompletionRecord()) ||
                    e.node.prefix
                  )
                    return e.replaceWith(i), void this.requeueInParent(e);
                  var s = [];
                  s.push(i);
                  var a = void 0;
                  (a = "--" === e.node.operator ? "+" : "-"),
                    s.push(y.binaryExpression(a, t.node, y.numericLiteral(1))),
                    e.replaceWithMultiple(y.sequenceExpression(s));
                }
              }
            },
          };
        return {
          inherits: r(292),
          visitor: {
            ThisExpression: function (e, t) {
              this.ranCommonJS ||
                t.opts.allowTopLevelThis === !0 ||
                e.findParent(function (e) {
                  return !e.is("shadow") && C.indexOf(e.type) >= 0;
                }) ||
                e.replaceWith(y.identifier("undefined"));
            },
            Program: {
              exit: function (e) {
                function r(t, r) {
                  var n = S[t];
                  if (n) return n;
                  var i = e.scope.generateUidIdentifier(
                      (0, h.basename)(t, (0, h.extname)(t))
                    ),
                    s = y.variableDeclaration("var", [
                      y.variableDeclarator(i, g(y.stringLiteral(t)).expression),
                    ]);
                  return (
                    p[t] && (s.loc = p[t].loc),
                    "number" == typeof r && r > 0 && (s._blockHoist = r),
                    v.push(s),
                    (S[t] = i)
                  );
                }
                function n(e, t, r) {
                  var n = e[t] || [];
                  e[t] = n.concat(r);
                }
                this.ranCommonJS = !0;
                var i = !!this.opts.strict,
                  s = e.scope;
                s.rename("module"), s.rename("exports"), s.rename("require");
                for (
                  var o = !1,
                    l = !1,
                    f = e.get("body"),
                    p = (0, u.default)(null),
                    d = (0, u.default)(null),
                    m = (0, u.default)(null),
                    v = [],
                    C = (0, u.default)(null),
                    S = (0, u.default)(null),
                    _ = f,
                    w = Array.isArray(_),
                    F = 0,
                    _ = w ? _ : (0, c.default)(_);
                  ;

                ) {
                  var k;
                  if (w) {
                    if (F >= _.length) break;
                    k = _[F++];
                  } else {
                    if (((F = _.next()), F.done)) break;
                    k = F.value;
                  }
                  var P = k;
                  if (P.isExportDeclaration()) {
                    o = !0;
                    for (
                      var T = [].concat(
                          P.get("declaration"),
                          P.get("specifiers")
                        ),
                        O = T,
                        B = Array.isArray(O),
                        I = 0,
                        O = B ? O : (0, c.default)(O);
                      ;

                    ) {
                      var N;
                      if (B) {
                        if (I >= O.length) break;
                        N = O[I++];
                      } else {
                        if (((I = O.next()), I.done)) break;
                        N = I.value;
                      }
                      var M = N,
                        R = M.getBindingIdentifiers();
                      if (R.__esModule)
                        throw M.buildCodeFrameError(
                          'Illegal export "__esModule"'
                        );
                    }
                  }
                  if (P.isImportDeclaration()) {
                    var L;
                    l = !0;
                    var j = P.node.source.value,
                      V = p[j] || {
                        specifiers: [],
                        maxBlockHoist: 0,
                        loc: P.node.loc,
                      };
                    (L = V.specifiers).push.apply(L, P.node.specifiers),
                      "number" == typeof P.node._blockHoist &&
                        (V.maxBlockHoist = Math.max(
                          P.node._blockHoist,
                          V.maxBlockHoist
                        )),
                      (p[j] = V),
                      P.remove();
                  } else if (P.isExportDefaultDeclaration()) {
                    var U = P.get("declaration");
                    if (U.isFunctionDeclaration()) {
                      var G = U.node.id,
                        W = y.identifier("default");
                      G
                        ? (n(d, G.name, W),
                          v.push(A(W, G)),
                          P.replaceWith(U.node))
                        : (v.push(A(W, y.toExpression(U.node))), P.remove());
                    } else if (U.isClassDeclaration()) {
                      var Y = U.node.id,
                        q = y.identifier("default");
                      Y
                        ? (n(d, Y.name, q),
                          P.replaceWithMultiple([U.node, A(q, Y)]))
                        : (P.replaceWith(A(q, y.toExpression(U.node))),
                          P.parentPath.requeue(P.get("expression.left")));
                    } else
                      P.replaceWith(A(y.identifier("default"), U.node)),
                        P.parentPath.requeue(P.get("expression.left"));
                  } else if (P.isExportNamedDeclaration()) {
                    var K = P.get("declaration");
                    if (K.node) {
                      if (K.isFunctionDeclaration()) {
                        var H = K.node.id;
                        n(d, H.name, H), v.push(A(H, H)), P.replaceWith(K.node);
                      } else if (K.isClassDeclaration()) {
                        var J = K.node.id;
                        n(d, J.name, J),
                          P.replaceWithMultiple([K.node, A(J, J)]),
                          (m[J.name] = !0);
                      } else if (K.isVariableDeclaration()) {
                        for (
                          var X = K.get("declarations"),
                            $ = X,
                            z = Array.isArray($),
                            Q = 0,
                            $ = z ? $ : (0, c.default)($);
                          ;

                        ) {
                          var Z;
                          if (z) {
                            if (Q >= $.length) break;
                            Z = $[Q++];
                          } else {
                            if (((Q = $.next()), Q.done)) break;
                            Z = Q.value;
                          }
                          var ee = Z,
                            te = ee.get("id"),
                            re = ee.get("init");
                          re.node || re.replaceWith(y.identifier("undefined")),
                            te.isIdentifier() &&
                              (n(d, te.node.name, te.node),
                              re.replaceWith(A(te.node, re.node).expression),
                              (m[te.node.name] = !0));
                        }
                        P.replaceWith(K.node);
                      }
                      continue;
                    }
                    var ne = P.get("specifiers"),
                      ie = [],
                      se = P.node.source;
                    if (se)
                      for (
                        var ae = r(se.value, P.node._blockHoist),
                          oe = ne,
                          ue = Array.isArray(oe),
                          le = 0,
                          oe = ue ? oe : (0, c.default)(oe);
                        ;

                      ) {
                        var ce;
                        if (ue) {
                          if (le >= oe.length) break;
                          ce = oe[le++];
                        } else {
                          if (((le = oe.next()), le.done)) break;
                          ce = le.value;
                        }
                        var fe = ce;
                        fe.isExportNamespaceSpecifier() ||
                          fe.isExportDefaultSpecifier() ||
                          (fe.isExportSpecifier() &&
                            ("default" === fe.node.local.name
                              ? v.push(
                                  E(
                                    y.stringLiteral(fe.node.exported.name),
                                    y.memberExpression(
                                      y.callExpression(
                                        this.addHelper("interopRequireDefault"),
                                        [ae]
                                      ),
                                      fe.node.local
                                    )
                                  )
                                )
                              : v.push(
                                  E(
                                    y.stringLiteral(fe.node.exported.name),
                                    y.memberExpression(ae, fe.node.local)
                                  )
                                ),
                            (m[fe.node.exported.name] = !0)));
                      }
                    else
                      for (
                        var pe = ne,
                          he = Array.isArray(pe),
                          de = 0,
                          pe = he ? pe : (0, c.default)(pe);
                        ;

                      ) {
                        var me;
                        if (he) {
                          if (de >= pe.length) break;
                          me = pe[de++];
                        } else {
                          if (((de = pe.next()), de.done)) break;
                          me = de.value;
                        }
                        var ve = me;
                        ve.isExportSpecifier() &&
                          (n(d, ve.node.local.name, ve.node.exported),
                          (m[ve.node.exported.name] = !0),
                          ie.push(A(ve.node.exported, ve.node.local)));
                      }
                    P.replaceWithMultiple(ie);
                  } else if (P.isExportAllDeclaration()) {
                    var ye = D({
                      OBJECT: r(P.node.source.value, P.node._blockHoist),
                    });
                    (ye.loc = P.node.loc), v.push(ye), P.remove();
                  }
                }
                for (var ge in p) {
                  var be = p[ge],
                    T = be.specifiers,
                    Ee = be.maxBlockHoist;
                  if (T.length) {
                    for (
                      var xe = r(ge, Ee), Ae = void 0, De = 0;
                      De < T.length;
                      De++
                    ) {
                      var Ce = T[De];
                      if (y.isImportNamespaceSpecifier(Ce)) {
                        if (i) C[Ce.local.name] = xe;
                        else {
                          var Se = y.variableDeclaration("var", [
                            y.variableDeclarator(
                              Ce.local,
                              y.callExpression(
                                this.addHelper("interopRequireWildcard"),
                                [xe]
                              )
                            ),
                          ]);
                          Ee > 0 && (Se._blockHoist = Ee), v.push(Se);
                        }
                        Ae = Ce.local;
                      } else
                        y.isImportDefaultSpecifier(Ce) &&
                          (T[De] = y.importSpecifier(
                            Ce.local,
                            y.identifier("default")
                          ));
                    }
                    for (
                      var _e = T,
                        we = Array.isArray(_e),
                        Fe = 0,
                        _e = we ? _e : (0, c.default)(_e);
                      ;

                    ) {
                      var ke;
                      if (we) {
                        if (Fe >= _e.length) break;
                        ke = _e[Fe++];
                      } else {
                        if (((Fe = _e.next()), Fe.done)) break;
                        ke = Fe.value;
                      }
                      var Pe = ke;
                      if (y.isImportSpecifier(Pe)) {
                        var Te = xe;
                        if ("default" === Pe.imported.name)
                          if (Ae) Te = Ae;
                          else {
                            Te = Ae = e.scope.generateUidIdentifier(xe.name);
                            var Oe = y.variableDeclaration("var", [
                              y.variableDeclarator(
                                Te,
                                y.callExpression(
                                  this.addHelper("interopRequireDefault"),
                                  [xe]
                                )
                              ),
                            ]);
                            Ee > 0 && (Oe._blockHoist = Ee), v.push(Oe);
                          }
                        C[Pe.local.name] = y.memberExpression(
                          Te,
                          y.cloneWithoutLoc(Pe.imported)
                        );
                      }
                    }
                  } else {
                    var Be = g(y.stringLiteral(ge));
                    (Be.loc = p[ge].loc), v.push(Be);
                  }
                }
                if (l && (0, a.default)(m).length) {
                  var Ie = y.identifier("undefined");
                  for (var Ne in m) Ie = A(y.identifier(Ne), Ie).expression;
                  var Me = y.expressionStatement(Ie);
                  (Me._blockHoist = 3), v.unshift(Me);
                }
                if (o && !i) {
                  var Re = b;
                  this.opts.loose && (Re = x);
                  var Le = Re();
                  (Le._blockHoist = 3), v.unshift(Le);
                }
                e.unshiftContainer("body", v),
                  e.traverse(t, {
                    remaps: C,
                    scope: s,
                    exports: d,
                    requeueInParent: function (t) {
                      return e.requeue(t);
                    },
                  });
              },
            },
          },
        };
      };
      var h = r(25),
        d = r(12),
        m = i(d),
        v = r(1),
        y = n(v),
        g = (0, m.default)("\n  require($0);\n"),
        b = (0, m.default)(
          '\n  Object.defineProperty(exports, "__esModule", {\n    value: true\n  });\n'
        ),
        E = (0, m.default)(
          "\n  Object.defineProperty(exports, $0, {\n    enumerable: true,\n    get: function () {\n      return $1;\n    }\n  });\n"
        ),
        x = (0, m.default)("\n  exports.__esModule = true;\n"),
        A = (0, m.default)("\n  exports.$0 = $1;\n"),
        D = (0, m.default)(
          '\n  Object.keys(OBJECT).forEach(function (key) {\n    if (key === "default" || key === "__esModule") return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return OBJECT[key];\n      }\n    });\n  });\n'
        ),
        C = [
          "FunctionExpression",
          "FunctionDeclaration",
          "ClassProperty",
          "ClassMethod",
          "ObjectMethod",
        ];
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        for (
          var t = e.params,
            r = Array.isArray(t),
            n = 0,
            t = r ? t : (0, u.default)(t);
          ;

        ) {
          var i;
          if (r) {
            if (n >= t.length) break;
            i = t[n++];
          } else {
            if (((n = t.next()), n.done)) break;
            i = n.value;
          }
          var s = i;
          if (!v.isIdentifier(s)) return !0;
        }
        return !1;
      }
      function a(e, t) {
        if (!e.hasOwnBinding(t.name)) return !0;
        var r = e.getOwnBinding(t.name),
          n = r.kind;
        return "param" === n || "local" === n;
      }
      (t.__esModule = !0), (t.visitor = void 0);
      var o = r(2),
        u = i(o),
        l = r(153),
        c = i(l),
        f = r(252),
        p = i(f),
        h = r(12),
        d = i(h),
        m = r(1),
        v = n(m),
        y = (0, d.default)(
          "\n  let VARIABLE_NAME =\n    ARGUMENTS.length > ARGUMENT_KEY && ARGUMENTS[ARGUMENT_KEY] !== undefined ?\n      ARGUMENTS[ARGUMENT_KEY]\n    :\n      DEFAULT_VALUE;\n"
        ),
        g = (0, d.default)("\n  let $0 = $1[$2];\n"),
        b = {
          ReferencedIdentifier: function (e, t) {
            var r = e.scope,
              n = e.node;
            ("eval" !== n.name && a(r, n)) || ((t.iife = !0), e.stop());
          },
          Scope: function (e) {
            e.skip();
          },
        };
      t.visitor = {
        Function: function (e) {
          function t(e, t, n) {
            var i = y({
              VARIABLE_NAME: e,
              DEFAULT_VALUE: t,
              ARGUMENT_KEY: v.numericLiteral(n),
              ARGUMENTS: u,
            });
            (i._blockHoist = r.params.length - n), o.push(i);
          }
          var r = e.node,
            n = e.scope;
          if (s(r)) {
            e.ensureBlock();
            var i = { iife: !1, scope: n },
              o = [],
              u = v.identifier("arguments");
            u._shadowedFunctionLiteral = e;
            for (
              var l = (0, c.default)(r), f = e.get("params"), h = 0;
              h < f.length;
              h++
            ) {
              var d = f[h];
              if (d.isAssignmentPattern()) {
                var m = d.get("left"),
                  E = d.get("right");
                if (h >= l || m.isPattern()) {
                  var x = n.generateUidIdentifier("x");
                  (x._isDefaultPlaceholder = !0), (r.params[h] = x);
                } else r.params[h] = m.node;
                i.iife ||
                  (E.isIdentifier() && !a(n, E.node)
                    ? (i.iife = !0)
                    : E.traverse(b, i)),
                  t(m.node, E.node, h);
              } else i.iife || d.isIdentifier() || d.traverse(b, i);
            }
            for (var A = l + 1; A < r.params.length; A++) {
              var D = r.params[A];
              if (!D._isDefaultPlaceholder) {
                var C = g(D, u, v.numericLiteral(A));
                (C._blockHoist = r.params.length - A), o.push(C);
              }
            }
            (r.params = r.params.slice(0, l)),
              i.iife
                ? (o.push((0, p.default)(e, n)),
                  e.set("body", v.blockStatement(o)))
                : e.get("body").unshiftContainer("body", o);
          }
        },
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0), (t.visitor = void 0);
      var i = r(1),
        s = n(i);
      t.visitor = {
        Function: function (e) {
          for (
            var t = e.get("params"),
              r = s.isRestElement(t[t.length - 1]) ? 1 : 0,
              n = t.length - r,
              i = 0;
            i < n;
            i++
          ) {
            var a = t[i];
            if (a.isArrayPattern() || a.isObjectPattern()) {
              var o = e.scope.generateUidIdentifier("ref"),
                u = s.variableDeclaration("let", [
                  s.variableDeclarator(a.node, o),
                ]);
              (u._blockHoist = n - i),
                e.ensureBlock(),
                e.get("body").unshiftContainer("body", u),
                a.replaceWith(o);
            }
          }
        },
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s);
      t.default = function () {
        return {
          visitor: o.visitors.merge([
            {
              ArrowFunctionExpression: function (e) {
                for (
                  var t = e.get("params"),
                    r = t,
                    n = Array.isArray(r),
                    i = 0,
                    r = n ? r : (0, a.default)(r);
                  ;

                ) {
                  var s;
                  if (n) {
                    if (i >= r.length) break;
                    s = r[i++];
                  } else {
                    if (((i = r.next()), i.done)) break;
                    s = i.value;
                  }
                  var o = s;
                  if (o.isRestElement() || o.isAssignmentPattern()) {
                    e.arrowFunctionToShadowed();
                    break;
                  }
                }
              },
            },
            l.visitor,
            h.visitor,
            f.visitor,
          ]),
        };
      };
      var o = r(7),
        u = r(279),
        l = n(u),
        c = r(278),
        f = n(c),
        p = r(281),
        h = n(p);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        return h.isRestElement(e.params[e.params.length - 1]);
      }
      function a(e, t, r) {
        var n = void 0;
        n = h.isNumericLiteral(e.parent.property)
          ? h.numericLiteral(e.parent.property.value + r)
          : 0 === r
          ? e.parent.property
          : h.binaryExpression("+", e.parent.property, h.numericLiteral(r));
        var i = e.scope;
        if (i.isPure(n))
          e.parentPath.replaceWith(m({ ARGUMENTS: t, INDEX: n }));
        else {
          var s = i.generateUidIdentifierBasedOnNode(n);
          i.push({ id: s, kind: "var" }),
            e.parentPath.replaceWith(v({ ARGUMENTS: t, INDEX: n, REF: s }));
        }
      }
      function o(e, t, r) {
        r
          ? e.parentPath.replaceWith(
              y({ ARGUMENTS: t, OFFSET: h.numericLiteral(r) })
            )
          : e.replaceWith(t);
      }
      (t.__esModule = !0), (t.visitor = void 0);
      var u = r(2),
        l = i(u),
        c = r(12),
        f = i(c),
        p = r(1),
        h = n(p),
        d = (0, f.default)(
          "\n  for (var LEN = ARGUMENTS.length,\n           ARRAY = Array(ARRAY_LEN),\n           KEY = START;\n       KEY < LEN;\n       KEY++) {\n    ARRAY[ARRAY_KEY] = ARGUMENTS[KEY];\n  }\n"
        ),
        m = (0, f.default)(
          "\n  ARGUMENTS.length <= INDEX ? undefined : ARGUMENTS[INDEX]\n"
        ),
        v = (0, f.default)(
          "\n  REF = INDEX, ARGUMENTS.length <= REF ? undefined : ARGUMENTS[REF]\n"
        ),
        y = (0, f.default)(
          "\n  ARGUMENTS.length <= OFFSET ? 0 : ARGUMENTS.length - OFFSET\n"
        ),
        g = {
          Scope: function (e, t) {
            e.scope.bindingIdentifierEquals(t.name, t.outerBinding) || e.skip();
          },
          Flow: function (e) {
            e.isTypeCastExpression() || e.skip();
          },
          "Function|ClassProperty": function (e, t) {
            var r = t.noOptimise;
            (t.noOptimise = !0), e.traverse(g, t), (t.noOptimise = r), e.skip();
          },
          ReferencedIdentifier: function (e, t) {
            var r = e.node;
            if (("arguments" === r.name && (t.deopted = !0), r.name === t.name))
              if (t.noOptimise) t.deopted = !0;
              else {
                var n = e.parentPath;
                if (n.isMemberExpression({ object: r })) {
                  var i = n.parentPath,
                    s =
                      !t.deopted &&
                      !(
                        (i.isAssignmentExpression() &&
                          n.node === i.node.left) ||
                        i.isLVal() ||
                        i.isForXStatement() ||
                        i.isUpdateExpression() ||
                        i.isUnaryExpression({ operator: "delete" }) ||
                        ((i.isCallExpression() || i.isNewExpression()) &&
                          n.node === i.node.callee)
                      );
                  if (s)
                    if (n.node.computed) {
                      if (n.get("property").isBaseType("number"))
                        return void t.candidates.push({
                          cause: "indexGetter",
                          path: e,
                        });
                    } else if ("length" === n.node.property.name)
                      return void t.candidates.push({
                        cause: "lengthGetter",
                        path: e,
                      });
                }
                if (0 === t.offset && n.isSpreadElement()) {
                  var a = n.parentPath;
                  if (a.isCallExpression() && 1 === a.node.arguments.length)
                    return void t.candidates.push({
                      cause: "argSpread",
                      path: e,
                    });
                }
                t.references.push(e);
              }
          },
          BindingIdentifier: function (e, t) {
            var r = e.node;
            r.name === t.name && (t.deopted = !0);
          },
        };
      t.visitor = {
        Function: function (e) {
          var t = e.node,
            r = e.scope;
          if (s(t)) {
            var n = t.params.pop().argument,
              i = h.identifier("arguments");
            i._shadowedFunctionLiteral = e;
            var u = {
              references: [],
              offset: t.params.length,
              argumentsNode: i,
              outerBinding: r.getBindingIdentifier(n.name),
              candidates: [],
              name: n.name,
              deopted: !1,
            };
            if ((e.traverse(g, u), u.deopted || u.references.length)) {
              (u.references = u.references.concat(
                u.candidates.map(function (e) {
                  var t = e.path;
                  return t;
                })
              )),
                (u.deopted = u.deopted || !!t.shadow);
              var c = h.numericLiteral(t.params.length),
                f = r.generateUidIdentifier("key"),
                p = r.generateUidIdentifier("len"),
                m = f,
                v = p;
              t.params.length &&
                ((m = h.binaryExpression("-", f, c)),
                (v = h.conditionalExpression(
                  h.binaryExpression(">", p, c),
                  h.binaryExpression("-", p, c),
                  h.numericLiteral(0)
                )));
              var y = d({
                ARGUMENTS: i,
                ARRAY_KEY: m,
                ARRAY_LEN: v,
                START: c,
                ARRAY: n,
                KEY: f,
                LEN: p,
              });
              if (u.deopted)
                (y._blockHoist = t.params.length + 1), t.body.body.unshift(y);
              else {
                y._blockHoist = 1;
                var b = e
                  .getEarliestCommonAncestorFrom(u.references)
                  .getStatementParent();
                b.findParent(function (e) {
                  return e.isLoop() ? void (b = e) : e.isFunction();
                }),
                  b.insertBefore(y);
              }
            } else
              for (
                var E = u.candidates,
                  x = Array.isArray(E),
                  A = 0,
                  E = x ? E : (0, l.default)(E);
                ;

              ) {
                var D;
                if (x) {
                  if (A >= E.length) break;
                  D = E[A++];
                } else {
                  if (((A = E.next()), A.done)) break;
                  D = A.value;
                }
                var C = D,
                  S = C.path,
                  _ = C.cause;
                switch (_) {
                  case "indexGetter":
                    a(S, i, u.offset);
                    break;
                  case "lengthGetter":
                    o(S, i, u.offset);
                    break;
                  default:
                    S.replaceWith(i);
                }
              }
          }
        },
      };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      (t.__esModule = !0),
        (t.default = function () {
          return {
            visitor: {
              ObjectMethod: function (e) {
                var t = e.node;
                if ("method" === t.kind) {
                  var r = s.functionExpression(
                    null,
                    t.params,
                    t.body,
                    t.generator,
                    t.async
                  );
                  (r.returnType = t.returnType),
                    e.replaceWith(s.objectProperty(t.key, r, t.computed));
                }
              },
              ObjectProperty: function (e) {
                var t = e.node;
                t.shorthand && (t.shorthand = !1);
              },
            },
          };
        });
      var i = r(1),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        function t(e, t, r) {
          return r.opts.loose &&
            !i.isIdentifier(e.argument, { name: "arguments" })
            ? e.argument
            : t.toArray(e.argument, !0);
        }
        function r(e) {
          for (var t = 0; t < e.length; t++)
            if (i.isSpreadElement(e[t])) return !0;
          return !1;
        }
        function n(e, r, n) {
          function a() {
            u.length && (o.push(i.arrayExpression(u)), (u = []));
          }
          for (
            var o = [],
              u = [],
              l = e,
              c = Array.isArray(l),
              f = 0,
              l = c ? l : (0, s.default)(l);
            ;

          ) {
            var p;
            if (c) {
              if (f >= l.length) break;
              p = l[f++];
            } else {
              if (((f = l.next()), f.done)) break;
              p = f.value;
            }
            var h = p;
            i.isSpreadElement(h) ? (a(), o.push(t(h, r, n))) : u.push(h);
          }
          return a(), o;
        }
        var i = e.types;
        return {
          visitor: {
            ArrayExpression: function (e, t) {
              var s = e.node,
                a = e.scope,
                o = s.elements;
              if (r(o)) {
                var u = n(o, a, t),
                  l = u.shift();
                i.isArrayExpression(l) ||
                  (u.unshift(l), (l = i.arrayExpression([]))),
                  e.replaceWith(
                    i.callExpression(
                      i.memberExpression(l, i.identifier("concat")),
                      u
                    )
                  );
              }
            },
            CallExpression: function (e, t) {
              var s = e.node,
                a = e.scope,
                o = s.arguments;
              if (r(o)) {
                var u = e.get("callee");
                if (!u.isSuper()) {
                  var l = i.identifier("undefined");
                  s.arguments = [];
                  var c = void 0;
                  c =
                    1 === o.length && "arguments" === o[0].argument.name
                      ? [o[0].argument]
                      : n(o, a, t);
                  var f = c.shift();
                  c.length
                    ? s.arguments.push(
                        i.callExpression(
                          i.memberExpression(f, i.identifier("concat")),
                          c
                        )
                      )
                    : s.arguments.push(f);
                  var p = s.callee;
                  if (u.isMemberExpression()) {
                    var h = a.maybeGenerateMemoised(p.object);
                    h
                      ? ((p.object = i.assignmentExpression("=", h, p.object)),
                        (l = h))
                      : (l = p.object),
                      i.appendToMemberExpression(p, i.identifier("apply"));
                  } else
                    s.callee = i.memberExpression(
                      s.callee,
                      i.identifier("apply")
                    );
                  i.isSuper(l) && (l = i.thisExpression()),
                    s.arguments.unshift(l);
                }
              }
            },
            NewExpression: function (e, t) {
              var s = e.node,
                a = e.scope,
                o = s.arguments;
              if (r(o)) {
                var u = n(o, a, t),
                  l = i.arrayExpression([i.nullLiteral()]);
                (o = i.callExpression(
                  i.memberExpression(l, i.identifier("concat")),
                  u
                )),
                  e.replaceWith(
                    i.newExpression(
                      i.callExpression(
                        i.memberExpression(
                          i.memberExpression(
                            i.memberExpression(
                              i.identifier("Function"),
                              i.identifier("prototype")
                            ),
                            i.identifier("bind")
                          ),
                          i.identifier("apply")
                        ),
                        [s.callee, o]
                      ),
                      []
                    )
                  );
              }
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        function t(e) {
          return n.isLiteral(e) && "string" == typeof e.value;
        }
        function r(e, t) {
          return n.binaryExpression("+", e, t);
        }
        var n = e.types;
        return {
          visitor: {
            TaggedTemplateExpression: function (e, t) {
              for (
                var r = e.node,
                  i = r.quasi,
                  a = [],
                  o = [],
                  u = [],
                  l = i.quasis,
                  c = Array.isArray(l),
                  f = 0,
                  l = c ? l : (0, s.default)(l);
                ;

              ) {
                var p;
                if (c) {
                  if (f >= l.length) break;
                  p = l[f++];
                } else {
                  if (((f = l.next()), f.done)) break;
                  p = f.value;
                }
                var h = p;
                o.push(n.stringLiteral(h.value.cooked)),
                  u.push(n.stringLiteral(h.value.raw));
              }
              (o = n.arrayExpression(o)), (u = n.arrayExpression(u));
              var d = "taggedTemplateLiteral";
              t.opts.loose && (d += "Loose");
              var m = t.file.addTemplateObject(d, o, u);
              a.push(m),
                (a = a.concat(i.expressions)),
                e.replaceWith(n.callExpression(r.tag, a));
            },
            TemplateLiteral: function (e, i) {
              for (
                var a = [],
                  o = e.get("expressions"),
                  u = e.node.quasis,
                  l = Array.isArray(u),
                  c = 0,
                  u = l ? u : (0, s.default)(u);
                ;

              ) {
                var f;
                if (l) {
                  if (c >= u.length) break;
                  f = u[c++];
                } else {
                  if (((c = u.next()), c.done)) break;
                  f = c.value;
                }
                var p = f;
                a.push(n.stringLiteral(p.value.cooked));
                var h = o.shift();
                h &&
                  (!i.opts.spec ||
                  h.isBaseType("string") ||
                  h.isBaseType("number")
                    ? a.push(h.node)
                    : a.push(
                        n.callExpression(n.identifier("String"), [h.node])
                      ));
              }
              if (
                ((a = a.filter(function (e) {
                  return !n.isLiteral(e, { value: "" });
                })),
                t(a[0]) || t(a[1]) || a.unshift(n.stringLiteral("")),
                a.length > 1)
              ) {
                for (
                  var d = r(a.shift(), a.shift()),
                    m = a,
                    v = Array.isArray(m),
                    y = 0,
                    m = v ? m : (0, s.default)(m);
                  ;

                ) {
                  var g;
                  if (v) {
                    if (y >= m.length) break;
                    g = m[y++];
                  } else {
                    if (((y = m.next()), y.done)) break;
                    g = y.value;
                  }
                  var b = g;
                  d = r(d, b);
                }
                e.replaceWith(d);
              } else e.replaceWith(a[0]);
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        var t = e.types,
          n = "@flow";
        return {
          inherits: r(262),
          visitor: {
            Program: function (e, t) {
              for (
                var r = t.file.ast.comments,
                  i = r,
                  a = Array.isArray(i),
                  o = 0,
                  i = a ? i : (0, s.default)(i);
                ;

              ) {
                var u;
                if (a) {
                  if (o >= i.length) break;
                  u = i[o++];
                } else {
                  if (((o = i.next()), o.done)) break;
                  u = o.value;
                }
                var l = u;
                l.value.indexOf(n) >= 0 &&
                  ((l.value = l.value.replace(n, "")),
                  l.value.replace(/\*/g, "").trim() || (l.ignore = !0));
              }
            },
            Flow: function (e) {
              e.remove();
            },
            ClassProperty: function (e) {
              (e.node.variance = null),
                (e.node.typeAnnotation = null),
                e.node.value || e.remove();
            },
            Class: function (e) {
              (e.node.implements = null),
                e.get("body.body").forEach(function (e) {
                  e.isClassProperty() &&
                    ((e.node.typeAnnotation = null),
                    e.node.value || e.remove());
                });
            },
            Function: function (e) {
              for (var t = e.node, r = 0; r < t.params.length; r++) {
                var n = t.params[r];
                n.optional = !1;
              }
            },
            TypeCastExpression: function (e) {
              var r = e.node;
              do r = r.expression;
              while (t.isTypeCastExpression(r));
              e.replaceWith(r);
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return {
            visitor: {
              CallExpression: function (e, t) {
                e.get("callee").matchesPattern("Object.assign") &&
                  (e.node.callee = t.addHelper("extends"));
              },
            },
          };
        }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        function t(e) {
          var t = !1;
          return (
            e.traverse({
              RestProperty: function () {
                (t = !0), e.stop();
              },
            }),
            t
          );
        }
        function n(e) {
          for (
            var t = e.properties,
              r = Array.isArray(t),
              n = 0,
              t = r ? t : (0, s.default)(t);
            ;

          ) {
            var i;
            if (r) {
              if (n >= t.length) break;
              i = t[n++];
            } else {
              if (((n = t.next()), n.done)) break;
              i = n.value;
            }
            var a = i;
            if (o.isSpreadProperty(a)) return !0;
          }
          return !1;
        }
        function i(e, t, r) {
          for (
            var n = t.pop(),
              i = [],
              a = t,
              u = Array.isArray(a),
              l = 0,
              a = u ? a : (0, s.default)(a);
            ;

          ) {
            var c;
            if (u) {
              if (l >= a.length) break;
              c = a[l++];
            } else {
              if (((l = a.next()), l.done)) break;
              c = l.value;
            }
            var f = c,
              p = f.key;
            o.isIdentifier(p) &&
              !f.computed &&
              (p = o.stringLiteral(f.key.name)),
              i.push(p);
          }
          return [
            n.argument,
            o.callExpression(e.addHelper("objectWithoutProperties"), [
              r,
              o.arrayExpression(i),
            ]),
          ];
        }
        function a(e, r, n) {
          if (e.isObjectPattern() && t(e)) {
            var i = e.parentPath,
              s = i.scope.generateUidIdentifier("ref"),
              a = o.variableDeclaration("let", [
                o.variableDeclarator(e.node, s),
              ]);
            (a._blockHoist = r ? n - r : 1),
              i.ensureBlock(),
              i.get("body").unshiftContainer("body", a),
              e.replaceWith(s);
          }
        }
        var o = e.types;
        return {
          inherits: r(264),
          visitor: {
            Function: function (e) {
              for (var t = e.get("params"), r = 0; r < t.length; r++)
                a(t[r], r, t.length);
            },
            VariableDeclarator: function (e, t) {
              if (e.get("id").isObjectPattern()) {
                var r = e.parentPath.node.kind,
                  n = [];
                e.traverse(
                  {
                    RestProperty: function (e) {
                      var r = this.originalPath.node.init;
                      e.findParent(function (e) {
                        if (e.isObjectProperty())
                          r = o.memberExpression(
                            r,
                            o.identifier(e.node.key.name)
                          );
                        else if (e.isVariableDeclarator()) return !0;
                      });
                      var s = i(t, e.parentPath.node.properties, r),
                        a = s[0],
                        u = s[1];
                      n.push(o.variableDeclarator(a, u)),
                        0 === e.parentPath.node.properties.length &&
                          e
                            .findParent(function (e) {
                              return (
                                e.isObjectProperty() ||
                                e.isVariableDeclaration()
                              );
                            })
                            .remove();
                    },
                  },
                  { originalPath: e }
                ),
                  n.length > 0 &&
                    e.parentPath
                      .getSibling(e.parentPath.key + 1)
                      .insertBefore(o.variableDeclaration(r, n));
              }
            },
            ExportNamedDeclaration: function (e) {
              var r = e.get("declaration");
              if (r.isVariableDeclaration() && t(r)) {
                var n = [];
                for (var i in e.getOuterBindingIdentifiers(e)) {
                  var s = o.identifier(i);
                  n.push(o.exportSpecifier(s, s));
                }
                e.replaceWith(r.node),
                  e.insertAfter(o.exportNamedDeclaration(null, n));
              }
            },
            CatchClause: function (e) {
              a(e.get("param"));
            },
            AssignmentExpression: function (e, r) {
              var n = e.get("left");
              if (n.isObjectPattern() && t(n)) {
                var s = [],
                  a = void 0;
                (e.isCompletionRecord() ||
                  e.parentPath.isExpressionStatement()) &&
                  ((a = e.scope.generateUidIdentifierBasedOnNode(
                    e.node.right,
                    "ref"
                  )),
                  s.push(
                    o.variableDeclaration("var", [
                      o.variableDeclarator(a, e.node.right),
                    ])
                  ));
                var u = i(r, e.node.left.properties, a),
                  l = u[0],
                  c = u[1],
                  f = o.clone(e.node);
                (f.right = a),
                  s.push(o.expressionStatement(f)),
                  s.push(o.toStatement(o.assignmentExpression("=", l, c))),
                  a && s.push(o.expressionStatement(a)),
                  e.replaceWithMultiple(s);
              }
            },
            ForXStatement: function (e) {
              var r = e.node,
                n = e.scope,
                i = e.get("left"),
                s = r.left;
              if (o.isObjectPattern(s) && t(i)) {
                var a = n.generateUidIdentifier("ref");
                return (
                  (r.left = o.variableDeclaration("var", [
                    o.variableDeclarator(a),
                  ])),
                  e.ensureBlock(),
                  void r.body.body.unshift(
                    o.variableDeclaration("var", [o.variableDeclarator(s, a)])
                  )
                );
              }
              if (o.isVariableDeclaration(s)) {
                var u = s.declarations[0].id;
                if (o.isObjectPattern(u)) {
                  var l = n.generateUidIdentifier("ref");
                  (r.left = o.variableDeclaration(s.kind, [
                    o.variableDeclarator(l, null),
                  ])),
                    e.ensureBlock(),
                    r.body.body.unshift(
                      o.variableDeclaration(r.left.kind, [
                        o.variableDeclarator(u, l),
                      ])
                    );
                }
              }
            },
            ObjectExpression: function (e, t) {
              function r() {
                u.length && (a.push(o.objectExpression(u)), (u = []));
              }
              if (n(e.node)) {
                var i = t.opts.useBuiltIns || !1;
                if ("boolean" != typeof i)
                  throw new Error(
                    "transform-object-rest-spread currently only accepts a boolean option for useBuiltIns (defaults to false)"
                  );
                for (
                  var a = [],
                    u = [],
                    l = e.node.properties,
                    c = Array.isArray(l),
                    f = 0,
                    l = c ? l : (0, s.default)(l);
                  ;

                ) {
                  var p;
                  if (c) {
                    if (f >= l.length) break;
                    p = l[f++];
                  } else {
                    if (((f = l.next()), f.done)) break;
                    p = f.value;
                  }
                  var h = p;
                  o.isSpreadProperty(h) ? (r(), a.push(h.argument)) : u.push(h);
                }
                r(),
                  o.isObjectExpression(a[0]) ||
                    a.unshift(o.objectExpression([]));
                var d = i
                  ? o.memberExpression(
                      o.identifier("Object"),
                      o.identifier("assign")
                    )
                  : t.addHelper("extends");
                e.replaceWith(o.callExpression(d, a));
              }
            },
          },
        };
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      (t.__esModule = !0),
        (t.default = function (e) {
          function t(e, t) {
            for (
              var r = t.arguments[0].properties, i = !0, s = 0;
              s < r.length;
              s++
            ) {
              var a = r[s],
                o = n.toComputedKey(a);
              if (n.isLiteral(o, { value: "displayName" })) {
                i = !1;
                break;
              }
            }
            i &&
              r.unshift(
                n.objectProperty(
                  n.identifier("displayName"),
                  n.stringLiteral(e)
                )
              );
          }
          function r(e) {
            if (!e || !n.isCallExpression(e)) return !1;
            if (!i(e.callee)) return !1;
            var t = e.arguments;
            if (1 !== t.length) return !1;
            var r = t[0];
            return !!n.isObjectExpression(r);
          }
          var n = e.types,
            i = n.buildMatchMemberExpression("React.createClass");
          return {
            visitor: {
              ExportDefaultDeclaration: function (e, n) {
                var i = e.node;
                if (r(i.declaration)) {
                  var a = n.file.opts.basename;
                  "index" === a &&
                    (a = s.default.basename(
                      s.default.dirname(n.file.opts.filename)
                    )),
                    t(a, i.declaration);
                }
              },
              CallExpression: function (e) {
                var i = e.node;
                if (r(i)) {
                  var s = void 0;
                  e.find(function (e) {
                    if (e.isAssignmentExpression()) s = e.node.left;
                    else if (e.isObjectProperty()) s = e.node.key;
                    else if (e.isVariableDeclarator()) s = e.node.id;
                    else if (e.isStatement()) return !0;
                    if (s) return !0;
                  }),
                    s &&
                      (n.isMemberExpression(s) && (s = s.property),
                      n.isIdentifier(s) && t(s.name, i));
                }
              },
            },
          };
        });
      var i = r(25),
        s = n(i);
      e.exports = t.default;
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function (e) {
          function t(e, t) {
            var r = null != t ? i.numericLiteral(t) : i.nullLiteral(),
              n = i.objectProperty(i.identifier("fileName"), e),
              s = i.objectProperty(i.identifier("lineNumber"), r);
            return i.objectExpression([n, s]);
          }
          var i = e.types,
            s = {
              JSXOpeningElement: function (e, s) {
                var a = i.jSXIdentifier(r),
                  o = e.container.openingElement.loc;
                if (o) {
                  for (
                    var u = e.container.openingElement.attributes, l = 0;
                    l < u.length;
                    l++
                  ) {
                    var c = u[l].name;
                    if (c && c.name === r) return;
                  }
                  if (!s.fileNameIdentifier) {
                    var f =
                        "unknown" !== s.file.log.filename
                          ? s.file.log.filename
                          : null,
                      p = e.scope.generateUidIdentifier(n);
                    e.hub.file.scope.push({ id: p, init: i.stringLiteral(f) }),
                      (s.fileNameIdentifier = p);
                  }
                  var h = t(s.fileNameIdentifier, o.start.line);
                  u.push(i.jSXAttribute(a, i.jSXExpressionContainer(h)));
                }
              },
            };
          return { visitor: s };
        });
      var r = "__source",
        n = "_jsxFileName";
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var i = r(2),
        s = n(i);
      (t.default = function (e) {
        var t = e.types,
          n = /\*?\s*@jsx\s+([^\s]+)/,
          i = r(251)({
            pre: function (e) {
              var r = e.tagName,
                n = e.args;
              t.react.isCompatTag(r)
                ? n.push(t.stringLiteral(r))
                : n.push(e.tagExpr);
            },
            post: function (e, t) {
              e.callee = t.get("jsxIdentifier")();
            },
          });
        return (
          (i.Program = function (e, r) {
            for (
              var i = r.file,
                a = r.opts.pragma || "React.createElement",
                o = i.ast.comments,
                u = Array.isArray(o),
                l = 0,
                o = u ? o : (0, s.default)(o);
              ;

            ) {
              var c;
              if (u) {
                if (l >= o.length) break;
                c = o[l++];
              } else {
                if (((l = o.next()), l.done)) break;
                c = l.value;
              }
              var f = c,
                p = n.exec(f.value);
              if (p) {
                if (((a = p[1]), "React.DOM" === a))
                  throw i.buildCodeFrameError(
                    f,
                    "The @jsx React.DOM pragma has been deprecated as of React 0.12"
                  );
                break;
              }
            }
            r.set("jsxIdentifier", function () {
              return a
                .split(".")
                .map(function (e) {
                  return t.identifier(e);
                })
                .reduce(function (e, r) {
                  return t.memberExpression(e, r);
                });
            });
          }),
          { inherits: r(263), visitor: i }
        );
      }),
        (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      (t.__esModule = !0), (t.default = r(542)), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s);
      t.default = function () {
        return {
          visitor: {
            Program: function (e, t) {
              if (t.opts.strict !== !1 && t.opts.strictMode !== !1) {
                for (
                  var r = e.node,
                    n = r.directives,
                    i = Array.isArray(n),
                    s = 0,
                    n = i ? n : (0, a.default)(n);
                  ;

                ) {
                  var o;
                  if (i) {
                    if (s >= n.length) break;
                    o = n[s++];
                  } else {
                    if (((s = n.next()), s.done)) break;
                    o = s.value;
                  }
                  var l = o;
                  if ("use strict" === l.value.value) return;
                }
                e.unshiftContainer(
                  "directives",
                  u.directive(u.directiveLiteral("use strict"))
                );
              }
            },
          },
        };
      };
      var o = r(1),
        u = n(o);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      e.exports = {
        "babel-plugin-react-transform": r(260),
        "babel-plugin-syntax-async-functions": r(261),
        "babel-plugin-syntax-class-properties": r(156),
        "babel-plugin-syntax-trailing-function-commas": r(265),
        "babel-plugin-transform-class-properties": r(266),
        "babel-plugin-transform-es2015-function-name": r(275),
        "babel-plugin-transform-es2015-arrow-functions": r(267),
        "babel-plugin-transform-es2015-block-scoping": r(268),
        "babel-plugin-transform-es2015-classes": r(270),
        "babel-plugin-transform-es2015-computed-properties": r(272),
        "babel-plugin-check-es2015-constants": r(259),
        "babel-plugin-transform-es2015-destructuring": r(273),
        "babel-plugin-transform-es2015-modules-commonjs": r(277),
        "babel-plugin-transform-es2015-parameters": r(280),
        "babel-plugin-transform-es2015-shorthand-properties": r(282),
        "babel-plugin-transform-es2015-spread": r(283),
        "babel-plugin-transform-es2015-template-literals": r(284),
        "babel-plugin-transform-es2015-literals": r(276),
        "babel-plugin-transform-flow-strip-types": r(285),
        "babel-plugin-transform-object-assign": r(286),
        "babel-plugin-transform-object-rest-spread": r(287),
        "babel-plugin-transform-react-display-name": r(288),
        "babel-plugin-transform-react-jsx-source": r(289),
        "babel-plugin-transform-react-jsx": r(290),
        "babel-plugin-transform-regenerator": r(291),
        "babel-plugin-transform-es2015-for-of": r(274),
      };
    },
    function (e, t, r) {
      e.exports = { default: r(344), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(347), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(349), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(350), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(352), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(353), __esModule: !0 };
    },
    function (e, t, r) {
      e.exports = { default: r(354), __esModule: !0 };
    },
    function (e, t) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function (e, t) {
          var r = {};
          for (var n in e)
            t.indexOf(n) >= 0 ||
              (Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]));
          return r;
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(2),
        a = i(s),
        o = r(3),
        u = i(o),
        l = r(35),
        c = i(l),
        f = r(1),
        p = n(f),
        h = !1,
        d = (function () {
          function e(t, r, n, i) {
            (0, u.default)(this, e),
              (this.queue = null),
              (this.parentPath = i),
              (this.scope = t),
              (this.state = n),
              (this.opts = r);
          }
          return (
            (e.prototype.shouldVisit = function (e) {
              var t = this.opts;
              if (t.enter || t.exit) return !0;
              if (t[e.type]) return !0;
              var r = p.VISITOR_KEYS[e.type];
              if (!r || !r.length) return !1;
              for (
                var n = r,
                  i = Array.isArray(n),
                  s = 0,
                  n = i ? n : (0, a.default)(n);
                ;

              ) {
                var o;
                if (i) {
                  if (s >= n.length) break;
                  o = n[s++];
                } else {
                  if (((s = n.next()), s.done)) break;
                  o = s.value;
                }
                var u = o;
                if (e[u]) return !0;
              }
              return !1;
            }),
            (e.prototype.create = function (e, t, r, n) {
              return c.default.get({
                parentPath: this.parentPath,
                parent: e,
                container: t,
                key: r,
                listKey: n,
              });
            }),
            (e.prototype.maybeQueue = function (e, t) {
              if (this.trap) throw new Error("Infinite cycle detected");
              this.queue &&
                (t ? this.queue.push(e) : this.priorityQueue.push(e));
            }),
            (e.prototype.visitMultiple = function (e, t, r) {
              if (0 === e.length) return !1;
              for (var n = [], i = 0; i < e.length; i++) {
                var s = e[i];
                s && this.shouldVisit(s) && n.push(this.create(t, e, i, r));
              }
              return this.visitQueue(n);
            }),
            (e.prototype.visitSingle = function (e, t) {
              return (
                !!this.shouldVisit(e[t]) &&
                this.visitQueue([this.create(e, e, t)])
              );
            }),
            (e.prototype.visitQueue = function (e) {
              (this.queue = e), (this.priorityQueue = []);
              for (
                var t = [],
                  r = !1,
                  n = e,
                  i = Array.isArray(n),
                  s = 0,
                  n = i ? n : (0, a.default)(n);
                ;

              ) {
                var o;
                if (i) {
                  if (s >= n.length) break;
                  o = n[s++];
                } else {
                  if (((s = n.next()), s.done)) break;
                  o = s.value;
                }
                var u = o;
                if (
                  (u.resync(),
                  (0 !== u.contexts.length &&
                    u.contexts[u.contexts.length - 1] === this) ||
                    u.pushContext(this),
                  null !== u.key &&
                    (h && e.length >= 1e4 && (this.trap = !0),
                    !(t.indexOf(u.node) >= 0)))
                ) {
                  if ((t.push(u.node), u.visit())) {
                    r = !0;
                    break;
                  }
                  if (
                    this.priorityQueue.length &&
                    ((r = this.visitQueue(this.priorityQueue)),
                    (this.priorityQueue = []),
                    (this.queue = e),
                    r)
                  )
                    break;
                }
              }
              for (
                var l = e,
                  c = Array.isArray(l),
                  f = 0,
                  l = c ? l : (0, a.default)(l);
                ;

              ) {
                var p;
                if (c) {
                  if (f >= l.length) break;
                  p = l[f++];
                } else {
                  if (((f = l.next()), f.done)) break;
                  p = f.value;
                }
                var d = p;
                d.popContext();
              }
              return (this.queue = null), r;
            }),
            (e.prototype.visit = function (e, t) {
              var r = e[t];
              return (
                !!r &&
                (Array.isArray(r)
                  ? this.visitMultiple(r, e, t)
                  : this.visitSingle(e, t))
              );
            }),
            e
          );
        })();
      (t.default = d), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        for (var t = this; (t = t.parentPath); ) if (e(t)) return t;
        return null;
      }
      function a(e) {
        var t = this;
        do if (e(t)) return t;
        while ((t = t.parentPath));
        return null;
      }
      function o() {
        return this.findParent(function (e) {
          return e.isFunction() || e.isProgram();
        });
      }
      function u() {
        var e = this;
        do if (Array.isArray(e.container)) return e;
        while ((e = e.parentPath));
      }
      function l(e) {
        return this.getDeepestCommonAncestorFrom(e, function (e, t, r) {
          for (
            var n = void 0,
              i = b.VISITOR_KEYS[e.type],
              s = r,
              a = Array.isArray(s),
              o = 0,
              s = a ? s : (0, y.default)(s);
            ;

          ) {
            var u;
            if (a) {
              if (o >= s.length) break;
              u = s[o++];
            } else {
              if (((o = s.next()), o.done)) break;
              u = o.value;
            }
            var l = u,
              c = l[t + 1];
            if (n)
              if (c.listKey && n.listKey === c.listKey && c.key < n.key) n = c;
              else {
                var f = i.indexOf(n.parentKey),
                  p = i.indexOf(c.parentKey);
                f > p && (n = c);
              }
            else n = c;
          }
          return n;
        });
      }
      function c(e, t) {
        var r = this;
        if (!e.length) return this;
        if (1 === e.length) return e[0];
        var n = 1 / 0,
          i = void 0,
          s = void 0,
          a = e.map(function (e) {
            var t = [];
            do t.unshift(e);
            while ((e = e.parentPath) && e !== r);
            return t.length < n && (n = t.length), t;
          }),
          o = a[0];
        e: for (var u = 0; u < n; u++) {
          for (
            var l = o[u],
              c = a,
              f = Array.isArray(c),
              p = 0,
              c = f ? c : (0, y.default)(c);
            ;

          ) {
            var h;
            if (f) {
              if (p >= c.length) break;
              h = c[p++];
            } else {
              if (((p = c.next()), p.done)) break;
              h = p.value;
            }
            var d = h;
            if (d[u] !== l) break e;
          }
          (i = u), (s = l);
        }
        if (s) return t ? t(s, i, a) : s;
        throw new Error("Couldn't find intersection");
      }
      function f() {
        var e = this,
          t = [];
        do t.push(e);
        while ((e = e.parentPath));
        return t;
      }
      function p(e) {
        return e.isDescendant(this);
      }
      function h(e) {
        return !!this.findParent(function (t) {
          return t === e;
        });
      }
      function d() {
        for (var e = this; e; ) {
          for (
            var t = arguments,
              r = Array.isArray(t),
              n = 0,
              t = r ? t : (0, y.default)(t);
            ;

          ) {
            var i;
            if (r) {
              if (n >= t.length) break;
              i = t[n++];
            } else {
              if (((n = t.next()), n.done)) break;
              i = n.value;
            }
            var s = i;
            if (e.node.type === s) return !0;
          }
          e = e.parentPath;
        }
        return !1;
      }
      function m(e) {
        var t = this.isFunction()
          ? this
          : this.findParent(function (e) {
              return e.isFunction();
            });
        if (t) {
          if (t.isFunctionExpression() || t.isFunctionDeclaration()) {
            var r = t.node.shadow;
            if (r && (!e || r[e] !== !1)) return t;
          } else if (t.isArrowFunctionExpression()) return t;
          return null;
        }
      }
      t.__esModule = !0;
      var v = r(2),
        y = i(v);
      (t.findParent = s),
        (t.find = a),
        (t.getFunctionParent = o),
        (t.getStatementParent = u),
        (t.getEarliestCommonAncestorFrom = l),
        (t.getDeepestCommonAncestorFrom = c),
        (t.getAncestry = f),
        (t.isAncestor = p),
        (t.isDescendant = h),
        (t.inType = d),
        (t.inShadow = m);
      var g = r(1),
        b = n(g),
        E = r(35);
      i(E);
    },
    function (e, t) {
      "use strict";
      function r() {
        var e = this.node;
        if (e) {
          var t = e.trailingComments,
            r = e.leadingComments;
          if (t || r) {
            var n = this.getSibling(this.key - 1),
              i = this.getSibling(this.key + 1);
            n.node || (n = i),
              i.node || (i = n),
              n.addComments("trailing", r),
              i.addComments("leading", t);
          }
        }
      }
      function n(e, t, r) {
        this.addComments(e, [
          { type: r ? "CommentLine" : "CommentBlock", value: t },
        ]);
      }
      function i(e, t) {
        if (t) {
          var r = this.node;
          if (r) {
            var n = e + "Comments";
            r[n] ? (r[n] = r[n].concat(t)) : (r[n] = t);
          }
        }
      }
      (t.__esModule = !0),
        (t.shareCommentsWithSiblings = r),
        (t.addComment = n),
        (t.addComments = i);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        var t = this.opts;
        return (
          this.debug(function () {
            return e;
          }),
          !(!this.node || !this._call(t[e])) ||
            (!!this.node &&
              this._call(t[this.node.type] && t[this.node.type][e]))
        );
      }
      function s(e) {
        if (!e) return !1;
        for (
          var t = e, r = Array.isArray(t), n = 0, t = r ? t : (0, S.default)(t);
          ;

        ) {
          var i;
          if (r) {
            if (n >= t.length) break;
            i = t[n++];
          } else {
            if (((n = t.next()), n.done)) break;
            i = n.value;
          }
          var s = i;
          if (s) {
            var a = this.node;
            if (!a) return !0;
            var o = s.call(this.state, this, this.state);
            if (o)
              throw new Error(
                "Unexpected return value from visitor method " + s
              );
            if (this.node !== a) return !0;
            if (this.shouldStop || this.shouldSkip || this.removed) return !0;
          }
        }
        return !1;
      }
      function a() {
        var e = this.opts.blacklist;
        return e && e.indexOf(this.node.type) > -1;
      }
      function o() {
        return (
          !!this.node &&
          !this.isBlacklisted() &&
          (!this.opts.shouldSkip || !this.opts.shouldSkip(this)) &&
          (this.call("enter") || this.shouldSkip
            ? (this.debug(function () {
                return "Skip...";
              }),
              this.shouldStop)
            : (this.debug(function () {
                return "Recursing into...";
              }),
              w.default.node(
                this.node,
                this.opts,
                this.scope,
                this.state,
                this,
                this.skipKeys
              ),
              this.call("exit"),
              this.shouldStop))
        );
      }
      function u() {
        this.shouldSkip = !0;
      }
      function l(e) {
        this.skipKeys[e] = !0;
      }
      function c() {
        (this.shouldStop = !0), (this.shouldSkip = !0);
      }
      function f() {
        if (!this.opts || !this.opts.noScope) {
          var e = this.context && this.context.scope;
          if (!e)
            for (var t = this.parentPath; t && !e; ) {
              if (t.opts && t.opts.noScope) return;
              (e = t.scope), (t = t.parentPath);
            }
          (this.scope = this.getScope(e)), this.scope && this.scope.init();
        }
      }
      function p(e) {
        return (
          (this.shouldSkip = !1),
          (this.shouldStop = !1),
          (this.removed = !1),
          (this.skipKeys = {}),
          e &&
            ((this.context = e), (this.state = e.state), (this.opts = e.opts)),
          this.setScope(),
          this
        );
      }
      function h() {
        this.removed ||
          (this._resyncParent(), this._resyncList(), this._resyncKey());
      }
      function d() {
        this.parentPath && (this.parent = this.parentPath.node);
      }
      function m() {
        if (this.container && this.node !== this.container[this.key]) {
          if (Array.isArray(this.container)) {
            for (var e = 0; e < this.container.length; e++)
              if (this.container[e] === this.node) return this.setKey(e);
          } else
            for (var t in this.container)
              if (this.container[t] === this.node) return this.setKey(t);
          this.key = null;
        }
      }
      function v() {
        if (this.parent && this.inList) {
          var e = this.parent[this.listKey];
          this.container !== e && (this.container = e || null);
        }
      }
      function y() {
        (null != this.key &&
          this.container &&
          this.container[this.key] === this.node) ||
          this._markRemoved();
      }
      function g() {
        this.contexts.pop(),
          this.setContext(this.contexts[this.contexts.length - 1]);
      }
      function b(e) {
        this.contexts.push(e), this.setContext(e);
      }
      function E(e, t, r, n) {
        (this.inList = !!r),
          (this.listKey = r),
          (this.parentKey = r || n),
          (this.container = t),
          (this.parentPath = e || this.parentPath),
          this.setKey(n);
      }
      function x(e) {
        (this.key = e),
          (this.node = this.container[this.key]),
          (this.type = this.node && this.node.type);
      }
      function A() {
        var e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this;
        if (!e.removed)
          for (
            var t = this.contexts,
              r = t,
              n = Array.isArray(r),
              i = 0,
              r = n ? r : (0, S.default)(r);
            ;

          ) {
            var s;
            if (n) {
              if (i >= r.length) break;
              s = r[i++];
            } else {
              if (((i = r.next()), i.done)) break;
              s = i.value;
            }
            var a = s;
            a.maybeQueue(e);
          }
      }
      function D() {
        for (var e = this, t = this.contexts; !t.length; )
          (e = e.parentPath), (t = e.contexts);
        return t;
      }
      t.__esModule = !0;
      var C = r(2),
        S = n(C);
      (t.call = i),
        (t._call = s),
        (t.isBlacklisted = a),
        (t.visit = o),
        (t.skip = u),
        (t.skipKey = l),
        (t.stop = c),
        (t.setScope = f),
        (t.setContext = p),
        (t.resync = h),
        (t._resyncParent = d),
        (t._resyncKey = m),
        (t._resyncList = v),
        (t._resyncRemoved = y),
        (t.popContext = g),
        (t.pushContext = b),
        (t.setup = E),
        (t.setKey = x),
        (t.requeue = A),
        (t._getQueueContexts = D);
      var _ = r(7),
        w = n(_);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i() {
        var e = this.node,
          t = void 0;
        if (this.isMemberExpression()) t = e.property;
        else {
          if (!this.isProperty() && !this.isMethod())
            throw new ReferenceError("todo");
          t = e.key;
        }
        return (
          e.computed || (u.isIdentifier(t) && (t = u.stringLiteral(t.name))), t
        );
      }
      function s() {
        return u.ensureBlock(this.node);
      }
      function a() {
        if (this.isArrowFunctionExpression()) {
          this.ensureBlock();
          var e = this.node;
          (e.expression = !1),
            (e.type = "FunctionExpression"),
            (e.shadow = e.shadow || !0);
        }
      }
      (t.__esModule = !0),
        (t.toComputedKey = i),
        (t.ensureBlock = s),
        (t.arrowFunctionToShadowed = a);
      var o = r(1),
        u = n(o);
    },
    function (e, t, r) {
      (function (e) {
        "use strict";
        function n(e) {
          return e && e.__esModule ? e : { default: e };
        }
        function i() {
          var e = this.evaluate();
          if (e.confident) return !!e.value;
        }
        function s() {
          function t(e) {
            i && ((s = e), (i = !1));
          }
          function r(e) {
            var r = e.node;
            if (a.has(r)) {
              var s = a.get(r);
              return s.resolved ? s.value : void t(e);
            }
            var o = { resolved: !1 };
            a.set(r, o);
            var u = n(e);
            return i && ((o.resolved = !0), (o.value = u)), u;
          }
          function n(n) {
            if (i) {
              var s = n.node;
              if (n.isSequenceExpression()) {
                var a = n.get("expressions");
                return r(a[a.length - 1]);
              }
              if (
                n.isStringLiteral() ||
                n.isNumericLiteral() ||
                n.isBooleanLiteral()
              )
                return s.value;
              if (n.isNullLiteral()) return null;
              if (n.isTemplateLiteral()) {
                for (
                  var u = "",
                    c = 0,
                    f = n.get("expressions"),
                    d = s.quasis,
                    m = Array.isArray(d),
                    v = 0,
                    d = m ? d : (0, l.default)(d);
                  ;

                ) {
                  var y;
                  if (m) {
                    if (v >= d.length) break;
                    y = d[v++];
                  } else {
                    if (((v = d.next()), v.done)) break;
                    y = v.value;
                  }
                  var g = y;
                  if (!i) break;
                  u += g.value.cooked;
                  var b = f[c++];
                  b && (u += String(r(b)));
                }
                if (!i) return;
                return u;
              }
              if (n.isConditionalExpression()) {
                var E = r(n.get("test"));
                if (!i) return;
                return r(E ? n.get("consequent") : n.get("alternate"));
              }
              if (n.isExpressionWrapper()) return r(n.get("expression"));
              if (
                n.isMemberExpression() &&
                !n.parentPath.isCallExpression({ callee: s })
              ) {
                var x = n.get("property"),
                  A = n.get("object");
                if (A.isLiteral() && x.isIdentifier()) {
                  var D = A.node.value,
                    C =
                      "undefined" == typeof D ? "undefined" : (0, o.default)(D);
                  if ("number" === C || "string" === C) return D[x.node.name];
                }
              }
              if (n.isReferencedIdentifier()) {
                var S = n.scope.getBinding(s.name);
                if (S && S.constantViolations.length > 0) return t(S.path);
                if (S && n.node.start < S.path.node.end) return t(S.path);
                if (S && S.hasValue) return S.value;
                if ("undefined" === s.name) return;
                if ("Infinity" === s.name) return 1 / 0;
                if ("NaN" === s.name) return NaN;
                var _ = n.resolve();
                return _ === n ? t(n) : r(_);
              }
              if (n.isUnaryExpression({ prefix: !0 })) {
                if ("void" === s.operator) return;
                var w = n.get("argument");
                if ("typeof" === s.operator && (w.isFunction() || w.isClass()))
                  return "function";
                var F = r(w);
                if (!i) return;
                switch (s.operator) {
                  case "!":
                    return !F;
                  case "+":
                    return +F;
                  case "-":
                    return -F;
                  case "~":
                    return ~F;
                  case "typeof":
                    return "undefined" == typeof F
                      ? "undefined"
                      : (0, o.default)(F);
                }
              }
              if (n.isArrayExpression()) {
                for (
                  var k = [],
                    P = n.get("elements"),
                    T = P,
                    O = Array.isArray(T),
                    B = 0,
                    T = O ? T : (0, l.default)(T);
                  ;

                ) {
                  var I;
                  if (O) {
                    if (B >= T.length) break;
                    I = T[B++];
                  } else {
                    if (((B = T.next()), B.done)) break;
                    I = B.value;
                  }
                  var N = I;
                  if (((N = N.evaluate()), !N.confident)) return t(N);
                  k.push(N.value);
                }
                return k;
              }
              if (n.isObjectExpression()) {
                for (
                  var M = {},
                    R = n.get("properties"),
                    L = R,
                    j = Array.isArray(L),
                    V = 0,
                    L = j ? L : (0, l.default)(L);
                  ;

                ) {
                  var U;
                  if (j) {
                    if (V >= L.length) break;
                    U = L[V++];
                  } else {
                    if (((V = L.next()), V.done)) break;
                    U = V.value;
                  }
                  var G = U;
                  if (G.isObjectMethod() || G.isSpreadProperty()) return t(G);
                  var W = G.get("key"),
                    Y = W;
                  if (G.node.computed) {
                    if (((Y = Y.evaluate()), !Y.confident)) return t(W);
                    Y = Y.value;
                  } else Y = Y.isIdentifier() ? Y.node.name : Y.node.value;
                  var q = G.get("value"),
                    K = q.evaluate();
                  if (!K.confident) return t(q);
                  (K = K.value), (M[Y] = K);
                }
                return M;
              }
              if (n.isLogicalExpression()) {
                var H = i,
                  J = r(n.get("left")),
                  X = i;
                i = H;
                var $ = r(n.get("right")),
                  z = i;
                switch (((i = X && z), s.operator)) {
                  case "||":
                    if (J && X) return (i = !0), J;
                    if (!i) return;
                    return J || $;
                  case "&&":
                    if ((((!J && X) || (!$ && z)) && (i = !0), !i)) return;
                    return J && $;
                }
              }
              if (n.isBinaryExpression()) {
                var Q = r(n.get("left"));
                if (!i) return;
                var Z = r(n.get("right"));
                if (!i) return;
                switch (s.operator) {
                  case "-":
                    return Q - Z;
                  case "+":
                    return Q + Z;
                  case "/":
                    return Q / Z;
                  case "*":
                    return Q * Z;
                  case "%":
                    return Q % Z;
                  case "**":
                    return Math.pow(Q, Z);
                  case "<":
                    return Q < Z;
                  case ">":
                    return Q > Z;
                  case "<=":
                    return Q <= Z;
                  case ">=":
                    return Q >= Z;
                  case "==":
                    return Q == Z;
                  case "!=":
                    return Q != Z;
                  case "===":
                    return Q === Z;
                  case "!==":
                    return Q !== Z;
                  case "|":
                    return Q | Z;
                  case "&":
                    return Q & Z;
                  case "^":
                    return Q ^ Z;
                  case "<<":
                    return Q << Z;
                  case ">>":
                    return Q >> Z;
                  case ">>>":
                    return Q >>> Z;
                }
              }
              if (n.isCallExpression()) {
                var ee = n.get("callee"),
                  te = void 0,
                  re = void 0;
                if (
                  (ee.isIdentifier() &&
                    !n.scope.getBinding(ee.node.name, !0) &&
                    p.indexOf(ee.node.name) >= 0 &&
                    (re = e[s.callee.name]),
                  ee.isMemberExpression())
                ) {
                  var ne = ee.get("object"),
                    ie = ee.get("property");
                  if (
                    (ne.isIdentifier() &&
                      ie.isIdentifier() &&
                      p.indexOf(ne.node.name) >= 0 &&
                      h.indexOf(ie.node.name) < 0 &&
                      ((te = e[ne.node.name]), (re = te[ie.node.name])),
                    ne.isLiteral() && ie.isIdentifier())
                  ) {
                    var se = (0, o.default)(ne.node.value);
                    ("string" !== se && "number" !== se) ||
                      ((te = ne.node.value), (re = te[ie.node.name]));
                  }
                }
                if (re) {
                  var ae = n.get("arguments").map(r);
                  if (!i) return;
                  return re.apply(te, ae);
                }
              }
              t(n);
            }
          }
          var i = !0,
            s = void 0,
            a = new f.default(),
            u = r(this);
          return i || (u = void 0), { confident: i, deopt: s, value: u };
        }
        t.__esModule = !0;
        var a = r(6),
          o = n(a),
          u = r(2),
          l = n(u),
          c = r(99),
          f = n(c);
        (t.evaluateTruthy = i), (t.evaluate = s);
        var p = ["String", "Number", "Math"],
          h = ["random"];
      }.call(
        t,
        (function () {
          return this;
        })()
      ));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s() {
        var e = this;
        do {
          if (!e.parentPath || (Array.isArray(e.container) && e.isStatement()))
            break;
          e = e.parentPath;
        } while (e);
        if (e && (e.isProgram() || e.isFile()))
          throw new Error(
            "File/Program node, we can't possibly find a statement parent to this"
          );
        return e;
      }
      function a() {
        return "left" === this.key
          ? this.getSibling("right")
          : "right" === this.key
          ? this.getSibling("left")
          : void 0;
      }
      function o() {
        var e = [],
          t = function (t) {
            t && (e = e.concat(t.getCompletionRecords()));
          };
        if (this.isIfStatement())
          t(this.get("consequent")), t(this.get("alternate"));
        else if (this.isDoExpression() || this.isFor() || this.isWhile())
          t(this.get("body"));
        else if (this.isProgram() || this.isBlockStatement())
          t(this.get("body").pop());
        else {
          if (this.isFunction()) return this.get("body").getCompletionRecords();
          this.isTryStatement()
            ? (t(this.get("block")),
              t(this.get("handler")),
              t(this.get("finalizer")))
            : e.push(this);
        }
        return e;
      }
      function u(e) {
        return x.default.get({
          parentPath: this.parentPath,
          parent: this.parent,
          container: this.container,
          listKey: this.listKey,
          key: e,
        });
      }
      function l(e, t) {
        t === !0 && (t = this.context);
        var r = e.split(".");
        return 1 === r.length ? this._getKey(e, t) : this._getPattern(r, t);
      }
      function c(e, t) {
        var r = this,
          n = this.node,
          i = n[e];
        return Array.isArray(i)
          ? i.map(function (s, a) {
              return x.default
                .get({
                  listKey: e,
                  parentPath: r,
                  parent: n,
                  container: i,
                  key: a,
                })
                .setContext(t);
            })
          : x.default
              .get({ parentPath: this, parent: n, container: n, key: e })
              .setContext(t);
      }
      function f(e, t) {
        for (
          var r = this,
            n = e,
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, b.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a;
          r = "." === o ? r.parentPath : Array.isArray(r) ? r[o] : r.get(o, t);
        }
        return r;
      }
      function p(e) {
        return D.getBindingIdentifiers(this.node, e);
      }
      function h(e) {
        return D.getOuterBindingIdentifiers(this.node, e);
      }
      function d() {
        for (
          var e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            r = this,
            n = [].concat(r),
            i = (0, y.default)(null);
          n.length;

        ) {
          var s = n.shift();
          if (s && s.node) {
            var a = D.getBindingIdentifiers.keys[s.node.type];
            if (s.isIdentifier())
              if (e) {
                var o = (i[s.node.name] = i[s.node.name] || []);
                o.push(s);
              } else i[s.node.name] = s;
            else if (s.isExportDeclaration()) {
              var u = s.get("declaration");
              u.isDeclaration() && n.push(u);
            } else {
              if (t) {
                if (s.isFunctionDeclaration()) {
                  n.push(s.get("id"));
                  continue;
                }
                if (s.isFunctionExpression()) continue;
              }
              if (a)
                for (var l = 0; l < a.length; l++) {
                  var c = a[l],
                    f = s.get(c);
                  (Array.isArray(f) || f.node) && (n = n.concat(f));
                }
            }
          }
        }
        return i;
      }
      function m(e) {
        return this.getBindingIdentifierPaths(e, !0);
      }
      t.__esModule = !0;
      var v = r(33),
        y = i(v),
        g = r(2),
        b = i(g);
      (t.getStatementParent = s),
        (t.getOpposite = a),
        (t.getCompletionRecords = o),
        (t.getSibling = u),
        (t.get = l),
        (t._getKey = c),
        (t._getPattern = f),
        (t.getBindingIdentifiers = p),
        (t.getOuterBindingIdentifiers = h),
        (t.getBindingIdentifierPaths = d),
        (t.getOuterBindingIdentifierPaths = m);
      var E = r(35),
        x = i(E),
        A = r(1),
        D = n(A);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s() {
        if (this.typeAnnotation) return this.typeAnnotation;
        var e = this._getTypeAnnotation() || y.anyTypeAnnotation();
        return (
          y.isTypeAnnotation(e) && (e = e.typeAnnotation),
          (this.typeAnnotation = e)
        );
      }
      function a() {
        var e = this.node;
        {
          if (e) {
            if (e.typeAnnotation) return e.typeAnnotation;
            var t = m[e.type];
            return t
              ? t.call(this, e)
              : ((t = m[this.parentPath.type]),
                t && t.validParent
                  ? this.parentPath.getTypeAnnotation()
                  : void 0);
          }
          if ("init" === this.key && this.parentPath.isVariableDeclarator()) {
            var r = this.parentPath.parentPath,
              n = r.parentPath;
            return "left" === r.key && n.isForInStatement()
              ? y.stringTypeAnnotation()
              : "left" === r.key && n.isForOfStatement()
              ? y.anyTypeAnnotation()
              : y.voidTypeAnnotation();
          }
        }
      }
      function o(e, t) {
        return u(e, this.getTypeAnnotation(), t);
      }
      function u(e, t, r) {
        if ("string" === e) return y.isStringTypeAnnotation(t);
        if ("number" === e) return y.isNumberTypeAnnotation(t);
        if ("boolean" === e) return y.isBooleanTypeAnnotation(t);
        if ("any" === e) return y.isAnyTypeAnnotation(t);
        if ("mixed" === e) return y.isMixedTypeAnnotation(t);
        if ("empty" === e) return y.isEmptyTypeAnnotation(t);
        if ("void" === e) return y.isVoidTypeAnnotation(t);
        if (r) return !1;
        throw new Error("Unknown base type " + e);
      }
      function l(e) {
        var t = this.getTypeAnnotation();
        if (y.isAnyTypeAnnotation(t)) return !0;
        if (y.isUnionTypeAnnotation(t)) {
          for (
            var r = t.types,
              n = Array.isArray(r),
              i = 0,
              r = n ? r : (0, h.default)(r);
            ;

          ) {
            var s;
            if (n) {
              if (i >= r.length) break;
              s = r[i++];
            } else {
              if (((i = r.next()), i.done)) break;
              s = i.value;
            }
            var a = s;
            if (y.isAnyTypeAnnotation(a) || u(e, a, !0)) return !0;
          }
          return !1;
        }
        return u(e, t, !0);
      }
      function c(e) {
        var t = this.getTypeAnnotation();
        if (
          ((e = e.getTypeAnnotation()),
          !y.isAnyTypeAnnotation(t) && y.isFlowBaseAnnotation(t))
        )
          return e.type === t.type;
      }
      function f(e) {
        var t = this.getTypeAnnotation();
        return (
          y.isGenericTypeAnnotation(t) && y.isIdentifier(t.id, { name: e })
        );
      }
      t.__esModule = !0;
      var p = r(2),
        h = i(p);
      (t.getTypeAnnotation = s),
        (t._getTypeAnnotation = a),
        (t.isBaseType = o),
        (t.couldBeBaseType = l),
        (t.baseTypeStrictlyMatches = c),
        (t.isGenericType = f);
      var d = r(311),
        m = n(d),
        v = r(1),
        y = n(v);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        var r = e.scope.getBinding(t),
          n = [];
        e.typeAnnotation = h.unionTypeAnnotation(n);
        var i = [],
          s = a(r, e, i),
          o = l(e, t);
        if (
          (o &&
            !(function () {
              var e = a(r, o.ifStatement);
              (s = s.filter(function (t) {
                return e.indexOf(t) < 0;
              })),
                n.push(o.typeAnnotation);
            })(),
          s.length)
        ) {
          s = s.concat(i);
          for (
            var u = s,
              c = Array.isArray(u),
              p = 0,
              u = c ? u : (0, f.default)(u);
            ;

          ) {
            var d;
            if (c) {
              if (p >= u.length) break;
              d = u[p++];
            } else {
              if (((p = u.next()), p.done)) break;
              d = p.value;
            }
            var m = d;
            n.push(m.getTypeAnnotation());
          }
        }
        if (n.length) return h.createUnionTypeAnnotation(n);
      }
      function a(e, t, r) {
        var n = e.constantViolations.slice();
        return (
          n.unshift(e.path),
          n.filter(function (e) {
            e = e.resolve();
            var n = e._guessExecutionStatusRelativeTo(t);
            return r && "function" === n && r.push(e), "before" === n;
          })
        );
      }
      function o(e, t) {
        var r = t.node.operator,
          n = t.get("right").resolve(),
          i = t.get("left").resolve(),
          s = void 0;
        if (
          (i.isIdentifier({ name: e })
            ? (s = n)
            : n.isIdentifier({ name: e }) && (s = i),
          s)
        )
          return "===" === r
            ? s.getTypeAnnotation()
            : h.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(r) >= 0
            ? h.numberTypeAnnotation()
            : void 0;
        if ("===" === r) {
          var a = void 0,
            o = void 0;
          if (
            (i.isUnaryExpression({ operator: "typeof" })
              ? ((a = i), (o = n))
              : n.isUnaryExpression({ operator: "typeof" }) &&
                ((a = n), (o = i)),
            (o || a) && ((o = o.resolve()), o.isLiteral()))
          ) {
            var u = o.node.value;
            if (
              "string" == typeof u &&
              a.get("argument").isIdentifier({ name: e })
            )
              return h.createTypeAnnotationBasedOnTypeof(o.node.value);
          }
        }
      }
      function u(e) {
        for (var t = void 0; (t = e.parentPath); ) {
          if (t.isIfStatement() || t.isConditionalExpression())
            return "test" === e.key ? void 0 : t;
          e = t;
        }
      }
      function l(e, t) {
        var r = u(e);
        if (r) {
          var n = r.get("test"),
            i = [n],
            s = [];
          do {
            var a = i.shift().resolve();
            if (
              (a.isLogicalExpression() &&
                (i.push(a.get("left")), i.push(a.get("right"))),
              a.isBinaryExpression())
            ) {
              var c = o(t, a);
              c && s.push(c);
            }
          } while (i.length);
          return s.length
            ? { typeAnnotation: h.createUnionTypeAnnotation(s), ifStatement: r }
            : l(r, t);
        }
      }
      t.__esModule = !0;
      var c = r(2),
        f = i(c);
      t.default = function (e) {
        if (this.isReferenced()) {
          var t = this.scope.getBinding(e.name);
          return t
            ? t.identifier.typeAnnotation
              ? t.identifier.typeAnnotation
              : s(this, e.name)
            : "undefined" === e.name
            ? h.voidTypeAnnotation()
            : "NaN" === e.name || "Infinity" === e.name
            ? h.numberTypeAnnotation()
            : void ("arguments" === e.name);
        }
      };
      var p = r(1),
        h = n(p);
      e.exports = t.default;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s() {
        var e = this.get("id");
        return e.isIdentifier() ? this.get("init").getTypeAnnotation() : void 0;
      }
      function a(e) {
        return e.typeAnnotation;
      }
      function o(e) {
        if (this.get("callee").isIdentifier())
          return P.genericTypeAnnotation(e.callee);
      }
      function u() {
        return P.stringTypeAnnotation();
      }
      function l(e) {
        var t = e.operator;
        return "void" === t
          ? P.voidTypeAnnotation()
          : P.NUMBER_UNARY_OPERATORS.indexOf(t) >= 0
          ? P.numberTypeAnnotation()
          : P.STRING_UNARY_OPERATORS.indexOf(t) >= 0
          ? P.stringTypeAnnotation()
          : P.BOOLEAN_UNARY_OPERATORS.indexOf(t) >= 0
          ? P.booleanTypeAnnotation()
          : void 0;
      }
      function c(e) {
        var t = e.operator;
        if (P.NUMBER_BINARY_OPERATORS.indexOf(t) >= 0)
          return P.numberTypeAnnotation();
        if (P.BOOLEAN_BINARY_OPERATORS.indexOf(t) >= 0)
          return P.booleanTypeAnnotation();
        if ("+" === t) {
          var r = this.get("right"),
            n = this.get("left");
          return n.isBaseType("number") && r.isBaseType("number")
            ? P.numberTypeAnnotation()
            : n.isBaseType("string") || r.isBaseType("string")
            ? P.stringTypeAnnotation()
            : P.unionTypeAnnotation([
                P.stringTypeAnnotation(),
                P.numberTypeAnnotation(),
              ]);
        }
      }
      function f() {
        return P.createUnionTypeAnnotation([
          this.get("left").getTypeAnnotation(),
          this.get("right").getTypeAnnotation(),
        ]);
      }
      function p() {
        return P.createUnionTypeAnnotation([
          this.get("consequent").getTypeAnnotation(),
          this.get("alternate").getTypeAnnotation(),
        ]);
      }
      function h() {
        return this.get("expressions").pop().getTypeAnnotation();
      }
      function d() {
        return this.get("right").getTypeAnnotation();
      }
      function m(e) {
        var t = e.operator;
        if ("++" === t || "--" === t) return P.numberTypeAnnotation();
      }
      function v() {
        return P.stringTypeAnnotation();
      }
      function y() {
        return P.numberTypeAnnotation();
      }
      function g() {
        return P.booleanTypeAnnotation();
      }
      function b() {
        return P.nullLiteralTypeAnnotation();
      }
      function E() {
        return P.genericTypeAnnotation(P.identifier("RegExp"));
      }
      function x() {
        return P.genericTypeAnnotation(P.identifier("Object"));
      }
      function A() {
        return P.genericTypeAnnotation(P.identifier("Array"));
      }
      function D() {
        return A();
      }
      function C() {
        return P.genericTypeAnnotation(P.identifier("Function"));
      }
      function S() {
        return w(this.get("callee"));
      }
      function _() {
        return w(this.get("tag"));
      }
      function w(e) {
        if (((e = e.resolve()), e.isFunction())) {
          if (e.is("async"))
            return e.is("generator")
              ? P.genericTypeAnnotation(P.identifier("AsyncIterator"))
              : P.genericTypeAnnotation(P.identifier("Promise"));
          if (e.node.returnType) return e.node.returnType;
        }
      }
      (t.__esModule = !0),
        (t.ClassDeclaration = t.ClassExpression = t.FunctionDeclaration = t.ArrowFunctionExpression = t.FunctionExpression = t.Identifier = void 0);
      var F = r(310);
      Object.defineProperty(t, "Identifier", {
        enumerable: !0,
        get: function () {
          return i(F).default;
        },
      }),
        (t.VariableDeclarator = s),
        (t.TypeCastExpression = a),
        (t.NewExpression = o),
        (t.TemplateLiteral = u),
        (t.UnaryExpression = l),
        (t.BinaryExpression = c),
        (t.LogicalExpression = f),
        (t.ConditionalExpression = p),
        (t.SequenceExpression = h),
        (t.AssignmentExpression = d),
        (t.UpdateExpression = m),
        (t.StringLiteral = v),
        (t.NumericLiteral = y),
        (t.BooleanLiteral = g),
        (t.NullLiteral = b),
        (t.RegExpLiteral = E),
        (t.ObjectExpression = x),
        (t.ArrayExpression = A),
        (t.RestElement = D),
        (t.CallExpression = S),
        (t.TaggedTemplateExpression = _);
      var k = r(1),
        P = n(k);
      (a.validParent = !0),
        (D.validParent = !0),
        (t.FunctionExpression = C),
        (t.ArrowFunctionExpression = C),
        (t.FunctionDeclaration = C),
        (t.ClassExpression = C),
        (t.ClassDeclaration = C);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        function r(e) {
          var t = n[s];
          return "*" === t || e === t;
        }
        if (!this.isMemberExpression()) return !1;
        for (var n = e.split("."), i = [this.node], s = 0; i.length; ) {
          var a = i.shift();
          if (t && s === n.length) return !0;
          if (k.isIdentifier(a)) {
            if (!r(a.name)) return !1;
          } else if (k.isLiteral(a)) {
            if (!r(a.value)) return !1;
          } else {
            if (k.isMemberExpression(a)) {
              if (a.computed && !k.isLiteral(a.property)) return !1;
              i.unshift(a.property), i.unshift(a.object);
              continue;
            }
            if (!k.isThisExpression(a)) return !1;
            if (!r("this")) return !1;
          }
          if (++s > n.length) return !1;
        }
        return s === n.length;
      }
      function a(e) {
        var t = this.node && this.node[e];
        return t && Array.isArray(t) ? !!t.length : !!t;
      }
      function o() {
        return this.scope.isStatic(this.node);
      }
      function u(e) {
        return !this.has(e);
      }
      function l(e, t) {
        return this.node[e] === t;
      }
      function c(e) {
        return k.isType(this.type, e);
      }
      function f() {
        return (
          ("init" === this.key || "left" === this.key) &&
          this.parentPath.isFor()
        );
      }
      function p(e) {
        return (
          !(
            "body" !== this.key || !this.parentPath.isArrowFunctionExpression()
          ) &&
          (this.isExpression()
            ? k.isBlockStatement(e)
            : !!this.isBlockStatement() && k.isExpression(e))
        );
      }
      function h(e) {
        var t = this,
          r = !0;
        do {
          var n = t.container;
          if (t.isFunction() && !r) return !!e;
          if (((r = !1), Array.isArray(n) && t.key !== n.length - 1)) return !1;
        } while ((t = t.parentPath) && !t.isProgram());
        return !0;
      }
      function d() {
        return (
          !this.parentPath.isLabeledStatement() &&
          !k.isBlockStatement(this.container) &&
          (0, w.default)(k.STATEMENT_OR_BLOCK_KEYS, this.key)
        );
      }
      function m(e, t) {
        if (!this.isReferencedIdentifier()) return !1;
        var r = this.scope.getBinding(this.node.name);
        if (!r || "module" !== r.kind) return !1;
        var n = r.path,
          i = n.parentPath;
        return (
          !!i.isImportDeclaration() &&
          i.node.source.value === e &&
          (!t ||
            !(!n.isImportDefaultSpecifier() || "default" !== t) ||
            !(!n.isImportNamespaceSpecifier() || "*" !== t) ||
            !(!n.isImportSpecifier() || n.node.imported.name !== t))
        );
      }
      function v() {
        var e = this.node;
        return e.end ? this.hub.file.code.slice(e.start, e.end) : "";
      }
      function y(e) {
        return "after" !== this._guessExecutionStatusRelativeTo(e);
      }
      function g(e) {
        var t = e.scope.getFunctionParent(),
          r = this.scope.getFunctionParent();
        if (t.node !== r.node) {
          var n = this._guessExecutionStatusRelativeToDifferentFunctions(t);
          if (n) return n;
          e = t.path;
        }
        var i = e.getAncestry();
        if (i.indexOf(this) >= 0) return "after";
        var s = this.getAncestry(),
          a = void 0,
          o = void 0,
          u = void 0;
        for (u = 0; u < s.length; u++) {
          var l = s[u];
          if (((o = i.indexOf(l)), o >= 0)) {
            a = l;
            break;
          }
        }
        if (!a) return "before";
        var c = i[o - 1],
          f = s[u - 1];
        if (!c || !f) return "before";
        if (c.listKey && c.container === f.container)
          return c.key > f.key ? "before" : "after";
        var p = k.VISITOR_KEYS[c.type].indexOf(c.key),
          h = k.VISITOR_KEYS[f.type].indexOf(f.key);
        return p > h ? "before" : "after";
      }
      function b(e) {
        var t = e.path;
        if (t.isFunctionDeclaration()) {
          var r = t.scope.getBinding(t.node.id.name);
          if (!r.references) return "before";
          for (
            var n = r.referencePaths,
              i = n,
              s = Array.isArray(i),
              a = 0,
              i = s ? i : (0, S.default)(i);
            ;

          ) {
            var o;
            if (s) {
              if (a >= i.length) break;
              o = i[a++];
            } else {
              if (((a = i.next()), a.done)) break;
              o = a.value;
            }
            var u = o;
            if ("callee" !== u.key || !u.parentPath.isCallExpression()) return;
          }
          for (
            var l = void 0,
              c = n,
              f = Array.isArray(c),
              p = 0,
              c = f ? c : (0, S.default)(c);
            ;

          ) {
            var h;
            if (f) {
              if (p >= c.length) break;
              h = c[p++];
            } else {
              if (((p = c.next()), p.done)) break;
              h = p.value;
            }
            var d = h,
              m = !!d.find(function (e) {
                return e.node === t.node;
              });
            if (!m) {
              var v = this._guessExecutionStatusRelativeTo(d);
              if (l) {
                if (l !== v) return;
              } else l = v;
            }
          }
          return l;
        }
      }
      function E(e, t) {
        return this._resolve(e, t) || this;
      }
      function x(e, t) {
        var r = this;
        if (!(t && t.indexOf(this) >= 0))
          if (((t = t || []), t.push(this), this.isVariableDeclarator())) {
            if (this.get("id").isIdentifier())
              return this.get("init").resolve(e, t);
          } else if (this.isReferencedIdentifier()) {
            var n = this.scope.getBinding(this.node.name);
            if (!n) return;
            if (!n.constant) return;
            if ("module" === n.kind) return;
            if (n.path !== this) {
              var i = (function () {
                var i = n.path.resolve(e, t);
                return r.find(function (e) {
                  return e.node === i.node;
                })
                  ? { v: void 0 }
                  : { v: i };
              })();
              if (
                "object" ===
                ("undefined" == typeof i ? "undefined" : (0, D.default)(i))
              )
                return i.v;
            }
          } else {
            if (this.isTypeCastExpression())
              return this.get("expression").resolve(e, t);
            if (e && this.isMemberExpression()) {
              var s = this.toComputedKey();
              if (!k.isLiteral(s)) return;
              var a = s.value,
                o = this.get("object").resolve(e, t);
              if (o.isObjectExpression())
                for (
                  var u = o.get("properties"),
                    l = u,
                    c = Array.isArray(l),
                    f = 0,
                    l = c ? l : (0, S.default)(l);
                  ;

                ) {
                  var p;
                  if (c) {
                    if (f >= l.length) break;
                    p = l[f++];
                  } else {
                    if (((f = l.next()), f.done)) break;
                    p = f.value;
                  }
                  var h = p;
                  if (h.isProperty()) {
                    var d = h.get("key"),
                      m = h.isnt("computed") && d.isIdentifier({ name: a });
                    if ((m = m || d.isLiteral({ value: a })))
                      return h.get("value").resolve(e, t);
                  }
                }
              else if (o.isArrayExpression() && !isNaN(+a)) {
                var v = o.get("elements"),
                  y = v[a];
                if (y) return y.resolve(e, t);
              }
            }
          }
      }
      (t.__esModule = !0), (t.is = void 0);
      var A = r(6),
        D = i(A),
        C = r(2),
        S = i(C);
      (t.matchesPattern = s),
        (t.has = a),
        (t.isStatic = o),
        (t.isnt = u),
        (t.equals = l),
        (t.isNodeType = c),
        (t.canHaveVariableDeclarationOrExpression = f),
        (t.canSwapBetweenExpressionAndStatement = p),
        (t.isCompletionRecord = h),
        (t.isStatementOrBlock = d),
        (t.referencesImport = m),
        (t.getSource = v),
        (t.willIMaybeExecuteBefore = y),
        (t._guessExecutionStatusRelativeTo = g),
        (t._guessExecutionStatusRelativeToDifferentFunctions = b),
        (t.resolve = E),
        (t._resolve = x);
      var _ = r(89),
        w = i(_),
        F = r(1),
        k = n(F);
      t.is = a;
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(3),
        a = i(s),
        o = r(2),
        u = i(o),
        l = r(1),
        c = n(l),
        f = {
          ReferencedIdentifier: function (e, t) {
            if (!e.isJSXIdentifier() || !l.react.isCompatTag(e.node.name)) {
              var r = e.scope.getBinding(e.node.name);
              if (r && r === t.scope.getBinding(e.node.name))
                if (r.constant) t.bindings[e.node.name] = r;
                else
                  for (
                    var n = r.constantViolations,
                      i = Array.isArray(n),
                      s = 0,
                      n = i ? n : (0, u.default)(n);
                    ;

                  ) {
                    var a;
                    if (i) {
                      if (s >= n.length) break;
                      a = n[s++];
                    } else {
                      if (((s = n.next()), s.done)) break;
                      a = s.value;
                    }
                    var o = a;
                    t.breakOnScopePaths = t.breakOnScopePaths.concat(
                      o.getAncestry()
                    );
                  }
            }
          },
        },
        p = (function () {
          function e(t, r) {
            (0, a.default)(this, e),
              (this.breakOnScopePaths = []),
              (this.bindings = {}),
              (this.scopes = []),
              (this.scope = r),
              (this.path = t);
          }
          return (
            (e.prototype.isCompatibleScope = function (e) {
              for (var t in this.bindings) {
                var r = this.bindings[t];
                if (!e.bindingIdentifierEquals(t, r.identifier)) return !1;
              }
              return !0;
            }),
            (e.prototype.getCompatibleScopes = function () {
              var e = this.path.scope;
              do {
                if (!this.isCompatibleScope(e)) break;
                if (
                  (this.scopes.push(e),
                  this.breakOnScopePaths.indexOf(e.path) >= 0)
                )
                  break;
              } while ((e = e.parent));
            }),
            (e.prototype.getAttachmentPath = function () {
              var e = this._getAttachmentPath();
              if (e) {
                var t = e.scope;
                if (
                  (t.path === e && (t = e.scope.parent),
                  t.path.isProgram() || t.path.isFunction())
                )
                  for (var r in this.bindings)
                    if (t.hasOwnBinding(r)) {
                      var n = this.bindings[r];
                      if (
                        "param" !== n.kind &&
                        n.path.getStatementParent().key > e.key
                      )
                        return;
                    }
                return e;
              }
            }),
            (e.prototype._getAttachmentPath = function () {
              var e = this.scopes,
                t = e.pop();
              if (t) {
                if (t.path.isFunction()) {
                  if (this.hasOwnParamBindings(t)) {
                    if (this.scope === t) return;
                    return t.path.get("body").get("body")[0];
                  }
                  return this.getNextScopeStatementParent();
                }
                return t.path.isProgram()
                  ? this.getNextScopeStatementParent()
                  : void 0;
              }
            }),
            (e.prototype.getNextScopeStatementParent = function () {
              var e = this.scopes.pop();
              if (e) return e.path.getStatementParent();
            }),
            (e.prototype.hasOwnParamBindings = function (e) {
              for (var t in this.bindings)
                if (e.hasOwnBinding(t)) {
                  var r = this.bindings[t];
                  if ("param" === r.kind) return !0;
                }
              return !1;
            }),
            (e.prototype.run = function () {
              var e = this.path.node;
              if (!e._hoisted) {
                (e._hoisted = !0),
                  this.path.traverse(f, this),
                  this.getCompatibleScopes();
                var t = this.getAttachmentPath();
                if (
                  t &&
                  t.getFunctionParent() !== this.path.getFunctionParent()
                ) {
                  var r = t.scope.generateUidIdentifier("ref");
                  t.insertBefore([
                    c.variableDeclaration("var", [
                      c.variableDeclarator(r, this.path.node),
                    ]),
                  ]);
                  var n = this.path.parentPath;
                  n.isJSXElement() &&
                    this.path.container === n.node.children &&
                    (r = c.JSXExpressionContainer(r)),
                    this.path.replaceWith(r);
                }
              }
            }),
            e
          );
        })();
      (t.default = p), (e.exports = t.default);
    },
    function (e, t) {
      "use strict";
      t.__esModule = !0;
      t.hooks = [
        function (e, t) {
          if ("body" === e.key && t.isArrowFunctionExpression())
            return e.replaceWith(e.scope.buildUndefinedNode()), !0;
        },
        function (e, t) {
          var r = !1;
          if (
            ((r = r || ("test" === e.key && (t.isWhile() || t.isSwitchCase()))),
            (r = r || ("declaration" === e.key && t.isExportDeclaration())),
            (r = r || ("body" === e.key && t.isLabeledStatement())),
            (r =
              r ||
              ("declarations" === e.listKey &&
                t.isVariableDeclaration() &&
                1 === t.node.declarations.length)),
            (r = r || ("expression" === e.key && t.isExpressionStatement())))
          )
            return t.remove(), !0;
        },
        function (e, t) {
          if (t.isSequenceExpression() && 1 === t.node.expressions.length)
            return t.replaceWith(t.node.expressions[0]), !0;
        },
        function (e, t) {
          if (t.isBinary())
            return (
              "left" === e.key
                ? t.replaceWith(t.node.right)
                : t.replaceWith(t.node.left),
              !0
            );
        },
        function (e, t) {
          if (
            (t.isIfStatement() &&
              ("consequent" === e.key || "alternate" === e.key)) ||
            (t.isLoop() && "body" === e.key)
          )
            return e.replaceWith({ type: "BlockStatement", body: [] }), !0;
        },
      ];
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        if (
          (this._assertUnremoved(),
          (e = this._verifyNodeList(e)),
          this.parentPath.isExpressionStatement() ||
            this.parentPath.isLabeledStatement())
        )
          return this.parentPath.insertBefore(e);
        if (
          this.isNodeType("Expression") ||
          (this.parentPath.isForStatement() && "init" === this.key)
        )
          this.node && e.push(this.node),
            this.replaceExpressionWithStatements(e);
        else {
          if ((this._maybePopFromStatements(e), Array.isArray(this.container)))
            return this._containerInsertBefore(e);
          if (!this.isStatementOrBlock())
            throw new Error(
              "We don't know what to do with this node type. We were previously a Statement but we can't fit in here?"
            );
          this.node && e.push(this.node),
            this._replaceWith(_.blockStatement(e));
        }
        return [this];
      }
      function a(e, t) {
        this.updateSiblingKeys(e, t.length);
        for (var r = [], n = 0; n < t.length; n++) {
          var i = e + n,
            s = t[n];
          if ((this.container.splice(i, 0, s), this.context)) {
            var a = this.context.create(
              this.parent,
              this.container,
              i,
              this.listKey
            );
            this.context.queue && a.pushContext(this.context), r.push(a);
          } else
            r.push(
              C.default.get({
                parentPath: this.parentPath,
                parent: this.parent,
                container: this.container,
                listKey: this.listKey,
                key: i,
              })
            );
        }
        for (
          var o = this._getQueueContexts(),
            u = r,
            l = Array.isArray(u),
            c = 0,
            u = l ? u : (0, b.default)(u);
          ;

        ) {
          var f;
          if (l) {
            if (c >= u.length) break;
            f = u[c++];
          } else {
            if (((c = u.next()), c.done)) break;
            f = c.value;
          }
          var p = f;
          p.setScope(),
            p.debug(function () {
              return "Inserted.";
            });
          for (
            var h = o,
              d = Array.isArray(h),
              m = 0,
              h = d ? h : (0, b.default)(h);
            ;

          ) {
            var v;
            if (d) {
              if (m >= h.length) break;
              v = h[m++];
            } else {
              if (((m = h.next()), m.done)) break;
              v = m.value;
            }
            var y = v;
            y.maybeQueue(p, !0);
          }
        }
        return r;
      }
      function o(e) {
        return this._containerInsert(this.key, e);
      }
      function u(e) {
        return this._containerInsert(this.key + 1, e);
      }
      function l(e) {
        var t = e[e.length - 1],
          r =
            _.isIdentifier(t) ||
            (_.isExpressionStatement(t) && _.isIdentifier(t.expression));
        r && !this.isCompletionRecord() && e.pop();
      }
      function c(e) {
        if (
          (this._assertUnremoved(),
          (e = this._verifyNodeList(e)),
          this.parentPath.isExpressionStatement() ||
            this.parentPath.isLabeledStatement())
        )
          return this.parentPath.insertAfter(e);
        if (
          this.isNodeType("Expression") ||
          (this.parentPath.isForStatement() && "init" === this.key)
        ) {
          if (this.node) {
            var t = this.scope.generateDeclaredUidIdentifier();
            e.unshift(
              _.expressionStatement(_.assignmentExpression("=", t, this.node))
            ),
              e.push(_.expressionStatement(t));
          }
          this.replaceExpressionWithStatements(e);
        } else {
          if ((this._maybePopFromStatements(e), Array.isArray(this.container)))
            return this._containerInsertAfter(e);
          if (!this.isStatementOrBlock())
            throw new Error(
              "We don't know what to do with this node type. We were previously a Statement but we can't fit in here?"
            );
          this.node && e.unshift(this.node),
            this._replaceWith(_.blockStatement(e));
        }
        return [this];
      }
      function f(e, t) {
        if (this.parent)
          for (var r = E.path.get(this.parent), n = 0; n < r.length; n++) {
            var i = r[n];
            i.key >= e && (i.key += t);
          }
      }
      function p(e) {
        if (!e) return [];
        e.constructor !== Array && (e = [e]);
        for (var t = 0; t < e.length; t++) {
          var r = e[t],
            n = void 0;
          if (
            (r
              ? "object" !==
                ("undefined" == typeof r ? "undefined" : (0, y.default)(r))
                ? (n = "contains a non-object node")
                : r.type
                ? r instanceof C.default &&
                  (n = "has a NodePath when it expected a raw object")
                : (n = "without a type")
              : (n = "has falsy node"),
            n)
          ) {
            var i = Array.isArray(r)
              ? "array"
              : "undefined" == typeof r
              ? "undefined"
              : (0, y.default)(r);
            throw new Error(
              "Node list " + n + " with the index of " + t + " and type of " + i
            );
          }
        }
        return e;
      }
      function h(e, t) {
        this._assertUnremoved(), (t = this._verifyNodeList(t));
        var r = C.default.get({
          parentPath: this,
          parent: this.node,
          container: this.node[e],
          listKey: e,
          key: 0,
        });
        return r.insertBefore(t);
      }
      function d(e, t) {
        this._assertUnremoved(), (t = this._verifyNodeList(t));
        var r = this.node[e],
          n = C.default.get({
            parentPath: this,
            parent: this.node,
            container: r,
            listKey: e,
            key: r.length,
          });
        return n.replaceWithMultiple(t);
      }
      function m() {
        var e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : this.scope,
          t = new A.default(this, e);
        return t.run();
      }
      t.__esModule = !0;
      var v = r(6),
        y = i(v),
        g = r(2),
        b = i(g);
      (t.insertBefore = s),
        (t._containerInsert = a),
        (t._containerInsertBefore = o),
        (t._containerInsertAfter = u),
        (t._maybePopFromStatements = l),
        (t.insertAfter = c),
        (t.updateSiblingKeys = f),
        (t._verifyNodeList = p),
        (t.unshiftContainer = h),
        (t.pushContainer = d),
        (t.hoist = m);
      var E = r(67),
        x = r(313),
        A = i(x),
        D = r(35),
        C = i(D),
        S = r(1),
        _ = n(S);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i() {
        return (
          this._assertUnremoved(),
          this.resync(),
          this._callRemovalHooks()
            ? void this._markRemoved()
            : (this.shareCommentsWithSiblings(),
              this._remove(),
              void this._markRemoved())
        );
      }
      function s() {
        for (
          var e = f.hooks,
            t = Array.isArray(e),
            r = 0,
            e = t ? e : (0, c.default)(e);
          ;

        ) {
          var n;
          if (t) {
            if (r >= e.length) break;
            n = e[r++];
          } else {
            if (((r = e.next()), r.done)) break;
            n = r.value;
          }
          var i = n;
          if (i(this, this.parentPath)) return !0;
        }
      }
      function a() {
        Array.isArray(this.container)
          ? (this.container.splice(this.key, 1),
            this.updateSiblingKeys(this.key, -1))
          : this._replaceWith(null);
      }
      function o() {
        (this.shouldSkip = !0), (this.removed = !0), (this.node = null);
      }
      function u() {
        if (this.removed)
          throw this.buildCodeFrameError(
            "NodePath has been removed so is read-only."
          );
      }
      t.__esModule = !0;
      var l = r(2),
        c = n(l);
      (t.remove = i),
        (t._callRemovalHooks = s),
        (t._remove = a),
        (t._markRemoved = o),
        (t._assertUnremoved = u);
      var f = r(314);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        this.resync(),
          (e = this._verifyNodeList(e)),
          x.inheritLeadingComments(e[0], this.node),
          x.inheritTrailingComments(e[e.length - 1], this.node),
          (this.node = this.container[this.key] = null),
          this.insertAfter(e),
          this.node ? this.requeue() : this.remove();
      }
      function a(e) {
        this.resync();
        try {
          (e = "(" + e + ")"), (e = (0, b.parse)(e));
        } catch (r) {
          var t = r.loc;
          throw (
            (t &&
              ((r.message += " - make sure this is an expression."),
              (r.message += "\n" + (0, d.default)(e, t.line, t.column + 1))),
            r)
          );
        }
        return (
          (e = e.program.body[0].expression),
          v.default.removeProperties(e),
          this.replaceWith(e)
        );
      }
      function o(e) {
        if ((this.resync(), this.removed))
          throw new Error(
            "You can't replace this node, we've already removed it"
          );
        if ((e instanceof g.default && (e = e.node), !e))
          throw new Error(
            "You passed `path.replaceWith()` a falsy node, use `path.remove()` instead"
          );
        if (this.node !== e) {
          if (this.isProgram() && !x.isProgram(e))
            throw new Error(
              "You can only replace a Program root node with another Program node"
            );
          if (Array.isArray(e))
            throw new Error(
              "Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`"
            );
          if ("string" == typeof e)
            throw new Error(
              "Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`"
            );
          if (
            (this.isNodeType("Statement") &&
              x.isExpression(e) &&
              (this.canHaveVariableDeclarationOrExpression() ||
                this.canSwapBetweenExpressionAndStatement(e) ||
                (e = x.expressionStatement(e))),
            this.isNodeType("Expression") &&
              x.isStatement(e) &&
              !this.canHaveVariableDeclarationOrExpression() &&
              !this.canSwapBetweenExpressionAndStatement(e))
          )
            return this.replaceExpressionWithStatements([e]);
          var t = this.node;
          t && (x.inheritsComments(e, t), x.removeComments(t)),
            this._replaceWith(e),
            (this.type = e.type),
            this.setScope(),
            this.requeue();
        }
      }
      function u(e) {
        if (!this.container) throw new ReferenceError("Container is falsy");
        this.inList
          ? x.validate(this.parent, this.key, [e])
          : x.validate(this.parent, this.key, e),
          this.debug(function () {
            return "Replace with " + (e && e.type);
          }),
          (this.node = this.container[this.key] = e);
      }
      function l(e) {
        this.resync();
        var t = x.toSequenceExpression(e, this.scope);
        if (x.isSequenceExpression(t)) {
          var r = t.expressions;
          r.length >= 2 &&
            this.parentPath.isExpressionStatement() &&
            this._maybePopFromStatements(r),
            1 === r.length ? this.replaceWith(r[0]) : this.replaceWith(t);
        } else {
          if (!t) {
            var n = x.functionExpression(null, [], x.blockStatement(e));
            (n.shadow = !0),
              this.replaceWith(x.callExpression(n, [])),
              this.traverse(A);
            for (
              var i = this.get("callee").getCompletionRecords(),
                s = i,
                a = Array.isArray(s),
                o = 0,
                s = a ? s : (0, p.default)(s);
              ;

            ) {
              var u;
              if (a) {
                if (o >= s.length) break;
                u = s[o++];
              } else {
                if (((o = s.next()), o.done)) break;
                u = o.value;
              }
              var l = u;
              if (l.isExpressionStatement()) {
                var c = l.findParent(function (e) {
                  return e.isLoop();
                });
                if (c) {
                  var f = this.get("callee"),
                    h = f.scope.generateDeclaredUidIdentifier("ret");
                  f.get("body").pushContainer("body", x.returnStatement(h)),
                    l
                      .get("expression")
                      .replaceWith(
                        x.assignmentExpression("=", h, l.node.expression)
                      );
                } else l.replaceWith(x.returnStatement(l.node.expression));
              }
            }
            return this.node;
          }
          this.replaceWith(t);
        }
      }
      function c(e) {
        return (
          this.resync(),
          Array.isArray(e)
            ? Array.isArray(this.container)
              ? ((e = this._verifyNodeList(e)),
                this._containerInsertAfter(e),
                this.remove())
              : this.replaceWithMultiple(e)
            : this.replaceWith(e)
        );
      }
      t.__esModule = !0;
      var f = r(2),
        p = i(f);
      (t.replaceWithMultiple = s),
        (t.replaceWithSourceString = a),
        (t.replaceWith = o),
        (t._replaceWith = u),
        (t.replaceExpressionWithStatements = l),
        (t.replaceInline = c);
      var h = r(147),
        d = i(h),
        m = r(7),
        v = i(m),
        y = r(35),
        g = i(y),
        b = r(102),
        E = r(1),
        x = n(E),
        A = {
          Function: function (e) {
            e.skip();
          },
          VariableDeclaration: function (e) {
            if ("var" === e.node.kind) {
              var t = e.getBindingIdentifiers();
              for (var r in t) e.scope.push({ id: t[r] });
              for (
                var n = [],
                  i = e.node.declarations,
                  s = Array.isArray(i),
                  a = 0,
                  i = s ? i : (0, p.default)(i);
                ;

              ) {
                var o;
                if (s) {
                  if (a >= i.length) break;
                  o = i[a++];
                } else {
                  if (((a = i.next()), a.done)) break;
                  o = a.value;
                }
                var u = o;
                u.init &&
                  n.push(
                    x.expressionStatement(
                      x.assignmentExpression("=", u.id, u.init)
                    )
                  );
              }
              e.replaceWithMultiple(n);
            }
          },
        };
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      t.__esModule = !0;
      var s = r(3),
        a = i(s),
        o = r(160),
        u = (i(o), r(1)),
        l = n(u),
        c = {
          ReferencedIdentifier: function (e, t) {
            var r = e.node;
            r.name === t.oldName && (r.name = t.newName);
          },
          Scope: function (e, t) {
            e.scope.bindingIdentifierEquals(t.oldName, t.binding.identifier) ||
              e.skip();
          },
          "AssignmentExpression|Declaration": function (e, t) {
            var r = e.getOuterBindingIdentifiers();
            for (var n in r) n === t.oldName && (r[n].name = t.newName);
          },
        },
        f = (function () {
          function e(t, r, n) {
            (0, a.default)(this, e),
              (this.newName = n),
              (this.oldName = r),
              (this.binding = t);
          }
          return (
            (e.prototype.maybeConvertFromExportDeclaration = function (e) {
              var t = e.parentPath.isExportDeclaration() && e.parentPath;
              if (t) {
                var r = t.isExportDefaultDeclaration();
                r &&
                  (e.isFunctionDeclaration() || e.isClassDeclaration()) &&
                  !e.node.id &&
                  (e.node.id = e.scope.generateUidIdentifier("default"));
                var n = e.getOuterBindingIdentifiers(),
                  i = [];
                for (var s in n) {
                  var a = s === this.oldName ? this.newName : s,
                    o = r ? "default" : s;
                  i.push(l.exportSpecifier(l.identifier(a), l.identifier(o)));
                }
                if (i.length) {
                  var u = l.exportNamedDeclaration(null, i);
                  e.isFunctionDeclaration() && (u._blockHoist = 3),
                    t.insertAfter(u),
                    t.replaceWith(e.node);
                }
              }
            }),
            (e.prototype.maybeConvertFromClassFunctionDeclaration = function (
              e
            ) {}),
            (e.prototype.maybeConvertFromClassFunctionExpression = function (
              e
            ) {}),
            (e.prototype.rename = function (e) {
              var t = this.binding,
                r = this.oldName,
                n = this.newName,
                i = t.scope,
                s = t.path,
                a = s.find(function (e) {
                  return e.isDeclaration() || e.isFunctionExpression();
                });
              a && this.maybeConvertFromExportDeclaration(a),
                i.traverse(e || i.block, c, this),
                e ||
                  (i.removeOwnBinding(r),
                  (i.bindings[n] = t),
                  (this.binding.identifier.name = n)),
                "hoisted" === t.type,
                a &&
                  (this.maybeConvertFromClassFunctionDeclaration(a),
                  this.maybeConvertFromClassFunctionExpression(a));
            }),
            e
          );
        })();
      (t.default = f), (e.exports = t.default);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        if (e._exploded) return e;
        e._exploded = !0;
        for (var t in e)
          if (!h(t)) {
            var r = t.split("|");
            if (1 !== r.length) {
              var n = e[t];
              delete e[t];
              for (
                var i = r,
                  s = Array.isArray(i),
                  o = 0,
                  i = s ? i : (0, E.default)(i);
                ;

              ) {
                var u;
                if (s) {
                  if (o >= i.length) break;
                  u = i[o++];
                } else {
                  if (((o = i.next()), o.done)) break;
                  u = o.value;
                }
                var l = u;
                e[l] = n;
              }
            }
          }
        a(e), delete e.__esModule, c(e), f(e);
        for (
          var m = (0, g.default)(e),
            v = Array.isArray(m),
            y = 0,
            m = v ? m : (0, E.default)(m);
          ;

        ) {
          var b;
          if (v) {
            if (y >= m.length) break;
            b = m[y++];
          } else {
            if (((y = m.next()), y.done)) break;
            b = y.value;
          }
          var x = b;
          if (!h(x)) {
            var D = A[x];
            if (D) {
              var C = e[x];
              for (var S in C) C[S] = p(D, C[S]);
              if ((delete e[x], D.types))
                for (
                  var w = D.types,
                    k = Array.isArray(w),
                    P = 0,
                    w = k ? w : (0, E.default)(w);
                  ;

                ) {
                  var T;
                  if (k) {
                    if (P >= w.length) break;
                    T = w[P++];
                  } else {
                    if (((P = w.next()), P.done)) break;
                    T = P.value;
                  }
                  var O = T;
                  e[O] ? d(e[O], C) : (e[O] = C);
                }
              else d(e, C);
            }
          }
        }
        for (var B in e)
          if (!h(B)) {
            var I = e[B],
              N = _.FLIPPED_ALIAS_KEYS[B],
              M = _.DEPRECATED_KEYS[B];
            if ((M && (N = [M]), N)) {
              delete e[B];
              for (
                var R = N,
                  L = Array.isArray(R),
                  j = 0,
                  R = L ? R : (0, E.default)(R);
                ;

              ) {
                var V;
                if (L) {
                  if (j >= R.length) break;
                  V = R[j++];
                } else {
                  if (((j = R.next()), j.done)) break;
                  V = j.value;
                }
                var U = V,
                  G = e[U];
                G ? d(G, I) : (e[U] = (0, F.default)(I));
              }
            }
          }
        for (var W in e) h(W) || f(e[W]);
        return e;
      }
      function a(e) {
        if (!e._verified) {
          if ("function" == typeof e)
            throw new Error(C.get("traverseVerifyRootFunction"));
          for (var t in e)
            if ((("enter" !== t && "exit" !== t) || o(t, e[t]), !h(t))) {
              if (_.TYPES.indexOf(t) < 0)
                throw new Error(C.get("traverseVerifyNodeType", t));
              var r = e[t];
              if (
                "object" ===
                ("undefined" == typeof r ? "undefined" : (0, v.default)(r))
              )
                for (var n in r) {
                  if ("enter" !== n && "exit" !== n)
                    throw new Error(
                      C.get("traverseVerifyVisitorProperty", t, n)
                    );
                  o(t + "." + n, r[n]);
                }
            }
          e._verified = !0;
        }
      }
      function o(e, t) {
        for (
          var r = [].concat(t),
            n = r,
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, E.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a;
          if ("function" != typeof o)
            throw new TypeError(
              "Non-function found defined in " +
                e +
                " with type " +
                ("undefined" == typeof o ? "undefined" : (0, v.default)(o))
            );
        }
      }
      function u(e) {
        for (
          var t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : [],
            r = arguments[2],
            n = {},
            i = 0;
          i < e.length;
          i++
        ) {
          var a = e[i],
            o = t[i];
          s(a);
          for (var u in a) {
            var c = a[u];
            (o || r) && (c = l(c, o, r));
            var f = (n[u] = n[u] || {});
            d(f, c);
          }
        }
        return n;
      }
      function l(e, t, r) {
        var n = {},
          i = function (i) {
            var s = e[i];
            return Array.isArray(s)
              ? ((s = s.map(function (e) {
                  var n = e;
                  return (
                    t &&
                      (n = function (r) {
                        return e.call(t, r, t);
                      }),
                    r && (n = r(t.key, i, n)),
                    n
                  );
                })),
                void (n[i] = s))
              : "continue";
          };
        for (var s in e) {
          i(s);
        }
        return n;
      }
      function c(e) {
        for (var t in e)
          if (!h(t)) {
            var r = e[t];
            "function" == typeof r && (e[t] = { enter: r });
          }
      }
      function f(e) {
        e.enter && !Array.isArray(e.enter) && (e.enter = [e.enter]),
          e.exit && !Array.isArray(e.exit) && (e.exit = [e.exit]);
      }
      function p(e, t) {
        var r = function (r) {
          if (e.checkPath(r)) return t.apply(this, arguments);
        };
        return (
          (r.toString = function () {
            return t.toString();
          }),
          r
        );
      }
      function h(e) {
        return (
          "_" === e[0] ||
          "enter" === e ||
          "exit" === e ||
          "shouldSkip" === e ||
          "blacklist" === e ||
          "noScope" === e ||
          "skipKeys" === e
        );
      }
      function d(e, t) {
        for (var r in t) e[r] = [].concat(e[r] || [], t[r]);
      }
      t.__esModule = !0;
      var m = r(6),
        v = i(m),
        y = r(17),
        g = i(y),
        b = r(2),
        E = i(b);
      (t.explode = s), (t.verify = a), (t.merge = u);
      var x = r(159),
        A = n(x),
        D = r(16),
        C = n(D),
        S = r(1),
        _ = n(S),
        w = r(87),
        F = i(w);
    },
    function (e, t, r) {
      e.exports = r(402);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        var t =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : e.key || e.property;
        return (
          e.computed || (k.isIdentifier(t) && (t = k.stringLiteral(t.name))), t
        );
      }
      function a(e, t) {
        function r(e) {
          for (
            var s = !1,
              a = [],
              o = e,
              u = Array.isArray(o),
              l = 0,
              o = u ? o : (0, b.default)(o);
            ;

          ) {
            var c;
            if (u) {
              if (l >= o.length) break;
              c = o[l++];
            } else {
              if (((l = o.next()), l.done)) break;
              c = l.value;
            }
            var f = c;
            if (k.isExpression(f)) a.push(f);
            else if (k.isExpressionStatement(f)) a.push(f.expression);
            else {
              if (k.isVariableDeclaration(f)) {
                if ("var" !== f.kind) return (i = !0);
                for (
                  var p = f.declarations,
                    h = Array.isArray(p),
                    d = 0,
                    p = h ? p : (0, b.default)(p);
                  ;

                ) {
                  var m;
                  if (h) {
                    if (d >= p.length) break;
                    m = p[d++];
                  } else {
                    if (((d = p.next()), d.done)) break;
                    m = d.value;
                  }
                  var v = m,
                    y = k.getBindingIdentifiers(v);
                  for (var g in y) n.push({ kind: f.kind, id: y[g] });
                  v.init && a.push(k.assignmentExpression("=", v.id, v.init));
                }
                s = !0;
                continue;
              }
              if (k.isIfStatement(f)) {
                var E = f.consequent
                    ? r([f.consequent])
                    : t.buildUndefinedNode(),
                  x = f.alternate ? r([f.alternate]) : t.buildUndefinedNode();
                if (!E || !x) return (i = !0);
                a.push(k.conditionalExpression(f.test, E, x));
              } else {
                if (!k.isBlockStatement(f)) {
                  if (k.isEmptyStatement(f)) {
                    s = !0;
                    continue;
                  }
                  return (i = !0);
                }
                a.push(r(f.body));
              }
            }
            s = !1;
          }
          return (
            (s || 0 === a.length) && a.push(t.buildUndefinedNode()),
            1 === a.length ? a[0] : k.sequenceExpression(a)
          );
        }
        if (e && e.length) {
          var n = [],
            i = !1,
            s = r(e);
          if (!i) {
            for (var a = 0; a < n.length; a++) t.push(n[a]);
            return s;
          }
        }
      }
      function o(e) {
        var t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : e.key,
          r = void 0;
        return "method" === e.kind
          ? o.increment() + ""
          : ((r = k.isIdentifier(t)
              ? t.name
              : k.isStringLiteral(t)
              ? (0, y.default)(t.value)
              : (0, y.default)(k.removePropertiesDeep(k.cloneDeep(t)))),
            e.computed && (r = "[" + r + "]"),
            e.static && (r = "static:" + r),
            r);
      }
      function u(e) {
        return (
          (e += ""),
          (e = e.replace(/[^a-zA-Z0-9$_]/g, "-")),
          (e = e.replace(/^[-0-9]+/, "")),
          (e = e.replace(/[-\s]+(.)?/g, function (e, t) {
            return t ? t.toUpperCase() : "";
          })),
          k.isValidIdentifier(e) || (e = "_" + e),
          e || "_"
        );
      }
      function l(e) {
        return (
          (e = u(e)), ("eval" !== e && "arguments" !== e) || (e = "_" + e), e
        );
      }
      function c(e, t) {
        if (k.isStatement(e)) return e;
        var r = !1,
          n = void 0;
        if (k.isClass(e)) (r = !0), (n = "ClassDeclaration");
        else if (k.isFunction(e)) (r = !0), (n = "FunctionDeclaration");
        else if (k.isAssignmentExpression(e)) return k.expressionStatement(e);
        if ((r && !e.id && (n = !1), !n)) {
          if (t) return !1;
          throw new Error("cannot turn " + e.type + " to a statement");
        }
        return (e.type = n), e;
      }
      function f(e) {
        if (
          (k.isExpressionStatement(e) && (e = e.expression), k.isExpression(e))
        )
          return e;
        if (
          (k.isClass(e)
            ? (e.type = "ClassExpression")
            : k.isFunction(e) && (e.type = "FunctionExpression"),
          !k.isExpression(e))
        )
          throw new Error("cannot turn " + e.type + " to an expression");
        return e;
      }
      function p(e, t) {
        return k.isBlockStatement(e)
          ? e
          : (k.isEmptyStatement(e) && (e = []),
            Array.isArray(e) ||
              (k.isStatement(e) ||
                (e = k.isFunction(t)
                  ? k.returnStatement(e)
                  : k.expressionStatement(e)),
              (e = [e])),
            k.blockStatement(e));
      }
      function h(e) {
        if (void 0 === e) return k.identifier("undefined");
        if (e === !0 || e === !1) return k.booleanLiteral(e);
        if (null === e) return k.nullLiteral();
        if ((0, w.default)(e)) return k.stringLiteral(e);
        if ((0, D.default)(e)) return k.numericLiteral(e);
        if ((0, S.default)(e)) {
          var t = e.source,
            r = e.toString().match(/\/([a-z]+|)$/)[1];
          return k.regExpLiteral(t, r);
        }
        if (Array.isArray(e)) return k.arrayExpression(e.map(k.valueToNode));
        if ((0, x.default)(e)) {
          var n = [];
          for (var i in e) {
            var s = void 0;
            (s = k.isValidIdentifier(i) ? k.identifier(i) : k.stringLiteral(i)),
              n.push(k.objectProperty(s, k.valueToNode(e[i])));
          }
          return k.objectExpression(n);
        }
        throw new Error("don't know how to turn this value into a node");
      }
      t.__esModule = !0;
      var d = r(294),
        m = i(d),
        v = r(32),
        y = i(v),
        g = r(2),
        b = i(g);
      (t.toComputedKey = s),
        (t.toSequenceExpression = a),
        (t.toKeyAlias = o),
        (t.toIdentifier = u),
        (t.toBindingIdentifierName = l),
        (t.toStatement = c),
        (t.toExpression = f),
        (t.toBlock = p),
        (t.valueToNode = h);
      var E = r(212),
        x = i(E),
        A = r(211),
        D = i(A),
        C = r(213),
        S = i(C),
        _ = r(144),
        w = i(_),
        F = r(1),
        k = n(F);
      (o.uid = 0),
        (o.increment = function () {
          return o.uid >= m.default ? (o.uid = 0) : o.uid++;
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function i(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      var s = r(1),
        a = i(s),
        o = r(101),
        u = r(26),
        l = n(u);
      (0, l.default)("ArrayExpression", {
        fields: {
          elements: {
            validate: (0, u.chain)(
              (0, u.assertValueType)("array"),
              (0, u.assertEach)(
                (0, u.assertNodeOrValueType)(
                  "null",
                  "Expression",
                  "SpreadElement"
                )
              )
            ),
            default: [],
          },
        },
        visitor: ["elements"],
        aliases: ["Expression"],
      }),
        (0, l.default)("AssignmentExpression", {
          fields: {
            operator: { validate: (0, u.assertValueType)("string") },
            left: { validate: (0, u.assertNodeType)("LVal") },
            right: { validate: (0, u.assertNodeType)("Expression") },
          },
          builder: ["operator", "left", "right"],
          visitor: ["left", "right"],
          aliases: ["Expression"],
        }),
        (0, l.default)("BinaryExpression", {
          builder: ["operator", "left", "right"],
          fields: {
            operator: {
              validate: u.assertOneOf.apply(void 0, o.BINARY_OPERATORS),
            },
            left: { validate: (0, u.assertNodeType)("Expression") },
            right: { validate: (0, u.assertNodeType)("Expression") },
          },
          visitor: ["left", "right"],
          aliases: ["Binary", "Expression"],
        }),
        (0, l.default)("Directive", {
          visitor: ["value"],
          fields: {
            value: { validate: (0, u.assertNodeType)("DirectiveLiteral") },
          },
        }),
        (0, l.default)("DirectiveLiteral", {
          builder: ["value"],
          fields: { value: { validate: (0, u.assertValueType)("string") } },
        }),
        (0, l.default)("BlockStatement", {
          builder: ["body", "directives"],
          visitor: ["directives", "body"],
          fields: {
            directives: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Directive"))
              ),
              default: [],
            },
            body: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Statement"))
              ),
            },
          },
          aliases: ["Scopable", "BlockParent", "Block", "Statement"],
        }),
        (0, l.default)("BreakStatement", {
          visitor: ["label"],
          fields: {
            label: {
              validate: (0, u.assertNodeType)("Identifier"),
              optional: !0,
            },
          },
          aliases: ["Statement", "Terminatorless", "CompletionStatement"],
        }),
        (0, l.default)("CallExpression", {
          visitor: ["callee", "arguments"],
          fields: {
            callee: { validate: (0, u.assertNodeType)("Expression") },
            arguments: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)(
                  (0, u.assertNodeType)("Expression", "SpreadElement")
                )
              ),
            },
          },
          aliases: ["Expression"],
        }),
        (0, l.default)("CatchClause", {
          visitor: ["param", "body"],
          fields: {
            param: { validate: (0, u.assertNodeType)("Identifier") },
            body: { validate: (0, u.assertNodeType)("BlockStatement") },
          },
          aliases: ["Scopable"],
        }),
        (0, l.default)("ConditionalExpression", {
          visitor: ["test", "consequent", "alternate"],
          fields: {
            test: { validate: (0, u.assertNodeType)("Expression") },
            consequent: { validate: (0, u.assertNodeType)("Expression") },
            alternate: { validate: (0, u.assertNodeType)("Expression") },
          },
          aliases: ["Expression", "Conditional"],
        }),
        (0, l.default)("ContinueStatement", {
          visitor: ["label"],
          fields: {
            label: {
              validate: (0, u.assertNodeType)("Identifier"),
              optional: !0,
            },
          },
          aliases: ["Statement", "Terminatorless", "CompletionStatement"],
        }),
        (0, l.default)("DebuggerStatement", { aliases: ["Statement"] }),
        (0, l.default)("DoWhileStatement", {
          visitor: ["test", "body"],
          fields: {
            test: { validate: (0, u.assertNodeType)("Expression") },
            body: { validate: (0, u.assertNodeType)("Statement") },
          },
          aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
        }),
        (0, l.default)("EmptyStatement", { aliases: ["Statement"] }),
        (0, l.default)("ExpressionStatement", {
          visitor: ["expression"],
          fields: {
            expression: { validate: (0, u.assertNodeType)("Expression") },
          },
          aliases: ["Statement", "ExpressionWrapper"],
        }),
        (0, l.default)("File", {
          builder: ["program", "comments", "tokens"],
          visitor: ["program"],
          fields: { program: { validate: (0, u.assertNodeType)("Program") } },
        }),
        (0, l.default)("ForInStatement", {
          visitor: ["left", "right", "body"],
          aliases: [
            "Scopable",
            "Statement",
            "For",
            "BlockParent",
            "Loop",
            "ForXStatement",
          ],
          fields: {
            left: {
              validate: (0, u.assertNodeType)("VariableDeclaration", "LVal"),
            },
            right: { validate: (0, u.assertNodeType)("Expression") },
            body: { validate: (0, u.assertNodeType)("Statement") },
          },
        }),
        (0, l.default)("ForStatement", {
          visitor: ["init", "test", "update", "body"],
          aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
          fields: {
            init: {
              validate: (0, u.assertNodeType)(
                "VariableDeclaration",
                "Expression"
              ),
              optional: !0,
            },
            test: {
              validate: (0, u.assertNodeType)("Expression"),
              optional: !0,
            },
            update: {
              validate: (0, u.assertNodeType)("Expression"),
              optional: !0,
            },
            body: { validate: (0, u.assertNodeType)("Statement") },
          },
        }),
        (0, l.default)("FunctionDeclaration", {
          builder: ["id", "params", "body", "generator", "async"],
          visitor: ["id", "params", "body", "returnType", "typeParameters"],
          fields: {
            id: { validate: (0, u.assertNodeType)("Identifier") },
            params: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("LVal"))
              ),
            },
            body: { validate: (0, u.assertNodeType)("BlockStatement") },
            generator: {
              default: !1,
              validate: (0, u.assertValueType)("boolean"),
            },
            async: { default: !1, validate: (0, u.assertValueType)("boolean") },
          },
          aliases: [
            "Scopable",
            "Function",
            "BlockParent",
            "FunctionParent",
            "Statement",
            "Pureish",
            "Declaration",
          ],
        }),
        (0, l.default)("FunctionExpression", {
          inherits: "FunctionDeclaration",
          aliases: [
            "Scopable",
            "Function",
            "BlockParent",
            "FunctionParent",
            "Expression",
            "Pureish",
          ],
          fields: {
            id: { validate: (0, u.assertNodeType)("Identifier"), optional: !0 },
            params: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("LVal"))
              ),
            },
            body: { validate: (0, u.assertNodeType)("BlockStatement") },
            generator: {
              default: !1,
              validate: (0, u.assertValueType)("boolean"),
            },
            async: { default: !1, validate: (0, u.assertValueType)("boolean") },
          },
        }),
        (0, l.default)("Identifier", {
          builder: ["name"],
          visitor: ["typeAnnotation"],
          aliases: ["Expression", "LVal"],
          fields: {
            name: {
              validate: function (e, t, r) {
                !a.isValidIdentifier(r);
              },
            },
            decorators: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, l.default)("IfStatement", {
          visitor: ["test", "consequent", "alternate"],
          aliases: ["Statement", "Conditional"],
          fields: {
            test: { validate: (0, u.assertNodeType)("Expression") },
            consequent: { validate: (0, u.assertNodeType)("Statement") },
            alternate: {
              optional: !0,
              validate: (0, u.assertNodeType)("Statement"),
            },
          },
        }),
        (0, l.default)("LabeledStatement", {
          visitor: ["label", "body"],
          aliases: ["Statement"],
          fields: {
            label: { validate: (0, u.assertNodeType)("Identifier") },
            body: { validate: (0, u.assertNodeType)("Statement") },
          },
        }),
        (0, l.default)("StringLiteral", {
          builder: ["value"],
          fields: { value: { validate: (0, u.assertValueType)("string") } },
          aliases: ["Expression", "Pureish", "Literal", "Immutable"],
        }),
        (0, l.default)("NumericLiteral", {
          builder: ["value"],
          deprecatedAlias: "NumberLiteral",
          fields: { value: { validate: (0, u.assertValueType)("number") } },
          aliases: ["Expression", "Pureish", "Literal", "Immutable"],
        }),
        (0, l.default)("NullLiteral", {
          aliases: ["Expression", "Pureish", "Literal", "Immutable"],
        }),
        (0, l.default)("BooleanLiteral", {
          builder: ["value"],
          fields: { value: { validate: (0, u.assertValueType)("boolean") } },
          aliases: ["Expression", "Pureish", "Literal", "Immutable"],
        }),
        (0, l.default)("RegExpLiteral", {
          builder: ["pattern", "flags"],
          deprecatedAlias: "RegexLiteral",
          aliases: ["Expression", "Literal"],
          fields: {
            pattern: { validate: (0, u.assertValueType)("string") },
            flags: { validate: (0, u.assertValueType)("string"), default: "" },
          },
        }),
        (0, l.default)("LogicalExpression", {
          builder: ["operator", "left", "right"],
          visitor: ["left", "right"],
          aliases: ["Binary", "Expression"],
          fields: {
            operator: {
              validate: u.assertOneOf.apply(void 0, o.LOGICAL_OPERATORS),
            },
            left: { validate: (0, u.assertNodeType)("Expression") },
            right: { validate: (0, u.assertNodeType)("Expression") },
          },
        }),
        (0, l.default)("MemberExpression", {
          builder: ["object", "property", "computed"],
          visitor: ["object", "property"],
          aliases: ["Expression", "LVal"],
          fields: {
            object: { validate: (0, u.assertNodeType)("Expression") },
            property: {
              validate: function (e, t, r) {
                var n = e.computed ? "Expression" : "Identifier";
                (0, u.assertNodeType)(n)(e, t, r);
              },
            },
            computed: { default: !1 },
          },
        }),
        (0, l.default)("NewExpression", {
          visitor: ["callee", "arguments"],
          aliases: ["Expression"],
          fields: {
            callee: { validate: (0, u.assertNodeType)("Expression") },
            arguments: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)(
                  (0, u.assertNodeType)("Expression", "SpreadElement")
                )
              ),
            },
          },
        }),
        (0, l.default)("Program", {
          visitor: ["directives", "body"],
          builder: ["body", "directives"],
          fields: {
            directives: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Directive"))
              ),
              default: [],
            },
            body: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Statement"))
              ),
            },
          },
          aliases: ["Scopable", "BlockParent", "Block", "FunctionParent"],
        }),
        (0, l.default)("ObjectExpression", {
          visitor: ["properties"],
          aliases: ["Expression"],
          fields: {
            properties: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)(
                  (0, u.assertNodeType)(
                    "ObjectMethod",
                    "ObjectProperty",
                    "SpreadProperty"
                  )
                )
              ),
            },
          },
        }),
        (0, l.default)("ObjectMethod", {
          builder: ["kind", "key", "params", "body", "computed"],
          fields: {
            kind: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("string"),
                (0, u.assertOneOf)("method", "get", "set")
              ),
              default: "method",
            },
            computed: {
              validate: (0, u.assertValueType)("boolean"),
              default: !1,
            },
            key: {
              validate: function (e, t, r) {
                var n = e.computed
                  ? ["Expression"]
                  : ["Identifier", "StringLiteral", "NumericLiteral"];
                u.assertNodeType.apply(void 0, n)(e, t, r);
              },
            },
            decorators: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Decorator"))
              ),
            },
            body: { validate: (0, u.assertNodeType)("BlockStatement") },
            generator: {
              default: !1,
              validate: (0, u.assertValueType)("boolean"),
            },
            async: { default: !1, validate: (0, u.assertValueType)("boolean") },
          },
          visitor: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters",
          ],
          aliases: [
            "UserWhitespacable",
            "Function",
            "Scopable",
            "BlockParent",
            "FunctionParent",
            "Method",
            "ObjectMember",
          ],
        }),
        (0, l.default)("ObjectProperty", {
          builder: ["key", "value", "computed", "shorthand", "decorators"],
          fields: {
            computed: {
              validate: (0, u.assertValueType)("boolean"),
              default: !1,
            },
            key: {
              validate: function (e, t, r) {
                var n = e.computed
                  ? ["Expression"]
                  : ["Identifier", "StringLiteral", "NumericLiteral"];
                u.assertNodeType.apply(void 0, n)(e, t, r);
              },
            },
            value: { validate: (0, u.assertNodeType)("Expression") },
            shorthand: {
              validate: (0, u.assertValueType)("boolean"),
              default: !1,
            },
            decorators: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Decorator"))
              ),
              optional: !0,
            },
          },
          visitor: ["key", "value", "decorators"],
          aliases: ["UserWhitespacable", "Property", "ObjectMember"],
        }),
        (0, l.default)("RestElement", {
          visitor: ["argument", "typeAnnotation"],
          aliases: ["LVal"],
          fields: {
            argument: { validate: (0, u.assertNodeType)("LVal") },
            decorators: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, l.default)("ReturnStatement", {
          visitor: ["argument"],
          aliases: ["Statement", "Terminatorless", "CompletionStatement"],
          fields: {
            argument: {
              validate: (0, u.assertNodeType)("Expression"),
              optional: !0,
            },
          },
        }),
        (0, l.default)("SequenceExpression", {
          visitor: ["expressions"],
          fields: {
            expressions: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Expression"))
              ),
            },
          },
          aliases: ["Expression"],
        }),
        (0, l.default)("SwitchCase", {
          visitor: ["test", "consequent"],
          fields: {
            test: {
              validate: (0, u.assertNodeType)("Expression"),
              optional: !0,
            },
            consequent: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("Statement"))
              ),
            },
          },
        }),
        (0, l.default)("SwitchStatement", {
          visitor: ["discriminant", "cases"],
          aliases: ["Statement", "BlockParent", "Scopable"],
          fields: {
            discriminant: { validate: (0, u.assertNodeType)("Expression") },
            cases: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("SwitchCase"))
              ),
            },
          },
        }),
        (0, l.default)("ThisExpression", { aliases: ["Expression"] }),
        (0, l.default)("ThrowStatement", {
          visitor: ["argument"],
          aliases: ["Statement", "Terminatorless", "CompletionStatement"],
          fields: {
            argument: { validate: (0, u.assertNodeType)("Expression") },
          },
        }),
        (0, l.default)("TryStatement", {
          visitor: ["block", "handler", "finalizer"],
          aliases: ["Statement"],
          fields: {
            body: { validate: (0, u.assertNodeType)("BlockStatement") },
            handler: {
              optional: !0,
              handler: (0, u.assertNodeType)("BlockStatement"),
            },
            finalizer: {
              optional: !0,
              validate: (0, u.assertNodeType)("BlockStatement"),
            },
          },
        }),
        (0, l.default)("UnaryExpression", {
          builder: ["operator", "argument", "prefix"],
          fields: {
            prefix: { default: !0 },
            argument: { validate: (0, u.assertNodeType)("Expression") },
            operator: {
              validate: u.assertOneOf.apply(void 0, o.UNARY_OPERATORS),
            },
          },
          visitor: ["argument"],
          aliases: ["UnaryLike", "Expression"],
        }),
        (0, l.default)("UpdateExpression", {
          builder: ["operator", "argument", "prefix"],
          fields: {
            prefix: { default: !1 },
            argument: { validate: (0, u.assertNodeType)("Expression") },
            operator: {
              validate: u.assertOneOf.apply(void 0, o.UPDATE_OPERATORS),
            },
          },
          visitor: ["argument"],
          aliases: ["Expression"],
        }),
        (0, l.default)("VariableDeclaration", {
          builder: ["kind", "declarations"],
          visitor: ["declarations"],
          aliases: ["Statement", "Declaration"],
          fields: {
            kind: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("string"),
                (0, u.assertOneOf)("var", "let", "const")
              ),
            },
            declarations: {
              validate: (0, u.chain)(
                (0, u.assertValueType)("array"),
                (0, u.assertEach)((0, u.assertNodeType)("VariableDeclarator"))
              ),
            },
          },
        }),
        (0, l.default)("VariableDeclarator", {
          visitor: ["id", "init"],
          fields: {
            id: { validate: (0, u.assertNodeType)("LVal") },
            init: {
              optional: !0,
              validate: (0, u.assertNodeType)("Expression"),
            },
          },
        }),
        (0, l.default)("WhileStatement", {
          visitor: ["test", "body"],
          aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
          fields: {
            test: { validate: (0, u.assertNodeType)("Expression") },
            body: {
              validate: (0, u.assertNodeType)("BlockStatement", "Statement"),
            },
          },
        }),
        (0, l.default)("WithStatement", {
          visitor: ["object", "body"],
          aliases: ["Statement"],
          fields: {
            object: { object: (0, u.assertNodeType)("Expression") },
            body: {
              validate: (0, u.assertNodeType)("BlockStatement", "Statement"),
            },
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i = r(26),
        s = n(i);
      (0, s.default)("AssignmentPattern", {
        visitor: ["left", "right"],
        aliases: ["Pattern", "LVal"],
        fields: {
          left: { validate: (0, i.assertNodeType)("Identifier") },
          right: { validate: (0, i.assertNodeType)("Expression") },
          decorators: {
            validate: (0, i.chain)(
              (0, i.assertValueType)("array"),
              (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
            ),
          },
        },
      }),
        (0, s.default)("ArrayPattern", {
          visitor: ["elements", "typeAnnotation"],
          aliases: ["Pattern", "LVal"],
          fields: {
            elements: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Expression"))
              ),
            },
            decorators: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, s.default)("ArrowFunctionExpression", {
          builder: ["params", "body", "async"],
          visitor: ["params", "body", "returnType", "typeParameters"],
          aliases: [
            "Scopable",
            "Function",
            "BlockParent",
            "FunctionParent",
            "Expression",
            "Pureish",
          ],
          fields: {
            params: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("LVal"))
              ),
            },
            body: {
              validate: (0, i.assertNodeType)("BlockStatement", "Expression"),
            },
            async: { validate: (0, i.assertValueType)("boolean"), default: !1 },
          },
        }),
        (0, s.default)("ClassBody", {
          visitor: ["body"],
          fields: {
            body: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)(
                  (0, i.assertNodeType)("ClassMethod", "ClassProperty")
                )
              ),
            },
          },
        }),
        (0, s.default)("ClassDeclaration", {
          builder: ["id", "superClass", "body", "decorators"],
          visitor: [
            "id",
            "body",
            "superClass",
            "mixins",
            "typeParameters",
            "superTypeParameters",
            "implements",
            "decorators",
          ],
          aliases: ["Scopable", "Class", "Statement", "Declaration", "Pureish"],
          fields: {
            id: { validate: (0, i.assertNodeType)("Identifier") },
            body: { validate: (0, i.assertNodeType)("ClassBody") },
            superClass: {
              optional: !0,
              validate: (0, i.assertNodeType)("Expression"),
            },
            decorators: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, s.default)("ClassExpression", {
          inherits: "ClassDeclaration",
          aliases: ["Scopable", "Class", "Expression", "Pureish"],
          fields: {
            id: { optional: !0, validate: (0, i.assertNodeType)("Identifier") },
            body: { validate: (0, i.assertNodeType)("ClassBody") },
            superClass: {
              optional: !0,
              validate: (0, i.assertNodeType)("Expression"),
            },
            decorators: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, s.default)("ExportAllDeclaration", {
          visitor: ["source"],
          aliases: [
            "Statement",
            "Declaration",
            "ModuleDeclaration",
            "ExportDeclaration",
          ],
          fields: {
            source: { validate: (0, i.assertNodeType)("StringLiteral") },
          },
        }),
        (0, s.default)("ExportDefaultDeclaration", {
          visitor: ["declaration"],
          aliases: [
            "Statement",
            "Declaration",
            "ModuleDeclaration",
            "ExportDeclaration",
          ],
          fields: {
            declaration: {
              validate: (0, i.assertNodeType)(
                "FunctionDeclaration",
                "ClassDeclaration",
                "Expression"
              ),
            },
          },
        }),
        (0, s.default)("ExportNamedDeclaration", {
          visitor: ["declaration", "specifiers", "source"],
          aliases: [
            "Statement",
            "Declaration",
            "ModuleDeclaration",
            "ExportDeclaration",
          ],
          fields: {
            declaration: {
              validate: (0, i.assertNodeType)("Declaration"),
              optional: !0,
            },
            specifiers: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("ExportSpecifier"))
              ),
            },
            source: {
              validate: (0, i.assertNodeType)("StringLiteral"),
              optional: !0,
            },
          },
        }),
        (0, s.default)("ExportSpecifier", {
          visitor: ["local", "exported"],
          aliases: ["ModuleSpecifier"],
          fields: {
            local: { validate: (0, i.assertNodeType)("Identifier") },
            exported: { validate: (0, i.assertNodeType)("Identifier") },
          },
        }),
        (0, s.default)("ForOfStatement", {
          visitor: ["left", "right", "body"],
          aliases: [
            "Scopable",
            "Statement",
            "For",
            "BlockParent",
            "Loop",
            "ForXStatement",
          ],
          fields: {
            left: {
              validate: (0, i.assertNodeType)("VariableDeclaration", "LVal"),
            },
            right: { validate: (0, i.assertNodeType)("Expression") },
            body: { validate: (0, i.assertNodeType)("Statement") },
          },
        }),
        (0, s.default)("ImportDeclaration", {
          visitor: ["specifiers", "source"],
          aliases: ["Statement", "Declaration", "ModuleDeclaration"],
          fields: {
            specifiers: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)(
                  (0, i.assertNodeType)(
                    "ImportSpecifier",
                    "ImportDefaultSpecifier",
                    "ImportNamespaceSpecifier"
                  )
                )
              ),
            },
            source: { validate: (0, i.assertNodeType)("StringLiteral") },
          },
        }),
        (0, s.default)("ImportDefaultSpecifier", {
          visitor: ["local"],
          aliases: ["ModuleSpecifier"],
          fields: { local: { validate: (0, i.assertNodeType)("Identifier") } },
        }),
        (0, s.default)("ImportNamespaceSpecifier", {
          visitor: ["local"],
          aliases: ["ModuleSpecifier"],
          fields: { local: { validate: (0, i.assertNodeType)("Identifier") } },
        }),
        (0, s.default)("ImportSpecifier", {
          visitor: ["local", "imported"],
          aliases: ["ModuleSpecifier"],
          fields: {
            local: { validate: (0, i.assertNodeType)("Identifier") },
            imported: { validate: (0, i.assertNodeType)("Identifier") },
          },
        }),
        (0, s.default)("MetaProperty", {
          visitor: ["meta", "property"],
          aliases: ["Expression"],
          fields: {
            meta: { validate: (0, i.assertValueType)("string") },
            property: { validate: (0, i.assertValueType)("string") },
          },
        }),
        (0, s.default)("ClassMethod", {
          aliases: [
            "Function",
            "Scopable",
            "BlockParent",
            "FunctionParent",
            "Method",
          ],
          builder: ["kind", "key", "params", "body", "computed", "static"],
          visitor: [
            "key",
            "params",
            "body",
            "decorators",
            "returnType",
            "typeParameters",
          ],
          fields: {
            kind: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("string"),
                (0, i.assertOneOf)("get", "set", "method", "constructor")
              ),
              default: "method",
            },
            computed: {
              default: !1,
              validate: (0, i.assertValueType)("boolean"),
            },
            static: {
              default: !1,
              validate: (0, i.assertValueType)("boolean"),
            },
            key: {
              validate: function (e, t, r) {
                var n = e.computed
                  ? ["Expression"]
                  : ["Identifier", "StringLiteral", "NumericLiteral"];
                i.assertNodeType.apply(void 0, n)(e, t, r);
              },
            },
            params: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("LVal"))
              ),
            },
            body: { validate: (0, i.assertNodeType)("BlockStatement") },
            generator: {
              default: !1,
              validate: (0, i.assertValueType)("boolean"),
            },
            async: { default: !1, validate: (0, i.assertValueType)("boolean") },
          },
        }),
        (0, s.default)("ObjectPattern", {
          visitor: ["properties", "typeAnnotation"],
          aliases: ["Pattern", "LVal"],
          fields: {
            properties: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)(
                  (0, i.assertNodeType)("RestProperty", "Property")
                )
              ),
            },
            decorators: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Decorator"))
              ),
            },
          },
        }),
        (0, s.default)("SpreadElement", {
          visitor: ["argument"],
          aliases: ["UnaryLike"],
          fields: {
            argument: { validate: (0, i.assertNodeType)("Expression") },
          },
        }),
        (0, s.default)("Super", { aliases: ["Expression"] }),
        (0, s.default)("TaggedTemplateExpression", {
          visitor: ["tag", "quasi"],
          aliases: ["Expression"],
          fields: {
            tag: { validate: (0, i.assertNodeType)("Expression") },
            quasi: { validate: (0, i.assertNodeType)("TemplateLiteral") },
          },
        }),
        (0, s.default)("TemplateElement", {
          builder: ["value", "tail"],
          fields: {
            value: {},
            tail: { validate: (0, i.assertValueType)("boolean"), default: !1 },
          },
        }),
        (0, s.default)("TemplateLiteral", {
          visitor: ["quasis", "expressions"],
          aliases: ["Expression", "Literal"],
          fields: {
            quasis: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("TemplateElement"))
              ),
            },
            expressions: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)((0, i.assertNodeType)("Expression"))
              ),
            },
          },
        }),
        (0, s.default)("YieldExpression", {
          builder: ["argument", "delegate"],
          visitor: ["argument"],
          aliases: ["Expression", "Terminatorless"],
          fields: {
            delegate: {
              validate: (0, i.assertValueType)("boolean"),
              default: !1,
            },
            argument: {
              optional: !0,
              validate: (0, i.assertNodeType)("Expression"),
            },
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i = r(26),
        s = n(i);
      (0, s.default)("AwaitExpression", {
        builder: ["argument"],
        visitor: ["argument"],
        aliases: ["Expression", "Terminatorless"],
        fields: { argument: { validate: (0, i.assertNodeType)("Expression") } },
      }),
        (0, s.default)("ForAwaitStatement", {
          visitor: ["left", "right", "body"],
          aliases: [
            "Scopable",
            "Statement",
            "For",
            "BlockParent",
            "Loop",
            "ForXStatement",
          ],
          fields: {
            left: {
              validate: (0, i.assertNodeType)("VariableDeclaration", "LVal"),
            },
            right: { validate: (0, i.assertNodeType)("Expression") },
            body: { validate: (0, i.assertNodeType)("Statement") },
          },
        }),
        (0, s.default)("BindExpression", {
          visitor: ["object", "callee"],
          aliases: ["Expression"],
          fields: {},
        }),
        (0, s.default)("Import", { aliases: ["Expression"] }),
        (0, s.default)("Decorator", {
          visitor: ["expression"],
          fields: {
            expression: { validate: (0, i.assertNodeType)("Expression") },
          },
        }),
        (0, s.default)("DoExpression", {
          visitor: ["body"],
          aliases: ["Expression"],
          fields: {
            body: { validate: (0, i.assertNodeType)("BlockStatement") },
          },
        }),
        (0, s.default)("ExportDefaultSpecifier", {
          visitor: ["exported"],
          aliases: ["ModuleSpecifier"],
          fields: {
            exported: { validate: (0, i.assertNodeType)("Identifier") },
          },
        }),
        (0, s.default)("ExportNamespaceSpecifier", {
          visitor: ["exported"],
          aliases: ["ModuleSpecifier"],
          fields: {
            exported: { validate: (0, i.assertNodeType)("Identifier") },
          },
        }),
        (0, s.default)("RestProperty", {
          visitor: ["argument"],
          aliases: ["UnaryLike"],
          fields: { argument: { validate: (0, i.assertNodeType)("LVal") } },
        }),
        (0, s.default)("SpreadProperty", {
          visitor: ["argument"],
          aliases: ["UnaryLike"],
          fields: {
            argument: { validate: (0, i.assertNodeType)("Expression") },
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i = r(26),
        s = n(i);
      (0, s.default)("AnyTypeAnnotation", {
        aliases: ["Flow", "FlowBaseAnnotation"],
        fields: {},
      }),
        (0, s.default)("ArrayTypeAnnotation", {
          visitor: ["elementType"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("BooleanTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        }),
        (0, s.default)("BooleanLiteralTypeAnnotation", {
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("NullLiteralTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        }),
        (0, s.default)("ClassImplements", {
          visitor: ["id", "typeParameters"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("ClassProperty", {
          visitor: ["key", "value", "typeAnnotation", "decorators"],
          builder: ["key", "value", "typeAnnotation", "decorators", "computed"],
          aliases: ["Property"],
          fields: {
            computed: {
              validate: (0, i.assertValueType)("boolean"),
              default: !1,
            },
          },
        }),
        (0, s.default)("DeclareClass", {
          visitor: ["id", "typeParameters", "extends", "body"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareFunction", {
          visitor: ["id"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareInterface", {
          visitor: ["id", "typeParameters", "extends", "body"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareModule", {
          visitor: ["id", "body"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareModuleExports", {
          visitor: ["typeAnnotation"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareTypeAlias", {
          visitor: ["id", "typeParameters", "right"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("DeclareVariable", {
          visitor: ["id"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("ExistentialTypeParam", { aliases: ["Flow"] }),
        (0, s.default)("FunctionTypeAnnotation", {
          visitor: ["typeParameters", "params", "rest", "returnType"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("FunctionTypeParam", {
          visitor: ["name", "typeAnnotation"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("GenericTypeAnnotation", {
          visitor: ["id", "typeParameters"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("InterfaceExtends", {
          visitor: ["id", "typeParameters"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("InterfaceDeclaration", {
          visitor: ["id", "typeParameters", "extends", "body"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("IntersectionTypeAnnotation", {
          visitor: ["types"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("MixedTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
        }),
        (0, s.default)("EmptyTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
        }),
        (0, s.default)("NullableTypeAnnotation", {
          visitor: ["typeAnnotation"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("NumericLiteralTypeAnnotation", {
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("NumberTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        }),
        (0, s.default)("StringLiteralTypeAnnotation", {
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("StringTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        }),
        (0, s.default)("ThisTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        }),
        (0, s.default)("TupleTypeAnnotation", {
          visitor: ["types"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("TypeofTypeAnnotation", {
          visitor: ["argument"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("TypeAlias", {
          visitor: ["id", "typeParameters", "right"],
          aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
          fields: {},
        }),
        (0, s.default)("TypeAnnotation", {
          visitor: ["typeAnnotation"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("TypeCastExpression", {
          visitor: ["expression", "typeAnnotation"],
          aliases: ["Flow", "ExpressionWrapper", "Expression"],
          fields: {},
        }),
        (0, s.default)("TypeParameter", {
          visitor: ["bound"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("TypeParameterDeclaration", {
          visitor: ["params"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("TypeParameterInstantiation", {
          visitor: ["params"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("ObjectTypeAnnotation", {
          visitor: ["properties", "indexers", "callProperties"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("ObjectTypeCallProperty", {
          visitor: ["value"],
          aliases: ["Flow", "UserWhitespacable"],
          fields: {},
        }),
        (0, s.default)("ObjectTypeIndexer", {
          visitor: ["id", "key", "value"],
          aliases: ["Flow", "UserWhitespacable"],
          fields: {},
        }),
        (0, s.default)("ObjectTypeProperty", {
          visitor: ["key", "value"],
          aliases: ["Flow", "UserWhitespacable"],
          fields: {},
        }),
        (0, s.default)("QualifiedTypeIdentifier", {
          visitor: ["id", "qualification"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("UnionTypeAnnotation", {
          visitor: ["types"],
          aliases: ["Flow"],
          fields: {},
        }),
        (0, s.default)("VoidTypeAnnotation", {
          aliases: ["Flow", "FlowBaseAnnotation"],
          fields: {},
        });
    },
    function (e, t, r) {
      "use strict";
      r(26), r(322), r(323), r(325), r(327), r(328), r(324);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i = r(26),
        s = n(i);
      (0, s.default)("JSXAttribute", {
        visitor: ["name", "value"],
        aliases: ["JSX", "Immutable"],
        fields: {
          name: {
            validate: (0, i.assertNodeType)(
              "JSXIdentifier",
              "JSXNamespacedName"
            ),
          },
          value: {
            optional: !0,
            validate: (0, i.assertNodeType)(
              "JSXElement",
              "StringLiteral",
              "JSXExpressionContainer"
            ),
          },
        },
      }),
        (0, s.default)("JSXClosingElement", {
          visitor: ["name"],
          aliases: ["JSX", "Immutable"],
          fields: {
            name: {
              validate: (0, i.assertNodeType)(
                "JSXIdentifier",
                "JSXMemberExpression"
              ),
            },
          },
        }),
        (0, s.default)("JSXElement", {
          builder: [
            "openingElement",
            "closingElement",
            "children",
            "selfClosing",
          ],
          visitor: ["openingElement", "children", "closingElement"],
          aliases: ["JSX", "Immutable", "Expression"],
          fields: {
            openingElement: {
              validate: (0, i.assertNodeType)("JSXOpeningElement"),
            },
            closingElement: {
              optional: !0,
              validate: (0, i.assertNodeType)("JSXClosingElement"),
            },
            children: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)(
                  (0, i.assertNodeType)(
                    "JSXText",
                    "JSXExpressionContainer",
                    "JSXElement"
                  )
                )
              ),
            },
          },
        }),
        (0, s.default)("JSXEmptyExpression", {
          aliases: ["JSX", "Expression"],
        }),
        (0, s.default)("JSXExpressionContainer", {
          visitor: ["expression"],
          aliases: ["JSX", "Immutable"],
          fields: {
            expression: { validate: (0, i.assertNodeType)("Expression") },
          },
        }),
        (0, s.default)("JSXIdentifier", {
          builder: ["name"],
          aliases: ["JSX", "Expression"],
          fields: { name: { validate: (0, i.assertValueType)("string") } },
        }),
        (0, s.default)("JSXMemberExpression", {
          visitor: ["object", "property"],
          aliases: ["JSX", "Expression"],
          fields: {
            object: {
              validate: (0, i.assertNodeType)(
                "JSXMemberExpression",
                "JSXIdentifier"
              ),
            },
            property: { validate: (0, i.assertNodeType)("JSXIdentifier") },
          },
        }),
        (0, s.default)("JSXNamespacedName", {
          visitor: ["namespace", "name"],
          aliases: ["JSX"],
          fields: {
            namespace: { validate: (0, i.assertNodeType)("JSXIdentifier") },
            name: { validate: (0, i.assertNodeType)("JSXIdentifier") },
          },
        }),
        (0, s.default)("JSXOpeningElement", {
          builder: ["name", "attributes", "selfClosing"],
          visitor: ["name", "attributes"],
          aliases: ["JSX", "Immutable"],
          fields: {
            name: {
              validate: (0, i.assertNodeType)(
                "JSXIdentifier",
                "JSXMemberExpression"
              ),
            },
            selfClosing: {
              default: !1,
              validate: (0, i.assertValueType)("boolean"),
            },
            attributes: {
              validate: (0, i.chain)(
                (0, i.assertValueType)("array"),
                (0, i.assertEach)(
                  (0, i.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")
                )
              ),
            },
          },
        }),
        (0, s.default)("JSXSpreadAttribute", {
          visitor: ["argument"],
          aliases: ["JSX"],
          fields: {
            argument: { validate: (0, i.assertNodeType)("Expression") },
          },
        }),
        (0, s.default)("JSXText", {
          aliases: ["JSX", "Immutable"],
          builder: ["value"],
          fields: { value: { validate: (0, i.assertValueType)("string") } },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var i = r(26),
        s = n(i);
      (0, s.default)("Noop", { visitor: [] }),
        (0, s.default)("ParenthesizedExpression", {
          visitor: ["expression"],
          aliases: ["Expression", "ExpressionWrapper"],
          fields: {
            expression: { validate: (0, i.assertNodeType)("Expression") },
          },
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        var t = s(e);
        return 1 === t.length ? t[0] : u.unionTypeAnnotation(t);
      }
      function s(e) {
        for (var t = {}, r = {}, n = [], i = [], a = 0; a < e.length; a++) {
          var o = e[a];
          if (o && !(i.indexOf(o) >= 0)) {
            if (u.isAnyTypeAnnotation(o)) return [o];
            if (u.isFlowBaseAnnotation(o)) r[o.type] = o;
            else if (u.isUnionTypeAnnotation(o))
              n.indexOf(o.types) < 0 &&
                ((e = e.concat(o.types)), n.push(o.types));
            else if (u.isGenericTypeAnnotation(o)) {
              var l = o.id.name;
              if (t[l]) {
                var c = t[l];
                c.typeParameters
                  ? o.typeParameters &&
                    (c.typeParameters.params = s(
                      c.typeParameters.params.concat(o.typeParameters.params)
                    ))
                  : (c = o.typeParameters);
              } else t[l] = o;
            } else i.push(o);
          }
        }
        for (var f in r) i.push(r[f]);
        for (var p in t) i.push(t[p]);
        return i;
      }
      function a(e) {
        if ("string" === e) return u.stringTypeAnnotation();
        if ("number" === e) return u.numberTypeAnnotation();
        if ("undefined" === e) return u.voidTypeAnnotation();
        if ("boolean" === e) return u.booleanTypeAnnotation();
        if ("function" === e)
          return u.genericTypeAnnotation(u.identifier("Function"));
        if ("object" === e)
          return u.genericTypeAnnotation(u.identifier("Object"));
        if ("symbol" === e)
          return u.genericTypeAnnotation(u.identifier("Symbol"));
        throw new Error("Invalid typeof value");
      }
      (t.__esModule = !0),
        (t.createUnionTypeAnnotation = i),
        (t.removeTypeDuplicates = s),
        (t.createTypeAnnotationBasedOnTypeof = a);
      var o = r(1),
        u = n(o);
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return !!e && /^[a-z]|\-/.test(e);
      }
      function s(e, t) {
        for (
          var r = e.value.split(/\r\n|\n|\r/), n = 0, i = 0;
          i < r.length;
          i++
        )
          r[i].match(/[^ \t]/) && (n = i);
        for (var s = "", a = 0; a < r.length; a++) {
          var o = r[a],
            l = 0 === a,
            c = a === r.length - 1,
            f = a === n,
            p = o.replace(/\t/g, " ");
          l || (p = p.replace(/^[ ]+/, "")),
            c || (p = p.replace(/[ ]+$/, "")),
            p && (f || (p += " "), (s += p));
        }
        s && t.push(u.stringLiteral(s));
      }
      function a(e) {
        for (var t = [], r = 0; r < e.children.length; r++) {
          var n = e.children[r];
          u.isJSXText(n)
            ? s(n, t)
            : (u.isJSXExpressionContainer(n) && (n = n.expression),
              u.isJSXEmptyExpression(n) || t.push(n));
        }
        return t;
      }
      (t.__esModule = !0),
        (t.isReactComponent = void 0),
        (t.isCompatTag = i),
        (t.buildChildren = a);
      var o = r(1),
        u = n(o);
      t.isReactComponent = u.buildMatchMemberExpression("React.Component");
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        var r = x.getBindingIdentifiers.keys[t.type];
        if (r)
          for (var n = 0; n < r.length; n++) {
            var i = r[n],
              s = t[i];
            if (Array.isArray(s)) {
              if (s.indexOf(e) >= 0) return !0;
            } else if (s === e) return !0;
          }
        return !1;
      }
      function a(e, t) {
        switch (t.type) {
          case "BindExpression":
            return t.object === e || t.callee === e;
          case "MemberExpression":
          case "JSXMemberExpression":
            return !(t.property !== e || !t.computed) || t.object === e;
          case "MetaProperty":
            return !1;
          case "ObjectProperty":
            if (t.key === e) return t.computed;
          case "VariableDeclarator":
            return t.id !== e;
          case "ArrowFunctionExpression":
          case "FunctionDeclaration":
          case "FunctionExpression":
            for (
              var r = t.params,
                n = Array.isArray(r),
                i = 0,
                r = n ? r : (0, E.default)(r);
              ;

            ) {
              var s;
              if (n) {
                if (i >= r.length) break;
                s = r[i++];
              } else {
                if (((i = r.next()), i.done)) break;
                s = i.value;
              }
              var a = s;
              if (a === e) return !1;
            }
            return t.id !== e;
          case "ExportSpecifier":
            return !t.source && t.local === e;
          case "ExportNamespaceSpecifier":
          case "ExportDefaultSpecifier":
            return !1;
          case "JSXAttribute":
            return t.name !== e;
          case "ClassProperty":
            return t.key === e ? t.computed : t.value === e;
          case "ImportDefaultSpecifier":
          case "ImportNamespaceSpecifier":
          case "ImportSpecifier":
            return !1;
          case "ClassDeclaration":
          case "ClassExpression":
            return t.id !== e;
          case "ClassMethod":
          case "ObjectMethod":
            return t.key === e && t.computed;
          case "LabeledStatement":
            return !1;
          case "CatchClause":
            return t.param !== e;
          case "RestElement":
            return !1;
          case "AssignmentExpression":
            return t.right === e;
          case "AssignmentPattern":
            return t.right === e;
          case "ObjectPattern":
          case "ArrayPattern":
            return !1;
        }
        return !0;
      }
      function o(e) {
        return (
          "string" == typeof e &&
          !D.default.keyword.isReservedWordES6(e, !0) &&
          D.default.keyword.isIdentifierNameES6(e)
        );
      }
      function u(e) {
        return (
          S.isVariableDeclaration(e) &&
          ("var" !== e.kind || e[_.BLOCK_SCOPED_SYMBOL])
        );
      }
      function l(e) {
        return (
          S.isFunctionDeclaration(e) || S.isClassDeclaration(e) || S.isLet(e)
        );
      }
      function c(e) {
        return (
          S.isVariableDeclaration(e, { kind: "var" }) &&
          !e[_.BLOCK_SCOPED_SYMBOL]
        );
      }
      function f(e) {
        return (
          S.isImportDefaultSpecifier(e) ||
          S.isIdentifier(e.imported || e.exported, { name: "default" })
        );
      }
      function p(e, t) {
        return (
          (!S.isBlockStatement(e) || !S.isFunction(t, { body: e })) &&
          S.isScopable(e)
        );
      }
      function h(e) {
        return (
          !!S.isType(e.type, "Immutable") ||
          (!!S.isIdentifier(e) && "undefined" === e.name)
        );
      }
      function d(e, t) {
        if (
          "object" !==
            ("undefined" == typeof e ? "undefined" : (0, g.default)(e)) ||
          "object" !==
            ("undefined" == typeof e ? "undefined" : (0, g.default)(e)) ||
          null == e ||
          null == t
        )
          return e === t;
        if (e.type !== t.type) return !1;
        for (
          var r = (0, v.default)(S.NODE_FIELDS[e.type] || e.type),
            n = r,
            i = Array.isArray(n),
            s = 0,
            n = i ? n : (0, E.default)(n);
          ;

        ) {
          var a;
          if (i) {
            if (s >= n.length) break;
            a = n[s++];
          } else {
            if (((s = n.next()), s.done)) break;
            a = s.value;
          }
          var o = a;
          if ((0, g.default)(e[o]) !== (0, g.default)(t[o])) return !1;
          if (Array.isArray(e[o])) {
            if (!Array.isArray(t[o])) return !1;
            if (e[o].length !== t[o].length) return !1;
            for (var u = 0; u < e[o].length; u++)
              if (!d(e[o][u], t[o][u])) return !1;
          } else if (!d(e[o], t[o])) return !1;
        }
        return !0;
      }
      t.__esModule = !0;
      var m = r(17),
        v = i(m),
        y = r(6),
        g = i(y),
        b = r(2),
        E = i(b);
      (t.isBinding = s),
        (t.isReferenced = a),
        (t.isValidIdentifier = o),
        (t.isLet = u),
        (t.isBlockScoped = l),
        (t.isVar = c),
        (t.isSpecifierDefault = f),
        (t.isScope = p),
        (t.isImmutable = h),
        (t.isNodesEquivalent = d);
      var x = r(161),
        A = r(123),
        D = i(A),
        C = r(1),
        S = n(C),
        _ = r(101);
    },
    function (e, t) {
      function r(e, t, r) {
        e instanceof RegExp && (e = n(e, r)),
          t instanceof RegExp && (t = n(t, r));
        var s = i(e, t, r);
        return (
          s && {
            start: s[0],
            end: s[1],
            pre: r.slice(0, s[0]),
            body: r.slice(s[0] + e.length, s[1]),
            post: r.slice(s[1] + t.length),
          }
        );
      }
      function n(e, t) {
        var r = t.match(e);
        return r ? r[0] : null;
      }
      function i(e, t, r) {
        var n,
          i,
          s,
          a,
          o,
          u = r.indexOf(e),
          l = r.indexOf(t, u + 1),
          c = u;
        if (u >= 0 && l > 0) {
          for (n = [], s = r.length; c >= 0 && !o; )
            c == u
              ? (n.push(c), (u = r.indexOf(e, c + 1)))
              : 1 == n.length
              ? (o = [n.pop(), l])
              : ((i = n.pop()),
                i < s && ((s = i), (a = l)),
                (l = r.indexOf(t, c + 1))),
              (c = u < l && u >= 0 ? u : l);
          n.length && (o = [s, a]);
        }
        return o;
      }
      (e.exports = r), (r.range = i);
    },
    function (e, t) {
      "use strict";
      function r(e) {
        var t = e.length;
        if (t % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        return "=" === e[t - 2] ? 2 : "=" === e[t - 1] ? 1 : 0;
      }
      function n(e) {
        return (3 * e.length) / 4 - r(e);
      }
      function i(e) {
        var t,
          n,
          i,
          s,
          a,
          o,
          u = e.length;
        (a = r(e)), (o = new c((3 * u) / 4 - a)), (i = a > 0 ? u - 4 : u);
        var f = 0;
        for (t = 0, n = 0; t < i; t += 4, n += 3)
          (s =
            (l[e.charCodeAt(t)] << 18) |
            (l[e.charCodeAt(t + 1)] << 12) |
            (l[e.charCodeAt(t + 2)] << 6) |
            l[e.charCodeAt(t + 3)]),
            (o[f++] = (s >> 16) & 255),
            (o[f++] = (s >> 8) & 255),
            (o[f++] = 255 & s);
        return (
          2 === a
            ? ((s = (l[e.charCodeAt(t)] << 2) | (l[e.charCodeAt(t + 1)] >> 4)),
              (o[f++] = 255 & s))
            : 1 === a &&
              ((s =
                (l[e.charCodeAt(t)] << 10) |
                (l[e.charCodeAt(t + 1)] << 4) |
                (l[e.charCodeAt(t + 2)] >> 2)),
              (o[f++] = (s >> 8) & 255),
              (o[f++] = 255 & s)),
          o
        );
      }
      function s(e) {
        return (
          u[(e >> 18) & 63] + u[(e >> 12) & 63] + u[(e >> 6) & 63] + u[63 & e]
        );
      }
      function a(e, t, r) {
        for (var n, i = [], a = t; a < r; a += 3)
          (n = (e[a] << 16) + (e[a + 1] << 8) + e[a + 2]), i.push(s(n));
        return i.join("");
      }
      function o(e) {
        for (
          var t,
            r = e.length,
            n = r % 3,
            i = "",
            s = [],
            o = 16383,
            l = 0,
            c = r - n;
          l < c;
          l += o
        )
          s.push(a(e, l, l + o > c ? c : l + o));
        return (
          1 === n
            ? ((t = e[r - 1]),
              (i += u[t >> 2]),
              (i += u[(t << 4) & 63]),
              (i += "=="))
            : 2 === n &&
              ((t = (e[r - 2] << 8) + e[r - 1]),
              (i += u[t >> 10]),
              (i += u[(t >> 4) & 63]),
              (i += u[(t << 2) & 63]),
              (i += "=")),
          s.push(i),
          s.join("")
        );
      }
      (t.byteLength = n), (t.toByteArray = i), (t.fromByteArray = o);
      for (
        var u = [],
          l = [],
          c = "undefined" != typeof Uint8Array ? Uint8Array : Array,
          f =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          p = 0,
          h = f.length;
        p < h;
        ++p
      )
        (u[p] = f[p]), (l[f.charCodeAt(p)] = p);
      (l["-".charCodeAt(0)] = 62), (l["_".charCodeAt(0)] = 63);
    },
    function (e, t, r) {
      function n(e) {
        return parseInt(e, 10) == e ? parseInt(e, 10) : e.charCodeAt(0);
      }
      function i(e) {
        return e
          .split("\\\\")
          .join(m)
          .split("\\{")
          .join(v)
          .split("\\}")
          .join(y)
          .split("\\,")
          .join(g)
          .split("\\.")
          .join(b);
      }
      function s(e) {
        return e
          .split(m)
          .join("\\")
          .split(v)
          .join("{")
          .split(y)
          .join("}")
          .split(g)
          .join(",")
          .split(b)
          .join(".");
      }
      function a(e) {
        if (!e) return [""];
        var t = [],
          r = d("{", "}", e);
        if (!r) return e.split(",");
        var n = r.pre,
          i = r.body,
          s = r.post,
          o = n.split(",");
        o[o.length - 1] += "{" + i + "}";
        var u = a(s);
        return (
          s.length && ((o[o.length - 1] += u.shift()), o.push.apply(o, u)),
          t.push.apply(t, o),
          t
        );
      }
      function o(e) {
        return e
          ? ("{}" === e.substr(0, 2) && (e = "\\{\\}" + e.substr(2)),
            p(i(e), !0).map(s))
          : [];
      }
      function u(e) {
        return "{" + e + "}";
      }
      function l(e) {
        return /^-?0\d/.test(e);
      }
      function c(e, t) {
        return e <= t;
      }
      function f(e, t) {
        return e >= t;
      }
      function p(e, t) {
        var r = [],
          i = d("{", "}", e);
        if (!i || /\$$/.test(i.pre)) return [e];
        var s = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(i.body),
          o = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(i.body),
          m = s || o,
          v = /^(.*,)+(.+)?$/.test(i.body);
        if (!m && !v)
          return i.post.match(/,.*\}/)
            ? ((e = i.pre + "{" + i.body + y + i.post), p(e))
            : [e];
        var g;
        if (m) g = i.body.split(/\.\./);
        else if (
          ((g = a(i.body)),
          1 === g.length && ((g = p(g[0], !1).map(u)), 1 === g.length))
        ) {
          var b = i.post.length ? p(i.post, !1) : [""];
          return b.map(function (e) {
            return i.pre + g[0] + e;
          });
        }
        var E,
          x = i.pre,
          b = i.post.length ? p(i.post, !1) : [""];
        if (m) {
          var A = n(g[0]),
            D = n(g[1]),
            C = Math.max(g[0].length, g[1].length),
            S = 3 == g.length ? Math.abs(n(g[2])) : 1,
            _ = c,
            w = D < A;
          w && ((S *= -1), (_ = f));
          var F = g.some(l);
          E = [];
          for (var k = A; _(k, D); k += S) {
            var P;
            if (o) (P = String.fromCharCode(k)), "\\" === P && (P = "");
            else if (((P = String(k)), F)) {
              var T = C - P.length;
              if (T > 0) {
                var O = new Array(T + 1).join("0");
                P = k < 0 ? "-" + O + P.slice(1) : O + P;
              }
            }
            E.push(P);
          }
        } else
          E = h(g, function (e) {
            return p(e, !1);
          });
        for (var B = 0; B < E.length; B++)
          for (var I = 0; I < b.length; I++) {
            var N = x + E[B] + b[I];
            (!t || m || N) && r.push(N);
          }
        return r;
      }
      var h = r(339),
        d = r(332);
      e.exports = o;
      var m = "\0SLASH" + Math.random() + "\0",
        v = "\0OPEN" + Math.random() + "\0",
        y = "\0CLOSE" + Math.random() + "\0",
        g = "\0COMMA" + Math.random() + "\0",
        b = "\0PERIOD" + Math.random() + "\0";
    },
    function (e, t, r) {
      (function (e) {
        "use strict";
        function n() {
          try {
            var e = new Uint8Array(1);
            return (
              (e.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function () {
                  return 42;
                },
              }),
              42 === e.foo() &&
                "function" == typeof e.subarray &&
                0 === e.subarray(1, 1).byteLength
            );
          } catch (e) {
            return !1;
          }
        }
        function i() {
          return a.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function s(e, t) {
          if (i() < t) throw new RangeError("Invalid typed array length");
          return (
            a.TYPED_ARRAY_SUPPORT
              ? ((e = new Uint8Array(t)), (e.__proto__ = a.prototype))
              : (null === e && (e = new a(t)), (e.length = t)),
            e
          );
        }
        function a(e, t, r) {
          if (!(a.TYPED_ARRAY_SUPPORT || this instanceof a))
            return new a(e, t, r);
          if ("number" == typeof e) {
            if ("string" == typeof t)
              throw new Error(
                "If encoding is specified then the first argument must be a string"
              );
            return c(this, e);
          }
          return o(this, e, t, r);
        }
        function o(e, t, r, n) {
          if ("number" == typeof t)
            throw new TypeError('"value" argument must not be a number');
          return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer
            ? h(e, t, r, n)
            : "string" == typeof t
            ? f(e, t, r)
            : d(e, t);
        }
        function u(e) {
          if ("number" != typeof e)
            throw new TypeError('"size" argument must be a number');
          if (e < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function l(e, t, r, n) {
          return (
            u(t),
            t <= 0
              ? s(e, t)
              : void 0 !== r
              ? "string" == typeof n
                ? s(e, t).fill(r, n)
                : s(e, t).fill(r)
              : s(e, t)
          );
        }
        function c(e, t) {
          if ((u(t), (e = s(e, t < 0 ? 0 : 0 | m(t))), !a.TYPED_ARRAY_SUPPORT))
            for (var r = 0; r < t; ++r) e[r] = 0;
          return e;
        }
        function f(e, t, r) {
          if (
            (("string" == typeof r && "" !== r) || (r = "utf8"),
            !a.isEncoding(r))
          )
            throw new TypeError('"encoding" must be a valid string encoding');
          var n = 0 | y(t, r);
          e = s(e, n);
          var i = e.write(t, r);
          return i !== n && (e = e.slice(0, i)), e;
        }
        function p(e, t) {
          var r = t.length < 0 ? 0 : 0 | m(t.length);
          e = s(e, r);
          for (var n = 0; n < r; n += 1) e[n] = 255 & t[n];
          return e;
        }
        function h(e, t, r, n) {
          if ((t.byteLength, r < 0 || t.byteLength < r))
            throw new RangeError("'offset' is out of bounds");
          if (t.byteLength < r + (n || 0))
            throw new RangeError("'length' is out of bounds");
          return (
            (t =
              void 0 === r && void 0 === n
                ? new Uint8Array(t)
                : void 0 === n
                ? new Uint8Array(t, r)
                : new Uint8Array(t, r, n)),
            a.TYPED_ARRAY_SUPPORT
              ? ((e = t), (e.__proto__ = a.prototype))
              : (e = p(e, t)),
            e
          );
        }
        function d(e, t) {
          if (a.isBuffer(t)) {
            var r = 0 | m(t.length);
            return (e = s(e, r)), 0 === e.length ? e : (t.copy(e, 0, 0, r), e);
          }
          if (t) {
            if (
              ("undefined" != typeof ArrayBuffer &&
                t.buffer instanceof ArrayBuffer) ||
              "length" in t
            )
              return "number" != typeof t.length || $(t.length)
                ? s(e, 0)
                : p(e, t);
            if ("Buffer" === t.type && Z(t.data)) return p(e, t.data);
          }
          throw new TypeError(
            "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
          );
        }
        function m(e) {
          if (e >= i())
            throw new RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x" +
                i().toString(16) +
                " bytes"
            );
          return 0 | e;
        }
        function v(e) {
          return +e != e && (e = 0), a.alloc(+e);
        }
        function y(e, t) {
          if (a.isBuffer(e)) return e.length;
          if (
            "undefined" != typeof ArrayBuffer &&
            "function" == typeof ArrayBuffer.isView &&
            (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)
          )
            return e.byteLength;
          "string" != typeof e && (e = "" + e);
          var r = e.length;
          if (0 === r) return 0;
          for (var n = !1; ; )
            switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return r;
              case "utf8":
              case "utf-8":
              case void 0:
                return q(e).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * r;
              case "hex":
                return r >>> 1;
              case "base64":
                return J(e).length;
              default:
                if (n) return q(e).length;
                (t = ("" + t).toLowerCase()), (n = !0);
            }
        }
        function g(e, t, r) {
          var n = !1;
          if (((void 0 === t || t < 0) && (t = 0), t > this.length)) return "";
          if (((void 0 === r || r > this.length) && (r = this.length), r <= 0))
            return "";
          if (((r >>>= 0), (t >>>= 0), r <= t)) return "";
          for (e || (e = "utf8"); ; )
            switch (e) {
              case "hex":
                return B(this, t, r);
              case "utf8":
              case "utf-8":
                return k(this, t, r);
              case "ascii":
                return T(this, t, r);
              case "latin1":
              case "binary":
                return O(this, t, r);
              case "base64":
                return F(this, t, r);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return I(this, t, r);
              default:
                if (n) throw new TypeError("Unknown encoding: " + e);
                (e = (e + "").toLowerCase()), (n = !0);
            }
        }
        function b(e, t, r) {
          var n = e[t];
          (e[t] = e[r]), (e[r] = n);
        }
        function E(e, t, r, n, i) {
          if (0 === e.length) return -1;
          if (
            ("string" == typeof r
              ? ((n = r), (r = 0))
              : r > 2147483647
              ? (r = 2147483647)
              : r < -2147483648 && (r = -2147483648),
            (r = +r),
            isNaN(r) && (r = i ? 0 : e.length - 1),
            r < 0 && (r = e.length + r),
            r >= e.length)
          ) {
            if (i) return -1;
            r = e.length - 1;
          } else if (r < 0) {
            if (!i) return -1;
            r = 0;
          }
          if (("string" == typeof t && (t = a.from(t, n)), a.isBuffer(t)))
            return 0 === t.length ? -1 : x(e, t, r, n, i);
          if ("number" == typeof t)
            return (
              (t &= 255),
              a.TYPED_ARRAY_SUPPORT &&
              "function" == typeof Uint8Array.prototype.indexOf
                ? i
                  ? Uint8Array.prototype.indexOf.call(e, t, r)
                  : Uint8Array.prototype.lastIndexOf.call(e, t, r)
                : x(e, [t], r, n, i)
            );
          throw new TypeError("val must be string, number or Buffer");
        }
        function x(e, t, r, n, i) {
          function s(e, t) {
            return 1 === a ? e[t] : e.readUInt16BE(t * a);
          }
          var a = 1,
            o = e.length,
            u = t.length;
          if (
            void 0 !== n &&
            ((n = String(n).toLowerCase()),
            "ucs2" === n ||
              "ucs-2" === n ||
              "utf16le" === n ||
              "utf-16le" === n)
          ) {
            if (e.length < 2 || t.length < 2) return -1;
            (a = 2), (o /= 2), (u /= 2), (r /= 2);
          }
          var l;
          if (i) {
            var c = -1;
            for (l = r; l < o; l++)
              if (s(e, l) === s(t, c === -1 ? 0 : l - c)) {
                if ((c === -1 && (c = l), l - c + 1 === u)) return c * a;
              } else c !== -1 && (l -= l - c), (c = -1);
          } else
            for (r + u > o && (r = o - u), l = r; l >= 0; l--) {
              for (var f = !0, p = 0; p < u; p++)
                if (s(e, l + p) !== s(t, p)) {
                  f = !1;
                  break;
                }
              if (f) return l;
            }
          return -1;
        }
        function A(e, t, r, n) {
          r = Number(r) || 0;
          var i = e.length - r;
          n ? ((n = Number(n)), n > i && (n = i)) : (n = i);
          var s = t.length;
          if (s % 2 !== 0) throw new TypeError("Invalid hex string");
          n > s / 2 && (n = s / 2);
          for (var a = 0; a < n; ++a) {
            var o = parseInt(t.substr(2 * a, 2), 16);
            if (isNaN(o)) return a;
            e[r + a] = o;
          }
          return a;
        }
        function D(e, t, r, n) {
          return X(q(t, e.length - r), e, r, n);
        }
        function C(e, t, r, n) {
          return X(K(t), e, r, n);
        }
        function S(e, t, r, n) {
          return C(e, t, r, n);
        }
        function _(e, t, r, n) {
          return X(J(t), e, r, n);
        }
        function w(e, t, r, n) {
          return X(H(t, e.length - r), e, r, n);
        }
        function F(e, t, r) {
          return 0 === t && r === e.length
            ? z.fromByteArray(e)
            : z.fromByteArray(e.slice(t, r));
        }
        function k(e, t, r) {
          r = Math.min(e.length, r);
          for (var n = [], i = t; i < r; ) {
            var s = e[i],
              a = null,
              o = s > 239 ? 4 : s > 223 ? 3 : s > 191 ? 2 : 1;
            if (i + o <= r) {
              var u, l, c, f;
              switch (o) {
                case 1:
                  s < 128 && (a = s);
                  break;
                case 2:
                  (u = e[i + 1]),
                    128 === (192 & u) &&
                      ((f = ((31 & s) << 6) | (63 & u)), f > 127 && (a = f));
                  break;
                case 3:
                  (u = e[i + 1]),
                    (l = e[i + 2]),
                    128 === (192 & u) &&
                      128 === (192 & l) &&
                      ((f = ((15 & s) << 12) | ((63 & u) << 6) | (63 & l)),
                      f > 2047 && (f < 55296 || f > 57343) && (a = f));
                  break;
                case 4:
                  (u = e[i + 1]),
                    (l = e[i + 2]),
                    (c = e[i + 3]),
                    128 === (192 & u) &&
                      128 === (192 & l) &&
                      128 === (192 & c) &&
                      ((f =
                        ((15 & s) << 18) |
                        ((63 & u) << 12) |
                        ((63 & l) << 6) |
                        (63 & c)),
                      f > 65535 && f < 1114112 && (a = f));
              }
            }
            null === a
              ? ((a = 65533), (o = 1))
              : a > 65535 &&
                ((a -= 65536),
                n.push(((a >>> 10) & 1023) | 55296),
                (a = 56320 | (1023 & a))),
              n.push(a),
              (i += o);
          }
          return P(n);
        }
        function P(e) {
          var t = e.length;
          if (t <= ee) return String.fromCharCode.apply(String, e);
          for (var r = "", n = 0; n < t; )
            r += String.fromCharCode.apply(String, e.slice(n, (n += ee)));
          return r;
        }
        function T(e, t, r) {
          var n = "";
          r = Math.min(e.length, r);
          for (var i = t; i < r; ++i) n += String.fromCharCode(127 & e[i]);
          return n;
        }
        function O(e, t, r) {
          var n = "";
          r = Math.min(e.length, r);
          for (var i = t; i < r; ++i) n += String.fromCharCode(e[i]);
          return n;
        }
        function B(e, t, r) {
          var n = e.length;
          (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n);
          for (var i = "", s = t; s < r; ++s) i += Y(e[s]);
          return i;
        }
        function I(e, t, r) {
          for (var n = e.slice(t, r), i = "", s = 0; s < n.length; s += 2)
            i += String.fromCharCode(n[s] + 256 * n[s + 1]);
          return i;
        }
        function N(e, t, r) {
          if (e % 1 !== 0 || e < 0) throw new RangeError("offset is not uint");
          if (e + t > r)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function M(e, t, r, n, i, s) {
          if (!a.isBuffer(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (t > i || t < s)
            throw new RangeError('"value" argument is out of bounds');
          if (r + n > e.length) throw new RangeError("Index out of range");
        }
        function R(e, t, r, n) {
          t < 0 && (t = 65535 + t + 1);
          for (var i = 0, s = Math.min(e.length - r, 2); i < s; ++i)
            e[r + i] =
              (t & (255 << (8 * (n ? i : 1 - i)))) >>> (8 * (n ? i : 1 - i));
        }
        function L(e, t, r, n) {
          t < 0 && (t = 4294967295 + t + 1);
          for (var i = 0, s = Math.min(e.length - r, 4); i < s; ++i)
            e[r + i] = (t >>> (8 * (n ? i : 3 - i))) & 255;
        }
        function j(e, t, r, n, i, s) {
          if (r + n > e.length) throw new RangeError("Index out of range");
          if (r < 0) throw new RangeError("Index out of range");
        }
        function V(e, t, r, n, i) {
          return (
            i || j(e, t, r, 4, 3.4028234663852886e38, -3.4028234663852886e38),
            Q.write(e, t, r, n, 23, 4),
            r + 4
          );
        }
        function U(e, t, r, n, i) {
          return (
            i || j(e, t, r, 8, 1.7976931348623157e308, -1.7976931348623157e308),
            Q.write(e, t, r, n, 52, 8),
            r + 8
          );
        }
        function G(e) {
          if (((e = W(e).replace(te, "")), e.length < 2)) return "";
          for (; e.length % 4 !== 0; ) e += "=";
          return e;
        }
        function W(e) {
          return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "");
        }
        function Y(e) {
          return e < 16 ? "0" + e.toString(16) : e.toString(16);
        }
        function q(e, t) {
          t = t || 1 / 0;
          for (var r, n = e.length, i = null, s = [], a = 0; a < n; ++a) {
            if (((r = e.charCodeAt(a)), r > 55295 && r < 57344)) {
              if (!i) {
                if (r > 56319) {
                  (t -= 3) > -1 && s.push(239, 191, 189);
                  continue;
                }
                if (a + 1 === n) {
                  (t -= 3) > -1 && s.push(239, 191, 189);
                  continue;
                }
                i = r;
                continue;
              }
              if (r < 56320) {
                (t -= 3) > -1 && s.push(239, 191, 189), (i = r);
                continue;
              }
              r = (((i - 55296) << 10) | (r - 56320)) + 65536;
            } else i && (t -= 3) > -1 && s.push(239, 191, 189);
            if (((i = null), r < 128)) {
              if ((t -= 1) < 0) break;
              s.push(r);
            } else if (r < 2048) {
              if ((t -= 2) < 0) break;
              s.push((r >> 6) | 192, (63 & r) | 128);
            } else if (r < 65536) {
              if ((t -= 3) < 0) break;
              s.push((r >> 12) | 224, ((r >> 6) & 63) | 128, (63 & r) | 128);
            } else {
              if (!(r < 1114112)) throw new Error("Invalid code point");
              if ((t -= 4) < 0) break;
              s.push(
                (r >> 18) | 240,
                ((r >> 12) & 63) | 128,
                ((r >> 6) & 63) | 128,
                (63 & r) | 128
              );
            }
          }
          return s;
        }
        function K(e) {
          for (var t = [], r = 0; r < e.length; ++r)
            t.push(255 & e.charCodeAt(r));
          return t;
        }
        function H(e, t) {
          for (var r, n, i, s = [], a = 0; a < e.length && !((t -= 2) < 0); ++a)
            (r = e.charCodeAt(a)),
              (n = r >> 8),
              (i = r % 256),
              s.push(i),
              s.push(n);
          return s;
        }
        function J(e) {
          return z.toByteArray(G(e));
        }
        function X(e, t, r, n) {
          for (var i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i)
            t[i + r] = e[i];
          return i;
        }
        function $(e) {
          return e !== e;
        }
        var z = r(333),
          Q = r(396),
          Z = r(336);
        (t.Buffer = a),
          (t.SlowBuffer = v),
          (t.INSPECT_MAX_BYTES = 50),
          (a.TYPED_ARRAY_SUPPORT =
            void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : n()),
          (t.kMaxLength = i()),
          (a.poolSize = 8192),
          (a._augment = function (e) {
            return (e.__proto__ = a.prototype), e;
          }),
          (a.from = function (e, t, r) {
            return o(null, e, t, r);
          }),
          a.TYPED_ARRAY_SUPPORT &&
            ((a.prototype.__proto__ = Uint8Array.prototype),
            (a.__proto__ = Uint8Array),
            "undefined" != typeof Symbol &&
              Symbol.species &&
              a[Symbol.species] === a &&
              Object.defineProperty(a, Symbol.species, {
                value: null,
                configurable: !0,
              })),
          (a.alloc = function (e, t, r) {
            return l(null, e, t, r);
          }),
          (a.allocUnsafe = function (e) {
            return c(null, e);
          }),
          (a.allocUnsafeSlow = function (e) {
            return c(null, e);
          }),
          (a.isBuffer = function (e) {
            return !(null == e || !e._isBuffer);
          }),
          (a.compare = function (e, t) {
            if (!a.isBuffer(e) || !a.isBuffer(t))
              throw new TypeError("Arguments must be Buffers");
            if (e === t) return 0;
            for (
              var r = e.length, n = t.length, i = 0, s = Math.min(r, n);
              i < s;
              ++i
            )
              if (e[i] !== t[i]) {
                (r = e[i]), (n = t[i]);
                break;
              }
            return r < n ? -1 : n < r ? 1 : 0;
          }),
          (a.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (a.concat = function (e, t) {
            if (!Z(e))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            if (0 === e.length) return a.alloc(0);
            var r;
            if (void 0 === t)
              for (t = 0, r = 0; r < e.length; ++r) t += e[r].length;
            var n = a.allocUnsafe(t),
              i = 0;
            for (r = 0; r < e.length; ++r) {
              var s = e[r];
              if (!a.isBuffer(s))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              s.copy(n, i), (i += s.length);
            }
            return n;
          }),
          (a.byteLength = y),
          (a.prototype._isBuffer = !0),
          (a.prototype.swap16 = function () {
            var e = this.length;
            if (e % 2 !== 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var t = 0; t < e; t += 2) b(this, t, t + 1);
            return this;
          }),
          (a.prototype.swap32 = function () {
            var e = this.length;
            if (e % 4 !== 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var t = 0; t < e; t += 4)
              b(this, t, t + 3), b(this, t + 1, t + 2);
            return this;
          }),
          (a.prototype.swap64 = function () {
            var e = this.length;
            if (e % 8 !== 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var t = 0; t < e; t += 8)
              b(this, t, t + 7),
                b(this, t + 1, t + 6),
                b(this, t + 2, t + 5),
                b(this, t + 3, t + 4);
            return this;
          }),
          (a.prototype.toString = function () {
            var e = 0 | this.length;
            return 0 === e
              ? ""
              : 0 === arguments.length
              ? k(this, 0, e)
              : g.apply(this, arguments);
          }),
          (a.prototype.equals = function (e) {
            if (!a.isBuffer(e))
              throw new TypeError("Argument must be a Buffer");
            return this === e || 0 === a.compare(this, e);
          }),
          (a.prototype.inspect = function () {
            var e = "",
              r = t.INSPECT_MAX_BYTES;
            return (
              this.length > 0 &&
                ((e = this.toString("hex", 0, r).match(/.{2}/g).join(" ")),
                this.length > r && (e += " ... ")),
              "<Buffer " + e + ">"
            );
          }),
          (a.prototype.compare = function (e, t, r, n, i) {
            if (!a.isBuffer(e))
              throw new TypeError("Argument must be a Buffer");
            if (
              (void 0 === t && (t = 0),
              void 0 === r && (r = e ? e.length : 0),
              void 0 === n && (n = 0),
              void 0 === i && (i = this.length),
              t < 0 || r > e.length || n < 0 || i > this.length)
            )
              throw new RangeError("out of range index");
            if (n >= i && t >= r) return 0;
            if (n >= i) return -1;
            if (t >= r) return 1;
            if (((t >>>= 0), (r >>>= 0), (n >>>= 0), (i >>>= 0), this === e))
              return 0;
            for (
              var s = i - n,
                o = r - t,
                u = Math.min(s, o),
                l = this.slice(n, i),
                c = e.slice(t, r),
                f = 0;
              f < u;
              ++f
            )
              if (l[f] !== c[f]) {
                (s = l[f]), (o = c[f]);
                break;
              }
            return s < o ? -1 : o < s ? 1 : 0;
          }),
          (a.prototype.includes = function (e, t, r) {
            return this.indexOf(e, t, r) !== -1;
          }),
          (a.prototype.indexOf = function (e, t, r) {
            return E(this, e, t, r, !0);
          }),
          (a.prototype.lastIndexOf = function (e, t, r) {
            return E(this, e, t, r, !1);
          }),
          (a.prototype.write = function (e, t, r, n) {
            if (void 0 === t) (n = "utf8"), (r = this.length), (t = 0);
            else if (void 0 === r && "string" == typeof t)
              (n = t), (r = this.length), (t = 0);
            else {
              if (!isFinite(t))
                throw new Error(
                  "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                );
              (t |= 0),
                isFinite(r)
                  ? ((r |= 0), void 0 === n && (n = "utf8"))
                  : ((n = r), (r = void 0));
            }
            var i = this.length - t;
            if (
              ((void 0 === r || r > i) && (r = i),
              (e.length > 0 && (r < 0 || t < 0)) || t > this.length)
            )
              throw new RangeError("Attempt to write outside buffer bounds");
            n || (n = "utf8");
            for (var s = !1; ; )
              switch (n) {
                case "hex":
                  return A(this, e, t, r);
                case "utf8":
                case "utf-8":
                  return D(this, e, t, r);
                case "ascii":
                  return C(this, e, t, r);
                case "latin1":
                case "binary":
                  return S(this, e, t, r);
                case "base64":
                  return _(this, e, t, r);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return w(this, e, t, r);
                default:
                  if (s) throw new TypeError("Unknown encoding: " + n);
                  (n = ("" + n).toLowerCase()), (s = !0);
              }
          }),
          (a.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          });
        var ee = 4096;
        (a.prototype.slice = function (e, t) {
          var r = this.length;
          (e = ~~e),
            (t = void 0 === t ? r : ~~t),
            e < 0 ? ((e += r), e < 0 && (e = 0)) : e > r && (e = r),
            t < 0 ? ((t += r), t < 0 && (t = 0)) : t > r && (t = r),
            t < e && (t = e);
          var n;
          if (a.TYPED_ARRAY_SUPPORT)
            (n = this.subarray(e, t)), (n.__proto__ = a.prototype);
          else {
            var i = t - e;
            n = new a(i, void 0);
            for (var s = 0; s < i; ++s) n[s] = this[s + e];
          }
          return n;
        }),
          (a.prototype.readUIntLE = function (e, t, r) {
            (e |= 0), (t |= 0), r || N(e, t, this.length);
            for (var n = this[e], i = 1, s = 0; ++s < t && (i *= 256); )
              n += this[e + s] * i;
            return n;
          }),
          (a.prototype.readUIntBE = function (e, t, r) {
            (e |= 0), (t |= 0), r || N(e, t, this.length);
            for (var n = this[e + --t], i = 1; t > 0 && (i *= 256); )
              n += this[e + --t] * i;
            return n;
          }),
          (a.prototype.readUInt8 = function (e, t) {
            return t || N(e, 1, this.length), this[e];
          }),
          (a.prototype.readUInt16LE = function (e, t) {
            return t || N(e, 2, this.length), this[e] | (this[e + 1] << 8);
          }),
          (a.prototype.readUInt16BE = function (e, t) {
            return t || N(e, 2, this.length), (this[e] << 8) | this[e + 1];
          }),
          (a.prototype.readUInt32LE = function (e, t) {
            return (
              t || N(e, 4, this.length),
              (this[e] | (this[e + 1] << 8) | (this[e + 2] << 16)) +
                16777216 * this[e + 3]
            );
          }),
          (a.prototype.readUInt32BE = function (e, t) {
            return (
              t || N(e, 4, this.length),
              16777216 * this[e] +
                ((this[e + 1] << 16) | (this[e + 2] << 8) | this[e + 3])
            );
          }),
          (a.prototype.readIntLE = function (e, t, r) {
            (e |= 0), (t |= 0), r || N(e, t, this.length);
            for (var n = this[e], i = 1, s = 0; ++s < t && (i *= 256); )
              n += this[e + s] * i;
            return (i *= 128), n >= i && (n -= Math.pow(2, 8 * t)), n;
          }),
          (a.prototype.readIntBE = function (e, t, r) {
            (e |= 0), (t |= 0), r || N(e, t, this.length);
            for (var n = t, i = 1, s = this[e + --n]; n > 0 && (i *= 256); )
              s += this[e + --n] * i;
            return (i *= 128), s >= i && (s -= Math.pow(2, 8 * t)), s;
          }),
          (a.prototype.readInt8 = function (e, t) {
            return (
              t || N(e, 1, this.length),
              128 & this[e] ? (255 - this[e] + 1) * -1 : this[e]
            );
          }),
          (a.prototype.readInt16LE = function (e, t) {
            t || N(e, 2, this.length);
            var r = this[e] | (this[e + 1] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (a.prototype.readInt16BE = function (e, t) {
            t || N(e, 2, this.length);
            var r = this[e + 1] | (this[e] << 8);
            return 32768 & r ? 4294901760 | r : r;
          }),
          (a.prototype.readInt32LE = function (e, t) {
            return (
              t || N(e, 4, this.length),
              this[e] |
                (this[e + 1] << 8) |
                (this[e + 2] << 16) |
                (this[e + 3] << 24)
            );
          }),
          (a.prototype.readInt32BE = function (e, t) {
            return (
              t || N(e, 4, this.length),
              (this[e] << 24) |
                (this[e + 1] << 16) |
                (this[e + 2] << 8) |
                this[e + 3]
            );
          }),
          (a.prototype.readFloatLE = function (e, t) {
            return t || N(e, 4, this.length), Q.read(this, e, !0, 23, 4);
          }),
          (a.prototype.readFloatBE = function (e, t) {
            return t || N(e, 4, this.length), Q.read(this, e, !1, 23, 4);
          }),
          (a.prototype.readDoubleLE = function (e, t) {
            return t || N(e, 8, this.length), Q.read(this, e, !0, 52, 8);
          }),
          (a.prototype.readDoubleBE = function (e, t) {
            return t || N(e, 8, this.length), Q.read(this, e, !1, 52, 8);
          }),
          (a.prototype.writeUIntLE = function (e, t, r, n) {
            if (((e = +e), (t |= 0), (r |= 0), !n)) {
              var i = Math.pow(2, 8 * r) - 1;
              M(this, e, t, r, i, 0);
            }
            var s = 1,
              a = 0;
            for (this[t] = 255 & e; ++a < r && (s *= 256); )
              this[t + a] = (e / s) & 255;
            return t + r;
          }),
          (a.prototype.writeUIntBE = function (e, t, r, n) {
            if (((e = +e), (t |= 0), (r |= 0), !n)) {
              var i = Math.pow(2, 8 * r) - 1;
              M(this, e, t, r, i, 0);
            }
            var s = r - 1,
              a = 1;
            for (this[t + s] = 255 & e; --s >= 0 && (a *= 256); )
              this[t + s] = (e / a) & 255;
            return t + r;
          }),
          (a.prototype.writeUInt8 = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 1, 255, 0),
              a.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (a.prototype.writeUInt16LE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 2, 65535, 0),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : R(this, e, t, !0),
              t + 2
            );
          }),
          (a.prototype.writeUInt16BE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 2, 65535, 0),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : R(this, e, t, !1),
              t + 2
            );
          }),
          (a.prototype.writeUInt32LE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 4, 4294967295, 0),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t + 3] = e >>> 24),
                  (this[t + 2] = e >>> 16),
                  (this[t + 1] = e >>> 8),
                  (this[t] = 255 & e))
                : L(this, e, t, !0),
              t + 4
            );
          }),
          (a.prototype.writeUInt32BE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 4, 4294967295, 0),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : L(this, e, t, !1),
              t + 4
            );
          }),
          (a.prototype.writeIntLE = function (e, t, r, n) {
            if (((e = +e), (t |= 0), !n)) {
              var i = Math.pow(2, 8 * r - 1);
              M(this, e, t, r, i - 1, -i);
            }
            var s = 0,
              a = 1,
              o = 0;
            for (this[t] = 255 & e; ++s < r && (a *= 256); )
              e < 0 && 0 === o && 0 !== this[t + s - 1] && (o = 1),
                (this[t + s] = (((e / a) >> 0) - o) & 255);
            return t + r;
          }),
          (a.prototype.writeIntBE = function (e, t, r, n) {
            if (((e = +e), (t |= 0), !n)) {
              var i = Math.pow(2, 8 * r - 1);
              M(this, e, t, r, i - 1, -i);
            }
            var s = r - 1,
              a = 1,
              o = 0;
            for (this[t + s] = 255 & e; --s >= 0 && (a *= 256); )
              e < 0 && 0 === o && 0 !== this[t + s + 1] && (o = 1),
                (this[t + s] = (((e / a) >> 0) - o) & 255);
            return t + r;
          }),
          (a.prototype.writeInt8 = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 1, 127, -128),
              a.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
              e < 0 && (e = 255 + e + 1),
              (this[t] = 255 & e),
              t + 1
            );
          }),
          (a.prototype.writeInt16LE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 2, 32767, -32768),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e), (this[t + 1] = e >>> 8))
                : R(this, e, t, !0),
              t + 2
            );
          }),
          (a.prototype.writeInt16BE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 2, 32767, -32768),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 8), (this[t + 1] = 255 & e))
                : R(this, e, t, !1),
              t + 2
            );
          }),
          (a.prototype.writeInt32LE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 4, 2147483647, -2147483648),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = 255 & e),
                  (this[t + 1] = e >>> 8),
                  (this[t + 2] = e >>> 16),
                  (this[t + 3] = e >>> 24))
                : L(this, e, t, !0),
              t + 4
            );
          }),
          (a.prototype.writeInt32BE = function (e, t, r) {
            return (
              (e = +e),
              (t |= 0),
              r || M(this, e, t, 4, 2147483647, -2147483648),
              e < 0 && (e = 4294967295 + e + 1),
              a.TYPED_ARRAY_SUPPORT
                ? ((this[t] = e >>> 24),
                  (this[t + 1] = e >>> 16),
                  (this[t + 2] = e >>> 8),
                  (this[t + 3] = 255 & e))
                : L(this, e, t, !1),
              t + 4
            );
          }),
          (a.prototype.writeFloatLE = function (e, t, r) {
            return V(this, e, t, !0, r);
          }),
          (a.prototype.writeFloatBE = function (e, t, r) {
            return V(this, e, t, !1, r);
          }),
          (a.prototype.writeDoubleLE = function (e, t, r) {
            return U(this, e, t, !0, r);
          }),
          (a.prototype.writeDoubleBE = function (e, t, r) {
            return U(this, e, t, !1, r);
          }),
          (a.prototype.copy = function (e, t, r, n) {
            if (
              (r || (r = 0),
              n || 0 === n || (n = this.length),
              t >= e.length && (t = e.length),
              t || (t = 0),
              n > 0 && n < r && (n = r),
              n === r)
            )
              return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError("targetStart out of bounds");
            if (r < 0 || r >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (n < 0) throw new RangeError("sourceEnd out of bounds");
            n > this.length && (n = this.length),
              e.length - t < n - r && (n = e.length - t + r);
            var i,
              s = n - r;
            if (this === e && r < t && t < n)
              for (i = s - 1; i >= 0; --i) e[i + t] = this[i + r];
            else if (s < 1e3 || !a.TYPED_ARRAY_SUPPORT)
              for (i = 0; i < s; ++i) e[i + t] = this[i + r];
            else Uint8Array.prototype.set.call(e, this.subarray(r, r + s), t);
            return s;
          }),
          (a.prototype.fill = function (e, t, r, n) {
            if ("string" == typeof e) {
              if (
                ("string" == typeof t
                  ? ((n = t), (t = 0), (r = this.length))
                  : "string" == typeof r && ((n = r), (r = this.length)),
                1 === e.length)
              ) {
                var i = e.charCodeAt(0);
                i < 256 && (e = i);
              }
              if (void 0 !== n && "string" != typeof n)
                throw new TypeError("encoding must be a string");
              if ("string" == typeof n && !a.isEncoding(n))
                throw new TypeError("Unknown encoding: " + n);
            } else "number" == typeof e && (e &= 255);
            if (t < 0 || this.length < t || this.length < r)
              throw new RangeError("Out of range index");
            if (r <= t) return this;
            (t >>>= 0),
              (r = void 0 === r ? this.length : r >>> 0),
              e || (e = 0);
            var s;
            if ("number" == typeof e) for (s = t; s < r; ++s) this[s] = e;
            else {
              var o = a.isBuffer(e) ? e : q(new a(e, n).toString()),
                u = o.length;
              for (s = 0; s < r - t; ++s) this[s + t] = o[s % u];
            }
            return this;
          });
        var te = /[^+\/0-9A-Za-z-_]/g;
      }.call(
        t,
        (function () {
          return this;
        })()
      ));
    },
    function (e, t) {
      var r = {}.toString;
      e.exports =
        Array.isArray ||
        function (e) {
          return "[object Array]" == r.call(e);
        };
    },
    function (e, t, r) {
      (function (t) {
        "use strict";
        function n(e) {
          this.enabled = e && void 0 !== e.enabled ? e.enabled : f;
        }
        function i(e) {
          var t = function () {
            return s.apply(t, arguments);
          };
          return (
            (t._styles = e), (t.enabled = this.enabled), (t.__proto__ = m), t
          );
        }
        function s() {
          var e = arguments,
            t = e.length,
            r = 0 !== t && String(arguments[0]);
          if (t > 1) for (var n = 1; n < t; n++) r += " " + e[n];
          if (!this.enabled || !r) return r;
          var i = this._styles,
            s = i.length,
            a = u.dim.open;
          for (
            !h ||
            (i.indexOf("gray") === -1 && i.indexOf("grey") === -1) ||
            (u.dim.open = "");
            s--;

          ) {
            var o = u[i[s]];
            r = o.open + r.replace(o.closeRe, o.open) + o.close;
          }
          return (u.dim.open = a), r;
        }
        function a() {
          var e = {};
          return (
            Object.keys(d).forEach(function (t) {
              e[t] = {
                get: function () {
                  return i.call(this, [t]);
                },
              };
            }),
            e
          );
        }
        var o = r(392),
          u = r(225),
          l = r(552),
          c = r(395),
          f = r(338),
          p = Object.defineProperties,
          h = "win32" === t.platform && !/^xterm/i.test(t.env.TERM);
        h && (u.blue.open = "[94m");
        var d = (function () {
            var e = {};
            return (
              Object.keys(u).forEach(function (t) {
                (u[t].closeRe = new RegExp(o(u[t].close), "g")),
                  (e[t] = {
                    get: function () {
                      return i.call(this, this._styles.concat(t));
                    },
                  });
              }),
              e
            );
          })(),
          m = p(function () {}, d);
        p(n.prototype, a()),
          (e.exports = new n()),
          (e.exports.styles = u),
          (e.exports.hasColor = c),
          (e.exports.stripColor = l),
          (e.exports.supportsColor = f);
      }.call(t, r(11)));
    },
    function (e, t, r) {
      (function (t) {
        "use strict";
        var r = t.argv,
          n = r.indexOf("--"),
          i = function (e) {
            e = "--" + e;
            var t = r.indexOf(e);
            return t !== -1 && (n === -1 || t < n);
          };
        e.exports = (function () {
          return (
            "FORCE_COLOR" in t.env ||
            (!(i("no-color") || i("no-colors") || i("color=false")) &&
              (!!(
                i("color") ||
                i("colors") ||
                i("color=true") ||
                i("color=always")
              ) ||
                (!(t.stdout && !t.stdout.isTTY) &&
                  ("win32" === t.platform ||
                    "COLORTERM" in t.env ||
                    ("dumb" !== t.env.TERM &&
                      !!/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(
                        t.env.TERM
                      ))))))
          );
        })();
      }.call(t, r(11)));
    },
    function (e, t) {
      e.exports = function (e, t) {
        for (var n = [], i = 0; i < e.length; i++) {
          var s = t(e[i], i);
          r(s) ? n.push.apply(n, s) : n.push(s);
        }
        return n;
      };
      var r =
        Array.isArray ||
        function (e) {
          return "[object Array]" === Object.prototype.toString.call(e);
        };
    },
    function (e, t, r) {
      (function (e) {
        "use strict";
        function n(t) {
          return new e(t, "base64").toString();
        }
        function i(e) {
          return e.split(",").pop();
        }
        function s(e, t) {
          var r = f.exec(e);
          f.lastIndex = 0;
          var n = r[1] || r[2],
            i = l.resolve(t, n);
          try {
            return u.readFileSync(i, "utf8");
          } catch (e) {
            throw new Error(
              "An error occurred while trying to read the map file at " +
                i +
                "\n" +
                e
            );
          }
        }
        function a(e, t) {
          (t = t || {}),
            t.isFileComment && (e = s(e, t.commentFileDir)),
            t.hasComment && (e = i(e)),
            t.isEncoded && (e = n(e)),
            (t.isJSON || t.isEncoded) && (e = JSON.parse(e)),
            (this.sourcemap = e);
        }
        function o(e) {
          for (var r, n = e.split("\n"), i = n.length - 1; i > 0; i--)
            if (((r = n[i]), ~r.indexOf("sourceMappingURL=data:")))
              return t.fromComment(r);
        }
        var u = r(46),
          l = r(25),
          c = /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+;)?base64,(.*)$/gm,
          f = /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/gm;
        (a.prototype.toJSON = function (e) {
          return JSON.stringify(this.sourcemap, null, e);
        }),
          (a.prototype.toBase64 = function () {
            var t = this.toJSON();
            return new e(t).toString("base64");
          }),
          (a.prototype.toComment = function (e) {
            var t = this.toBase64(),
              r = "sourceMappingURL=data:application/json;base64," + t;
            return e && e.multiline ? "/*# " + r + " */" : "//# " + r;
          }),
          (a.prototype.toObject = function () {
            return JSON.parse(this.toJSON());
          }),
          (a.prototype.addProperty = function (e, t) {
            if (this.sourcemap.hasOwnProperty(e))
              throw new Error(
                "property %s already exists on the sourcemap, use set property instead"
              );
            return this.setProperty(e, t);
          }),
          (a.prototype.setProperty = function (e, t) {
            return (this.sourcemap[e] = t), this;
          }),
          (a.prototype.getProperty = function (e) {
            return this.sourcemap[e];
          }),
          (t.fromObject = function (e) {
            return new a(e);
          }),
          (t.fromJSON = function (e) {
            return new a(e, { isJSON: !0 });
          }),
          (t.fromBase64 = function (e) {
            return new a(e, { isEncoded: !0 });
          }),
          (t.fromComment = function (e) {
            return (
              (e = e.replace(/^\/\*/g, "//").replace(/\*\/$/g, "")),
              new a(e, { isEncoded: !0, hasComment: !0 })
            );
          }),
          (t.fromMapFileComment = function (e, t) {
            return new a(e, {
              commentFileDir: t,
              isFileComment: !0,
              isJSON: !0,
            });
          }),
          (t.fromSource = function (e, r) {
            if (r) {
              var n = o(e);
              return n ? n : null;
            }
            var i = e.match(c);
            return (c.lastIndex = 0), i ? t.fromComment(i.pop()) : null;
          }),
          (t.fromMapFileSource = function (e, r) {
            var n = e.match(f);
            return (
              (f.lastIndex = 0), n ? t.fromMapFileComment(n.pop(), r) : null
            );
          }),
          (t.removeComments = function (e) {
            return (c.lastIndex = 0), e.replace(c, "");
          }),
          (t.removeMapFileComments = function (e) {
            return (f.lastIndex = 0), e.replace(f, "");
          }),
          (t.generateMapFileComment = function (e, t) {
            var r = "sourceMappingURL=" + e;
            return t && t.multiline ? "/*# " + r + " */" : "//# " + r;
          }),
          Object.defineProperty(t, "commentRegex", {
            get: function () {
              return (c.lastIndex = 0), c;
            },
          }),
          Object.defineProperty(t, "mapFileCommentRegex", {
            get: function () {
              return (f.lastIndex = 0), f;
            },
          });
      }.call(t, r(335).Buffer));
    },
    function (e, t, r) {
      r(56), r(121), (e.exports = r(377));
    },
    function (e, t, r) {
      var n = r(4),
        i = n.JSON || (n.JSON = { stringify: JSON.stringify });
      e.exports = function (e) {
        return i.stringify.apply(i, arguments);
      };
    },
    function (e, t, r) {
      r(76), r(121), r(56), r(379), r(387), (e.exports = r(4).Map);
    },
    function (e, t, r) {
      r(380), (e.exports = 9007199254740991);
    },
    function (e, t, r) {
      r(381), (e.exports = r(4).Object.assign);
    },
    function (e, t, r) {
      r(382);
      var n = r(4).Object;
      e.exports = function (e, t) {
        return n.create(e, t);
      };
    },
    function (e, t, r) {
      r(122), (e.exports = r(4).Object.getOwnPropertySymbols);
    },
    function (e, t, r) {
      r(383), (e.exports = r(4).Object.keys);
    },
    function (e, t, r) {
      r(384), (e.exports = r(4).Object.setPrototypeOf);
    },
    function (e, t, r) {
      r(122), (e.exports = r(4).Symbol.for);
    },
    function (e, t, r) {
      r(122), r(76), r(388), r(389), (e.exports = r(4).Symbol);
    },
    function (e, t, r) {
      r(121), r(56), (e.exports = r(120).f("iterator"));
    },
    function (e, t, r) {
      r(76), r(56), r(385), (e.exports = r(4).WeakMap);
    },
    function (e, t, r) {
      r(76), r(56), r(386), (e.exports = r(4).WeakSet);
    },
    function (e, t) {
      e.exports = function (e) {
        if ("function" != typeof e) throw TypeError(e + " is not a function!");
        return e;
      };
    },
    function (e, t) {
      e.exports = function () {};
    },
    function (e, t, r) {
      var n = r(69);
      e.exports = function (e, t) {
        var r = [];
        return n(e, !1, r.push, r, t), r;
      };
    },
    function (e, t, r) {
      var n = r(37),
        i = r(117),
        s = r(376);
      e.exports = function (e) {
        return function (t, r, a) {
          var o,
            u = n(t),
            l = i(u.length),
            c = s(a, l);
          if (e && r != r) {
            for (; l > c; ) if (((o = u[c++]), o != o)) return !0;
          } else
            for (; l > c; c++)
              if ((e || c in u) && u[c] === r) return e || c || 0;
          return !e && -1;
        };
      };
    },
    function (e, t, r) {
      var n = r(21),
        i = r(166),
        s = r(8)("species");
      e.exports = function (e) {
        var t;
        return (
          i(e) &&
            ((t = e.constructor),
            "function" != typeof t ||
              (t !== Array && !i(t.prototype)) ||
              (t = void 0),
            n(t) && ((t = t[s]), null === t && (t = void 0))),
          void 0 === t ? Array : t
        );
      };
    },
    function (e, t, r) {
      var n = r(359);
      e.exports = function (e, t) {
        return new (n(e))(t);
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(22).f,
        i = r(70),
        s = r(112),
        a = r(53),
        o = r(103),
        u = r(68),
        l = r(69),
        c = r(109),
        f = r(167),
        p = r(374),
        h = r(19),
        d = r(55).fastKey,
        m = h ? "_s" : "size",
        v = function (e, t) {
          var r,
            n = d(t);
          if ("F" !== n) return e._i[n];
          for (r = e._f; r; r = r.n) if (r.k == t) return r;
        };
      e.exports = {
        getConstructor: function (e, t, r, c) {
          var f = e(function (e, n) {
            o(e, f, t, "_i"),
              (e._i = i(null)),
              (e._f = void 0),
              (e._l = void 0),
              (e[m] = 0),
              void 0 != n && l(n, r, e[c], e);
          });
          return (
            s(f.prototype, {
              clear: function () {
                for (var e = this, t = e._i, r = e._f; r; r = r.n)
                  (r.r = !0), r.p && (r.p = r.p.n = void 0), delete t[r.i];
                (e._f = e._l = void 0), (e[m] = 0);
              },
              delete: function (e) {
                var t = this,
                  r = v(t, e);
                if (r) {
                  var n = r.n,
                    i = r.p;
                  delete t._i[r.i],
                    (r.r = !0),
                    i && (i.n = n),
                    n && (n.p = i),
                    t._f == r && (t._f = n),
                    t._l == r && (t._l = i),
                    t[m]--;
                }
                return !!r;
              },
              forEach: function (e) {
                o(this, f, "forEach");
                for (
                  var t,
                    r = a(e, arguments.length > 1 ? arguments[1] : void 0, 3);
                  (t = t ? t.n : this._f);

                )
                  for (r(t.v, t.k, this); t && t.r; ) t = t.p;
              },
              has: function (e) {
                return !!v(this, e);
              },
            }),
            h &&
              n(f.prototype, "size", {
                get: function () {
                  return u(this[m]);
                },
              }),
            f
          );
        },
        def: function (e, t, r) {
          var n,
            i,
            s = v(e, t);
          return (
            s
              ? (s.v = r)
              : ((e._l = s = {
                  i: (i = d(t, !0)),
                  k: t,
                  v: r,
                  p: (n = e._l),
                  n: void 0,
                  r: !1,
                }),
                e._f || (e._f = s),
                n && (n.n = s),
                e[m]++,
                "F" !== i && (e._i[i] = s)),
            e
          );
        },
        getEntry: v,
        setStrong: function (e, t, r) {
          c(
            e,
            t,
            function (e, t) {
              (this._t = e), (this._k = t), (this._l = void 0);
            },
            function () {
              for (var e = this, t = e._k, r = e._l; r && r.r; ) r = r.p;
              return e._t && (e._l = r = r ? r.n : e._t._f)
                ? "keys" == t
                  ? f(0, r.k)
                  : "values" == t
                  ? f(0, r.v)
                  : f(0, [r.k, r.v])
                : ((e._t = void 0), f(1));
            },
            r ? "entries" : "values",
            !r,
            !0
          ),
            p(t);
        },
      };
    },
    function (e, t, r) {
      var n = r(162),
        i = r(357);
      e.exports = function (e) {
        return function () {
          if (n(this) != e) throw TypeError(e + "#toJSON isn't generic");
          return i(this);
        };
      };
    },
    function (e, t, r) {
      var n = r(41),
        i = r(111),
        s = r(71);
      e.exports = function (e) {
        var t = n(e),
          r = i.f;
        if (r)
          for (var a, o = r(e), u = s.f, l = 0; o.length > l; )
            u.call(e, (a = o[l++])) && t.push(a);
        return t;
      };
    },
    function (e, t, r) {
      e.exports = r(13).document && document.documentElement;
    },
    function (e, t, r) {
      var n = r(54),
        i = r(8)("iterator"),
        s = Array.prototype;
      e.exports = function (e) {
        return void 0 !== e && (n.Array === e || s[i] === e);
      };
    },
    function (e, t, r) {
      var n = r(18);
      e.exports = function (e, t, r, i) {
        try {
          return i ? t(n(r)[0], r[1]) : t(r);
        } catch (t) {
          var s = e.return;
          throw (void 0 !== s && n(s.call(e)), t);
        }
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(70),
        i = r(72),
        s = r(73),
        a = {};
      r(28)(a, r(8)("iterator"), function () {
        return this;
      }),
        (e.exports = function (e, t, r) {
          (e.prototype = n(a, { next: i(1, r) })), s(e, t + " Iterator");
        });
    },
    function (e, t, r) {
      var n = r(41),
        i = r(37);
      e.exports = function (e, t) {
        for (var r, s = i(e), a = n(s), o = a.length, u = 0; o > u; )
          if (s[(r = a[u++])] === t) return r;
      };
    },
    function (e, t, r) {
      var n = r(22),
        i = r(18),
        s = r(41);
      e.exports = r(19)
        ? Object.defineProperties
        : function (e, t) {
            i(e);
            for (var r, a = s(t), o = a.length, u = 0; o > u; )
              n.f(e, (r = a[u++]), t[r]);
            return e;
          };
    },
    function (e, t, r) {
      var n = r(37),
        i = r(170).f,
        s = {}.toString,
        a =
          "object" == typeof window && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [],
        o = function (e) {
          try {
            return i(e);
          } catch (e) {
            return a.slice();
          }
        };
      e.exports.f = function (e) {
        return a && "[object Window]" == s.call(e) ? o(e) : i(n(e));
      };
    },
    function (e, t, r) {
      var n = r(27),
        i = r(74),
        s = r(114)("IE_PROTO"),
        a = Object.prototype;
      e.exports =
        Object.getPrototypeOf ||
        function (e) {
          return (
            (e = i(e)),
            n(e, s)
              ? e[s]
              : "function" == typeof e.constructor && e instanceof e.constructor
              ? e.constructor.prototype
              : e instanceof Object
              ? a
              : null
          );
        };
    },
    function (e, t, r) {
      var n = r(20),
        i = r(4),
        s = r(36);
      e.exports = function (e, t) {
        var r = (i.Object || {})[e] || Object[e],
          a = {};
        (a[e] = t(r)),
          n(
            n.S +
              n.F *
                s(function () {
                  r(1);
                }),
            "Object",
            a
          );
      };
    },
    function (e, t, r) {
      var n = r(21),
        i = r(18),
        s = function (e, t) {
          if ((i(e), !n(t) && null !== t))
            throw TypeError(t + ": can't set as prototype!");
        };
      e.exports = {
        set:
          Object.setPrototypeOf ||
          ("__proto__" in {}
            ? (function (e, t, n) {
                try {
                  (n = r(53)(
                    Function.call,
                    r(169).f(Object.prototype, "__proto__").set,
                    2
                  )),
                    n(e, []),
                    (t = !(e instanceof Array));
                } catch (e) {
                  t = !0;
                }
                return function (e, r) {
                  return s(e, r), t ? (e.__proto__ = r) : n(e, r), e;
                };
              })({}, !1)
            : void 0),
        check: s,
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(13),
        i = r(4),
        s = r(22),
        a = r(19),
        o = r(8)("species");
      e.exports = function (e) {
        var t = "function" == typeof i[e] ? i[e] : n[e];
        a &&
          t &&
          !t[o] &&
          s.f(t, o, {
            configurable: !0,
            get: function () {
              return this;
            },
          });
      };
    },
    function (e, t, r) {
      var n = r(116),
        i = r(68);
      e.exports = function (e) {
        return function (t, r) {
          var s,
            a,
            o = String(i(t)),
            u = n(r),
            l = o.length;
          return u < 0 || u >= l
            ? e
              ? ""
              : void 0
            : ((s = o.charCodeAt(u)),
              s < 55296 ||
              s > 56319 ||
              u + 1 === l ||
              (a = o.charCodeAt(u + 1)) < 56320 ||
              a > 57343
                ? e
                  ? o.charAt(u)
                  : s
                : e
                ? o.slice(u, u + 2)
                : ((s - 55296) << 10) + (a - 56320) + 65536);
        };
      };
    },
    function (e, t, r) {
      var n = r(116),
        i = Math.max,
        s = Math.min;
      e.exports = function (e, t) {
        return (e = n(e)), e < 0 ? i(e + t, 0) : s(e, t);
      };
    },
    function (e, t, r) {
      var n = r(18),
        i = r(172);
      e.exports = r(4).getIterator = function (e) {
        var t = i(e);
        if ("function" != typeof t) throw TypeError(e + " is not iterable!");
        return n(t.call(e));
      };
    },
    function (e, t, r) {
      "use strict";
      var n = r(356),
        i = r(167),
        s = r(54),
        a = r(37);
      (e.exports = r(109)(
        Array,
        "Array",
        function (e, t) {
          (this._t = a(e)), (this._i = 0), (this._k = t);
        },
        function () {
          var e = this._t,
            t = this._k,
            r = this._i++;
          return !e || r >= e.length
            ? ((this._t = void 0), i(1))
            : "keys" == t
            ? i(0, r)
            : "values" == t
            ? i(0, e[r])
            : i(0, [r, e[r]]);
        },
        "values"
      )),
        (s.Arguments = s.Array),
        n("keys"),
        n("values"),
        n("entries");
    },
    function (e, t, r) {
      "use strict";
      var n = r(361);
      e.exports = r(106)(
        "Map",
        function (e) {
          return function () {
            return e(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        },
        {
          get: function (e) {
            var t = n.getEntry(this, e);
            return t && t.v;
          },
          set: function (e, t) {
            return n.def(this, 0 === e ? 0 : e, t);
          },
        },
        n,
        !0
      );
    },
    function (e, t, r) {
      var n = r(20);
      n(n.S, "Number", { MAX_SAFE_INTEGER: 9007199254740991 });
    },
    function (e, t, r) {
      var n = r(20);
      n(n.S + n.F, "Object", { assign: r(168) });
    },
    function (e, t, r) {
      var n = r(20);
      n(n.S, "Object", { create: r(70) });
    },
    function (e, t, r) {
      var n = r(74),
        i = r(41);
      r(372)("keys", function () {
        return function (e) {
          return i(n(e));
        };
      });
    },
    function (e, t, r) {
      var n = r(20);
      n(n.S, "Object", { setPrototypeOf: r(373).set });
    },
    function (e, t, r) {
      "use strict";
      var n,
        i = r(104)(0),
        s = r(113),
        a = r(55),
        o = r(168),
        u = r(163),
        l = r(21),
        c = a.getWeak,
        f = Object.isExtensible,
        p = u.ufstore,
        h = {},
        d = function (e) {
          return function () {
            return e(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        },
        m = {
          get: function (e) {
            if (l(e)) {
              var t = c(e);
              return t === !0 ? p(this).get(e) : t ? t[this._i] : void 0;
            }
          },
          set: function (e, t) {
            return u.def(this, e, t);
          },
        },
        v = (e.exports = r(106)("WeakMap", d, m, u, !0, !0));
      7 != new v().set((Object.freeze || Object)(h), 7).get(h) &&
        ((n = u.getConstructor(d)),
        o(n.prototype, m),
        (a.NEED = !0),
        i(["delete", "has", "get", "set"], function (e) {
          var t = v.prototype,
            r = t[e];
          s(t, e, function (t, i) {
            if (l(t) && !f(t)) {
              this._f || (this._f = new n());
              var s = this._f[e](t, i);
              return "set" == e ? this : s;
            }
            return r.call(this, t, i);
          });
        }));
    },
    function (e, t, r) {
      "use strict";
      var n = r(163);
      r(106)(
        "WeakSet",
        function (e) {
          return function () {
            return e(this, arguments.length > 0 ? arguments[0] : void 0);
          };
        },
        {
          add: function (e) {
            return n.def(this, e, !0);
          },
        },
        n,
        !1,
        !0
      );
    },
    function (e, t, r) {
      var n = r(20);
      n(n.P + n.R, "Map", { toJSON: r(362)("Map") });
    },
    function (e, t, r) {
      r(119)("asyncIterator");
    },
    function (e, t, r) {
      r(119)("observable");
    },
    function (e, t, r) {
      (function (n) {
        function i() {
          return (
            ("undefined" != typeof document &&
              "WebkitAppearance" in document.documentElement.style) ||
            (window.console &&
              (console.firebug || (console.exception && console.table))) ||
            (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) &&
              parseInt(RegExp.$1, 10) >= 31)
          );
        }
        function s() {
          var e = arguments,
            r = this.useColors;
          if (
            ((e[0] =
              (r ? "%c" : "") +
              this.namespace +
              (r ? " %c" : " ") +
              e[0] +
              (r ? "%c " : " ") +
              "+" +
              t.humanize(this.diff)),
            !r)
          )
            return e;
          var n = "color: " + this.color;
          e = [e[0], n, "color: inherit"].concat(
            Array.prototype.slice.call(e, 1)
          );
          var i = 0,
            s = 0;
          return (
            e[0].replace(/%[a-z%]/g, function (e) {
              "%%" !== e && (i++, "%c" === e && (s = i));
            }),
            e.splice(s, 0, n),
            e
          );
        }
        function a() {
          return (
            "object" == typeof console &&
            console.log &&
            Function.prototype.apply.call(console.log, console, arguments)
          );
        }
        function o(e) {
          try {
            null == e ? t.storage.removeItem("debug") : (t.storage.debug = e);
          } catch (e) {}
        }
        function u() {
          try {
            return t.storage.debug;
          } catch (e) {}
          if ("undefined" != typeof n && "env" in n) return n.env.DEBUG;
        }
        function l() {
          try {
            return window.localStorage;
          } catch (e) {}
        }
        (t = e.exports = r(173)),
          (t.log = a),
          (t.formatArgs = s),
          (t.save = o),
          (t.load = u),
          (t.useColors = i),
          (t.storage =
            "undefined" != typeof chrome && "undefined" != typeof chrome.storage
              ? chrome.storage.local
              : l()),
          (t.colors = [
            "lightseagreen",
            "forestgreen",
            "goldenrod",
            "dodgerblue",
            "darkorchid",
            "crimson",
          ]),
          (t.formatters.j = function (e) {
            try {
              return JSON.stringify(e);
            } catch (e) {
              return "[UnexpectedJSONParseError]: " + e.message;
            }
          }),
          t.enable(u());
      }.call(t, r(11)));
    },
    function (e, t, r) {
      (function (n) {
        function i() {
          var e = (n.env.DEBUG_COLORS || "").trim().toLowerCase();
          return 0 === e.length
            ? c.isatty(p)
            : "0" !== e && "no" !== e && "false" !== e && "disabled" !== e;
        }
        function s() {
          for (
            var e = arguments.length,
              r = new Array(e),
              n = this.useColors,
              i = this.namespace,
              s = 0;
            s < e;
            s++
          )
            r[s] = arguments[s];
          if (n) {
            var a = this.color;
            (r[0] = "  [3" + a + ";1m" + i + " [0m" + r[0]),
              r.push("[3" + a + "m+" + t.humanize(this.diff) + "[0m");
          } else r[0] = new Date().toUTCString() + " " + i + " " + r[0];
          return r;
        }
        function a() {
          return h.write(f.format.apply(this, arguments) + "\n");
        }
        function o(e) {
          null == e ? delete n.env.DEBUG : (n.env.DEBUG = e);
        }
        function u() {
          return n.env.DEBUG;
        }
        function l(e) {
          var t,
            i = n.binding("tty_wrap");
          switch (i.guessHandleType(e)) {
            case "TTY":
              (t = new c.WriteStream(e)),
                (t._type = "tty"),
                t._handle && t._handle.unref && t._handle.unref();
              break;
            case "FILE":
              var s = r(46);
              (t = new s.SyncWriteStream(e, { autoClose: !1 })),
                (t._type = "fs");
              break;
            case "PIPE":
            case "TCP":
              var a = r(46);
              (t = new a.Socket({ fd: e, readable: !1, writable: !0 })),
                (t.readable = !1),
                (t.read = null),
                (t._type = "pipe"),
                t._handle && t._handle.unref && t._handle.unref();
              break;
            default:
              throw new Error("Implement me. Unknown stream file type!");
          }
          return (t.fd = e), (t._isStdio = !0), t;
        }
        var c = r(554),
          f = r(62);
        (t = e.exports = r(173)),
          (t.log = a),
          (t.formatArgs = s),
          (t.save = o),
          (t.load = u),
          (t.useColors = i),
          (t.colors = [6, 2, 3, 4, 5, 1]);
        var p = parseInt(n.env.DEBUG_FD, 10) || 2,
          h = 1 === p ? n.stdout : 2 === p ? n.stderr : l(p),
          d =
            4 === f.inspect.length
              ? function (e, t) {
                  return f.inspect(e, void 0, void 0, t);
                }
              : function (e, t) {
                  return f.inspect(e, { colors: t });
                };
        (t.formatters.o = t.formatters.O = function (e) {
          return d(e, this.useColors).replace(/\s*\n\s*/g, " ");
        }),
          t.enable(u());
      }.call(t, r(11)));
    },
    function (e, t) {
      "use strict";
      var r = /[|\\{}()[\]^$+*?.]/g;
      e.exports = function (e) {
        if ("string" != typeof e) throw new TypeError("Expected a string");
        return e.replace(r, "\\$&");
      };
    },
    function (e, t) {
      !(function () {
        "use strict";
        function t(e) {
          if (null == e) return !1;
          switch (e.type) {
            case "ArrayExpression":
            case "AssignmentExpression":
            case "BinaryExpression":
            case "CallExpression":
            case "ConditionalExpression":
            case "FunctionExpression":
            case "Identifier":
            case "Literal":
            case "LogicalExpression":
            case "MemberExpression":
            case "NewExpression":
            case "ObjectExpression":
            case "SequenceExpression":
            case "ThisExpression":
            case "UnaryExpression":
            case "UpdateExpression":
              return !0;
          }
          return !1;
        }
        function r(e) {
          if (null == e) return !1;
          switch (e.type) {
            case "DoWhileStatement":
            case "ForInStatement":
            case "ForStatement":
            case "WhileStatement":
              return !0;
          }
          return !1;
        }
        function n(e) {
          if (null == e) return !1;
          switch (e.type) {
            case "BlockStatement":
            case "BreakStatement":
            case "ContinueStatement":
            case "DebuggerStatement":
            case "DoWhileStatement":
            case "EmptyStatement":
            case "ExpressionStatement":
            case "ForInStatement":
            case "ForStatement":
            case "IfStatement":
            case "LabeledStatement":
            case "ReturnStatement":
            case "SwitchStatement":
            case "ThrowStatement":
            case "TryStatement":
            case "VariableDeclaration":
            case "WhileStatement":
            case "WithStatement":
              return !0;
          }
          return !1;
        }
        function i(e) {
          return n(e) || (null != e && "FunctionDeclaration" === e.type);
        }
        function s(e) {
          switch (e.type) {
            case "IfStatement":
              return null != e.alternate ? e.alternate : e.consequent;
            case "LabeledStatement":
            case "ForStatement":
            case "ForInStatement":
            case "WhileStatement":
            case "WithStatement":
              return e.body;
          }
          return null;
        }
        function a(e) {
          var t;
          if ("IfStatement" !== e.type) return !1;
          if (null == e.alternate) return !1;
          t = e.consequent;
          do {
            if ("IfStatement" === t.type && null == t.alternate) return !0;
            t = s(t);
          } while (t);
          return !1;
        }
        e.exports = {
          isExpression: t,
          isStatement: n,
          isIterationStatement: r,
          isSourceElement: i,
          isProblematicIfStatement: a,
          trailingStatement: s,
        };
      })();
    },
    function (e, t, r) {
      !(function () {
        "use strict";
        function t(e) {
          switch (e) {
            case "implements":
            case "interface":
            case "package":
            case "private":
            case "protected":
            case "public":
            case "static":
            case "let":
              return !0;
            default:
              return !1;
          }
        }
        function n(e, t) {
          return !(!t && "yield" === e) && i(e, t);
        }
        function i(e, r) {
          if (r && t(e)) return !0;
          switch (e.length) {
            case 2:
              return "if" === e || "in" === e || "do" === e;
            case 3:
              return "var" === e || "for" === e || "new" === e || "try" === e;
            case 4:
              return (
                "this" === e ||
                "else" === e ||
                "case" === e ||
                "void" === e ||
                "with" === e ||
                "enum" === e
              );
            case 5:
              return (
                "while" === e ||
                "break" === e ||
                "catch" === e ||
                "throw" === e ||
                "const" === e ||
                "yield" === e ||
                "class" === e ||
                "super" === e
              );
            case 6:
              return (
                "return" === e ||
                "typeof" === e ||
                "delete" === e ||
                "switch" === e ||
                "export" === e ||
                "import" === e
              );
            case 7:
              return "default" === e || "finally" === e || "extends" === e;
            case 8:
              return "function" === e || "continue" === e || "debugger" === e;
            case 10:
              return "instanceof" === e;
            default:
              return !1;
          }
        }
        function s(e, t) {
          return "null" === e || "true" === e || "false" === e || n(e, t);
        }
        function a(e, t) {
          return "null" === e || "true" === e || "false" === e || i(e, t);
        }
        function o(e) {
          return "eval" === e || "arguments" === e;
        }
        function u(e) {
          var t, r, n;
          if (0 === e.length) return !1;
          if (((n = e.charCodeAt(0)), !h.isIdentifierStartES5(n))) return !1;
          for (t = 1, r = e.length; t < r; ++t)
            if (((n = e.charCodeAt(t)), !h.isIdentifierPartES5(n))) return !1;
          return !0;
        }
        function l(e, t) {
          return 1024 * (e - 55296) + (t - 56320) + 65536;
        }
        function c(e) {
          var t, r, n, i, s;
          if (0 === e.length) return !1;
          for (s = h.isIdentifierStartES6, t = 0, r = e.length; t < r; ++t) {
            if (((n = e.charCodeAt(t)), 55296 <= n && n <= 56319)) {
              if ((++t, t >= r)) return !1;
              if (((i = e.charCodeAt(t)), !(56320 <= i && i <= 57343)))
                return !1;
              n = l(n, i);
            }
            if (!s(n)) return !1;
            s = h.isIdentifierPartES6;
          }
          return !0;
        }
        function f(e, t) {
          return u(e) && !s(e, t);
        }
        function p(e, t) {
          return c(e) && !a(e, t);
        }
        var h = r(174);
        e.exports = {
          isKeywordES5: n,
          isKeywordES6: i,
          isReservedWordES5: s,
          isReservedWordES6: a,
          isRestrictedWord: o,
          isIdentifierNameES5: u,
          isIdentifierNameES6: c,
          isIdentifierES5: f,
          isIdentifierES6: p,
        };
      })();
    },
    function (e, t, r) {
      "use strict";
      var n = r(146),
        i = new RegExp(n().source);
      e.exports = i.test.bind(i);
    },
    function (e, t) {
      (t.read = function (e, t, r, n, i) {
        var s,
          a,
          o = 8 * i - n - 1,
          u = (1 << o) - 1,
          l = u >> 1,
          c = -7,
          f = r ? i - 1 : 0,
          p = r ? -1 : 1,
          h = e[t + f];
        for (
          f += p, s = h & ((1 << -c) - 1), h >>= -c, c += o;
          c > 0;
          s = 256 * s + e[t + f], f += p, c -= 8
        );
        for (
          a = s & ((1 << -c) - 1), s >>= -c, c += n;
          c > 0;
          a = 256 * a + e[t + f], f += p, c -= 8
        );
        if (0 === s) s = 1 - l;
        else {
          if (s === u) return a ? NaN : (h ? -1 : 1) * (1 / 0);
          (a += Math.pow(2, n)), (s -= l);
        }
        return (h ? -1 : 1) * a * Math.pow(2, s - n);
      }),
        (t.write = function (e, t, r, n, i, s) {
          var a,
            o,
            u,
            l = 8 * s - i - 1,
            c = (1 << l) - 1,
            f = c >> 1,
            p = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            h = n ? 0 : s - 1,
            d = n ? 1 : -1,
            m = t < 0 || (0 === t && 1 / t < 0) ? 1 : 0;
          for (
            t = Math.abs(t),
              isNaN(t) || t === 1 / 0
                ? ((o = isNaN(t) ? 1 : 0), (a = c))
                : ((a = Math.floor(Math.log(t) / Math.LN2)),
                  t * (u = Math.pow(2, -a)) < 1 && (a--, (u *= 2)),
                  (t += a + f >= 1 ? p / u : p * Math.pow(2, 1 - f)),
                  t * u >= 2 && (a++, (u /= 2)),
                  a + f >= c
                    ? ((o = 0), (a = c))
                    : a + f >= 1
                    ? ((o = (t * u - 1) * Math.pow(2, i)), (a += f))
                    : ((o = t * Math.pow(2, f - 1) * Math.pow(2, i)), (a = 0)));
            i >= 8;
            e[r + h] = 255 & o, h += d, o /= 256, i -= 8
          );
          for (
            a = (a << i) | o, l += i;
            l > 0;
            e[r + h] = 255 & a, h += d, a /= 256, l -= 8
          );
          e[r + h - d] |= 128 * m;
        });
    },
    function (e, t, r) {
      "use strict";
      var n = function (e, t, r, n, i, s, a, o) {
        if (!e) {
          var u;
          if (void 0 === t)
            u = new Error(
              "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
            );
          else {
            var l = [r, n, i, s, a, o],
              c = 0;
            (u = new Error(
              t.replace(/%s/g, function () {
                return l[c++];
              })
            )),
              (u.name = "Invariant Violation");
          }
          throw ((u.framesToPop = 1), u);
        }
      };
      e.exports = n;
    },
    function (e, t, r) {
      "use strict";
      var n = r(539);
      e.exports =
        Number.isFinite ||
        function (e) {
          return !(
            "number" != typeof e ||
            n(e) ||
            e === 1 / 0 ||
            e === -(1 / 0)
          );
        };
    },
    function (e, t) {
      (e.exports = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyu]{1,5}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]{1,6}\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g),
        (e.exports.matchToToken = function (e) {
          var t = { type: "invalid", value: e[0] };
          return (
            e[1]
              ? ((t.type = "string"), (t.closed = !(!e[3] && !e[4])))
              : e[5]
              ? (t.type = "comment")
              : e[6]
              ? ((t.type = "comment"), (t.closed = !!e[7]))
              : e[8]
              ? (t.type = "regex")
              : e[9]
              ? (t.type = "number")
              : e[10]
              ? (t.type = "name")
              : e[11]
              ? (t.type = "punctuator")
              : e[12] && (t.type = "whitespace"),
            t
          );
        });
    },
    function (e, t, r) {
      var n;
      (function (e, i) {
        !(function (s) {
          var a = "object" == typeof t && t,
            o =
              ("object" == typeof e && e && e.exports == a && e,
              "object" == typeof i && i);
          (o.global !== o && o.window !== o) || (s = o);
          var u = {},
            l = u.hasOwnProperty,
            c = function (e, t) {
              var r;
              for (r in e) l.call(e, r) && t(r, e[r]);
            },
            f = function (e, t) {
              return t
                ? (c(t, function (t, r) {
                    e[t] = r;
                  }),
                  e)
                : e;
            },
            p = function (e, t) {
              for (var r = e.length, n = -1; ++n < r; ) t(e[n]);
            },
            h = u.toString,
            d = function (e) {
              return "[object Array]" == h.call(e);
            },
            m = function (e) {
              return "[object Object]" == h.call(e);
            },
            v = function (e) {
              return "string" == typeof e || "[object String]" == h.call(e);
            },
            y = function (e) {
              return "number" == typeof e || "[object Number]" == h.call(e);
            },
            g = function (e) {
              return "function" == typeof e || "[object Function]" == h.call(e);
            },
            b = function (e) {
              return "[object Map]" == h.call(e);
            },
            E = function (e) {
              return "[object Set]" == h.call(e);
            },
            x = {
              '"': '\\"',
              "'": "\\'",
              "\\": "\\\\",
              "\b": "\\b",
              "\f": "\\f",
              "\n": "\\n",
              "\r": "\\r",
              "\t": "\\t",
            },
            A = /["'\\\b\f\n\r\t]/,
            D = /[0-9]/,
            C = /[ !#-&\(-\[\]-~]/,
            S = function (e, t) {
              var r = {
                  escapeEverything: !1,
                  escapeEtago: !1,
                  quotes: "single",
                  wrap: !1,
                  es6: !1,
                  json: !1,
                  compact: !0,
                  lowercaseHex: !1,
                  numbers: "decimal",
                  indent: "\t",
                  __indent__: "",
                  __inline1__: !1,
                  __inline2__: !1,
                },
                n = t && t.json;
              n && ((r.quotes = "double"), (r.wrap = !0)),
                (t = f(r, t)),
                "single" != t.quotes &&
                  "double" != t.quotes &&
                  (t.quotes = "single");
              var i,
                s = "double" == t.quotes ? '"' : "'",
                a = t.compact,
                o = t.indent,
                u = t.lowercaseHex,
                l = "",
                h = t.__inline1__,
                _ = t.__inline2__,
                w = a ? "" : "\n",
                F = !0,
                k = "binary" == t.numbers,
                P = "octal" == t.numbers,
                T = "decimal" == t.numbers,
                O = "hexadecimal" == t.numbers;
              if ((n && e && g(e.toJSON) && (e = e.toJSON()), !v(e))) {
                if (b(e))
                  return 0 == e.size
                    ? "new Map()"
                    : (a || (t.__inline1__ = !0),
                      "new Map(" + S(Array.from(e), t) + ")");
                if (E(e))
                  return 0 == e.size
                    ? "new Set()"
                    : "new Set(" + S(Array.from(e), t) + ")";
                if (d(e))
                  return (
                    (i = []),
                    (t.wrap = !0),
                    h
                      ? ((t.__inline1__ = !1), (t.__inline2__ = !0))
                      : ((l = t.__indent__), (o += l), (t.__indent__ = o)),
                    p(e, function (e) {
                      (F = !1),
                        _ && (t.__inline2__ = !1),
                        i.push((a || _ ? "" : o) + S(e, t));
                    }),
                    F
                      ? "[]"
                      : _
                      ? "[" + i.join(", ") + "]"
                      : "[" + w + i.join("," + w) + w + (a ? "" : l) + "]"
                  );
                if (!y(e))
                  return m(e)
                    ? ((i = []),
                      (t.wrap = !0),
                      (l = t.__indent__),
                      (o += l),
                      (t.__indent__ = o),
                      c(e, function (e, r) {
                        (F = !1),
                          i.push(
                            (a ? "" : o) +
                              S(e, t) +
                              ":" +
                              (a ? "" : " ") +
                              S(r, t)
                          );
                      }),
                      F
                        ? "{}"
                        : "{" + w + i.join("," + w) + w + (a ? "" : l) + "}")
                    : n
                    ? JSON.stringify(e) || "null"
                    : String(e);
                if (n) return JSON.stringify(e);
                if (T) return String(e);
                if (O) {
                  var B = e.toString(16);
                  return u || (B = B.toUpperCase()), "0x" + B;
                }
                if (k) return "0b" + e.toString(2);
                if (P) return "0o" + e.toString(8);
              }
              var I,
                N,
                M,
                R = e,
                L = -1,
                j = R.length;
              for (i = ""; ++L < j; ) {
                var V = R.charAt(L);
                if (
                  t.es6 &&
                  ((I = R.charCodeAt(L)),
                  I >= 55296 &&
                    I <= 56319 &&
                    j > L + 1 &&
                    ((N = R.charCodeAt(L + 1)), N >= 56320 && N <= 57343))
                ) {
                  M = 1024 * (I - 55296) + N - 56320 + 65536;
                  var U = M.toString(16);
                  u || (U = U.toUpperCase()), (i += "\\u{" + U + "}"), L++;
                } else {
                  if (!t.escapeEverything) {
                    if (C.test(V)) {
                      i += V;
                      continue;
                    }
                    if ('"' == V) {
                      i += s == V ? '\\"' : V;
                      continue;
                    }
                    if ("'" == V) {
                      i += s == V ? "\\'" : V;
                      continue;
                    }
                  }
                  if ("\0" != V || n || D.test(R.charAt(L + 1)))
                    if (A.test(V)) i += x[V];
                    else {
                      var G = V.charCodeAt(0),
                        U = G.toString(16);
                      u || (U = U.toUpperCase());
                      var W = U.length > 2 || n,
                        Y =
                          "\\" +
                          (W ? "u" : "x") +
                          ("0000" + U).slice(W ? -4 : -2);
                      i += Y;
                    }
                  else i += "\\0";
                }
              }
              return (
                t.wrap && (i = s + i + s),
                t.escapeEtago ? i.replace(/<\/(script|style)/gi, "<\\/$1") : i
              );
            };
          (S.version = "1.3.0"),
            (n = function () {
              return S;
            }.call(t, r, t, e)),
            !(void 0 !== n && (e.exports = n));
        })(this);
      }.call(
        t,
        r(63)(e),
        (function () {
          return this;
        })()
      ));
    },
    function (e, t) {
      e.exports = {
        name: "babel-core",
        version: "6.20.0",
        description: "Babel compiler core.",
        author: "Sebastian McKenzie <sebmck@gmail.com>",
        homepage: "https://babeljs.io/",
        license: "MIT",
        repository:
          "https://github.com/babel/babel/tree/master/packages/babel-core",
        keywords: [
          "6to5",
          "babel",
          "classes",
          "const",
          "es6",
          "harmony",
          "let",
          "modules",
          "transpile",
          "transpiler",
          "var",
        ],
        scripts: { bench: "make bench", test: "make test" },
        dependencies: {
          "babel-code-frame": "^6.20.0",
          "babel-generator": "^6.20.0",
          "babel-helpers": "^6.16.0",
          "babel-messages": "^6.8.0",
          "babel-template": "^6.16.0",
          "babel-runtime": "^6.20.0",
          "babel-register": "^6.18.0",
          "babel-traverse": "^6.20.0",
          "babel-types": "^6.20.0",
          babylon: "^6.11.0",
          "convert-source-map": "^1.1.0",
          debug: "^2.1.1",
          json5: "^0.5.0",
          lodash: "^4.2.0",
          minimatch: "^3.0.2",
          "path-is-absolute": "^1.0.0",
          private: "^0.1.6",
          slash: "^1.0.0",
          "source-map": "^0.5.0",
        },
        devDependencies: {
          "babel-helper-fixtures": "^6.20.0",
          "babel-helper-transform-fixture-test-runner": "^6.20.0",
          "babel-polyfill": "^6.20.0",
        },
      };
    },
    function (e, t) {
      e.exports = {
        builtin: {
          Array: !1,
          ArrayBuffer: !1,
          Boolean: !1,
          constructor: !1,
          DataView: !1,
          Date: !1,
          decodeURI: !1,
          decodeURIComponent: !1,
          encodeURI: !1,
          encodeURIComponent: !1,
          Error: !1,
          escape: !1,
          eval: !1,
          EvalError: !1,
          Float32Array: !1,
          Float64Array: !1,
          Function: !1,
          hasOwnProperty: !1,
          Infinity: !1,
          Int16Array: !1,
          Int32Array: !1,
          Int8Array: !1,
          isFinite: !1,
          isNaN: !1,
          isPrototypeOf: !1,
          JSON: !1,
          Map: !1,
          Math: !1,
          NaN: !1,
          Number: !1,
          Object: !1,
          parseFloat: !1,
          parseInt: !1,
          Promise: !1,
          propertyIsEnumerable: !1,
          Proxy: !1,
          RangeError: !1,
          ReferenceError: !1,
          Reflect: !1,
          RegExp: !1,
          Set: !1,
          String: !1,
          Symbol: !1,
          SyntaxError: !1,
          System: !1,
          toLocaleString: !1,
          toString: !1,
          TypeError: !1,
          Uint16Array: !1,
          Uint32Array: !1,
          Uint8Array: !1,
          Uint8ClampedArray: !1,
          undefined: !1,
          unescape: !1,
          URIError: !1,
          valueOf: !1,
          WeakMap: !1,
          WeakSet: !1,
        },
        es5: {
          Array: !1,
          Boolean: !1,
          constructor: !1,
          Date: !1,
          decodeURI: !1,
          decodeURIComponent: !1,
          encodeURI: !1,
          encodeURIComponent: !1,
          Error: !1,
          escape: !1,
          eval: !1,
          EvalError: !1,
          Function: !1,
          hasOwnProperty: !1,
          Infinity: !1,
          isFinite: !1,
          isNaN: !1,
          isPrototypeOf: !1,
          JSON: !1,
          Math: !1,
          NaN: !1,
          Number: !1,
          Object: !1,
          parseFloat: !1,
          parseInt: !1,
          propertyIsEnumerable: !1,
          RangeError: !1,
          ReferenceError: !1,
          RegExp: !1,
          String: !1,
          SyntaxError: !1,
          toLocaleString: !1,
          toString: !1,
          TypeError: !1,
          undefined: !1,
          unescape: !1,
          URIError: !1,
          valueOf: !1,
        },
        es6: {
          Array: !1,
          ArrayBuffer: !1,
          Boolean: !1,
          constructor: !1,
          DataView: !1,
          Date: !1,
          decodeURI: !1,
          decodeURIComponent: !1,
          encodeURI: !1,
          encodeURIComponent: !1,
          Error: !1,
          escape: !1,
          eval: !1,
          EvalError: !1,
          Float32Array: !1,
          Float64Array: !1,
          Function: !1,
          hasOwnProperty: !1,
          Infinity: !1,
          Int16Array: !1,
          Int32Array: !1,
          Int8Array: !1,
          isFinite: !1,
          isNaN: !1,
          isPrototypeOf: !1,
          JSON: !1,
          Map: !1,
          Math: !1,
          NaN: !1,
          Number: !1,
          Object: !1,
          parseFloat: !1,
          parseInt: !1,
          Promise: !1,
          propertyIsEnumerable: !1,
          Proxy: !1,
          RangeError: !1,
          ReferenceError: !1,
          Reflect: !1,
          RegExp: !1,
          Set: !1,
          String: !1,
          Symbol: !1,
          SyntaxError: !1,
          System: !1,
          toLocaleString: !1,
          toString: !1,
          TypeError: !1,
          Uint16Array: !1,
          Uint32Array: !1,
          Uint8Array: !1,
          Uint8ClampedArray: !1,
          undefined: !1,
          unescape: !1,
          URIError: !1,
          valueOf: !1,
          WeakMap: !1,
          WeakSet: !1,
        },
        browser: {
          addEventListener: !1,
          alert: !1,
          AnalyserNode: !1,
          Animation: !1,
          AnimationEffectReadOnly: !1,
          AnimationEffectTiming: !1,
          AnimationEffectTimingReadOnly: !1,
          AnimationEvent: !1,
          AnimationPlaybackEvent: !1,
          AnimationTimeline: !1,
          applicationCache: !1,
          ApplicationCache: !1,
          ApplicationCacheErrorEvent: !1,
          atob: !1,
          Attr: !1,
          Audio: !1,
          AudioBuffer: !1,
          AudioBufferSourceNode: !1,
          AudioContext: !1,
          AudioDestinationNode: !1,
          AudioListener: !1,
          AudioNode: !1,
          AudioParam: !1,
          AudioProcessingEvent: !1,
          AutocompleteErrorEvent: !1,
          BarProp: !1,
          BatteryManager: !1,
          BeforeUnloadEvent: !1,
          BiquadFilterNode: !1,
          Blob: !1,
          blur: !1,
          btoa: !1,
          Cache: !1,
          caches: !1,
          CacheStorage: !1,
          cancelAnimationFrame: !1,
          CanvasGradient: !1,
          CanvasPattern: !1,
          CanvasRenderingContext2D: !1,
          CDATASection: !1,
          ChannelMergerNode: !1,
          ChannelSplitterNode: !1,
          CharacterData: !1,
          clearInterval: !1,
          clearTimeout: !1,
          clientInformation: !1,
          ClientRect: !1,
          ClientRectList: !1,
          ClipboardEvent: !1,
          close: !1,
          closed: !1,
          CloseEvent: !1,
          Comment: !1,
          CompositionEvent: !1,
          confirm: !1,
          console: !1,
          ConvolverNode: !1,
          Credential: !1,
          CredentialsContainer: !1,
          crypto: !1,
          Crypto: !1,
          CryptoKey: !1,
          CSS: !1,
          CSSAnimation: !1,
          CSSFontFaceRule: !1,
          CSSImportRule: !1,
          CSSKeyframeRule: !1,
          CSSKeyframesRule: !1,
          CSSMediaRule: !1,
          CSSPageRule: !1,
          CSSRule: !1,
          CSSRuleList: !1,
          CSSStyleDeclaration: !1,
          CSSStyleRule: !1,
          CSSStyleSheet: !1,
          CSSSupportsRule: !1,
          CSSTransition: !1,
          CSSUnknownRule: !1,
          CSSViewportRule: !1,
          customElements: !1,
          CustomEvent: !1,
          DataTransfer: !1,
          DataTransferItem: !1,
          DataTransferItemList: !1,
          Debug: !1,
          defaultStatus: !1,
          defaultstatus: !1,
          DelayNode: !1,
          DeviceMotionEvent: !1,
          DeviceOrientationEvent: !1,
          devicePixelRatio: !1,
          dispatchEvent: !1,
          document: !1,
          Document: !1,
          DocumentFragment: !1,
          DocumentTimeline: !1,
          DocumentType: !1,
          DOMError: !1,
          DOMException: !1,
          DOMImplementation: !1,
          DOMParser: !1,
          DOMSettableTokenList: !1,
          DOMStringList: !1,
          DOMStringMap: !1,
          DOMTokenList: !1,
          DragEvent: !1,
          DynamicsCompressorNode: !1,
          Element: !1,
          ElementTimeControl: !1,
          ErrorEvent: !1,
          event: !1,
          Event: !1,
          EventSource: !1,
          EventTarget: !1,
          external: !1,
          FederatedCredential: !1,
          fetch: !1,
          File: !1,
          FileError: !1,
          FileList: !1,
          FileReader: !1,
          find: !1,
          focus: !1,
          FocusEvent: !1,
          FontFace: !1,
          FormData: !1,
          frameElement: !1,
          frames: !1,
          GainNode: !1,
          Gamepad: !1,
          GamepadButton: !1,
          GamepadEvent: !1,
          getComputedStyle: !1,
          getSelection: !1,
          HashChangeEvent: !1,
          Headers: !1,
          history: !1,
          History: !1,
          HTMLAllCollection: !1,
          HTMLAnchorElement: !1,
          HTMLAppletElement: !1,
          HTMLAreaElement: !1,
          HTMLAudioElement: !1,
          HTMLBaseElement: !1,
          HTMLBlockquoteElement: !1,
          HTMLBodyElement: !1,
          HTMLBRElement: !1,
          HTMLButtonElement: !1,
          HTMLCanvasElement: !1,
          HTMLCollection: !1,
          HTMLContentElement: !1,
          HTMLDataListElement: !1,
          HTMLDetailsElement: !1,
          HTMLDialogElement: !1,
          HTMLDirectoryElement: !1,
          HTMLDivElement: !1,
          HTMLDListElement: !1,
          HTMLDocument: !1,
          HTMLElement: !1,
          HTMLEmbedElement: !1,
          HTMLFieldSetElement: !1,
          HTMLFontElement: !1,
          HTMLFormControlsCollection: !1,
          HTMLFormElement: !1,
          HTMLFrameElement: !1,
          HTMLFrameSetElement: !1,
          HTMLHeadElement: !1,
          HTMLHeadingElement: !1,
          HTMLHRElement: !1,
          HTMLHtmlElement: !1,
          HTMLIFrameElement: !1,
          HTMLImageElement: !1,
          HTMLInputElement: !1,
          HTMLIsIndexElement: !1,
          HTMLKeygenElement: !1,
          HTMLLabelElement: !1,
          HTMLLayerElement: !1,
          HTMLLegendElement: !1,
          HTMLLIElement: !1,
          HTMLLinkElement: !1,
          HTMLMapElement: !1,
          HTMLMarqueeElement: !1,
          HTMLMediaElement: !1,
          HTMLMenuElement: !1,
          HTMLMetaElement: !1,
          HTMLMeterElement: !1,
          HTMLModElement: !1,
          HTMLObjectElement: !1,
          HTMLOListElement: !1,
          HTMLOptGroupElement: !1,
          HTMLOptionElement: !1,
          HTMLOptionsCollection: !1,
          HTMLOutputElement: !1,
          HTMLParagraphElement: !1,
          HTMLParamElement: !1,
          HTMLPictureElement: !1,
          HTMLPreElement: !1,
          HTMLProgressElement: !1,
          HTMLQuoteElement: !1,
          HTMLScriptElement: !1,
          HTMLSelectElement: !1,
          HTMLShadowElement: !1,
          HTMLSourceElement: !1,
          HTMLSpanElement: !1,
          HTMLStyleElement: !1,
          HTMLTableCaptionElement: !1,
          HTMLTableCellElement: !1,
          HTMLTableColElement: !1,
          HTMLTableElement: !1,
          HTMLTableRowElement: !1,
          HTMLTableSectionElement: !1,
          HTMLTemplateElement: !1,
          HTMLTextAreaElement: !1,
          HTMLTitleElement: !1,
          HTMLTrackElement: !1,
          HTMLUListElement: !1,
          HTMLUnknownElement: !1,
          HTMLVideoElement: !1,
          IDBCursor: !1,
          IDBCursorWithValue: !1,
          IDBDatabase: !1,
          IDBEnvironment: !1,
          IDBFactory: !1,
          IDBIndex: !1,
          IDBKeyRange: !1,
          IDBObjectStore: !1,
          IDBOpenDBRequest: !1,
          IDBRequest: !1,
          IDBTransaction: !1,
          IDBVersionChangeEvent: !1,
          Image: !1,
          ImageBitmap: !1,
          ImageData: !1,
          indexedDB: !1,
          innerHeight: !1,
          innerWidth: !1,
          InputEvent: !1,
          InputMethodContext: !1,
          IntersectionObserver: !1,
          IntersectionObserverEntry: !1,
          Intl: !1,
          KeyboardEvent: !1,
          KeyframeEffect: !1,
          KeyframeEffectReadOnly: !1,
          length: !1,
          localStorage: !1,
          location: !1,
          Location: !1,
          locationbar: !1,
          matchMedia: !1,
          MediaElementAudioSourceNode: !1,
          MediaEncryptedEvent: !1,
          MediaError: !1,
          MediaKeyError: !1,
          MediaKeyEvent: !1,
          MediaKeyMessageEvent: !1,
          MediaKeys: !1,
          MediaKeySession: !1,
          MediaKeyStatusMap: !1,
          MediaKeySystemAccess: !1,
          MediaList: !1,
          MediaQueryList: !1,
          MediaQueryListEvent: !1,
          MediaSource: !1,
          MediaStream: !1,
          MediaStreamAudioDestinationNode: !1,
          MediaStreamAudioSourceNode: !1,
          MediaStreamEvent: !1,
          MediaStreamTrack: !1,
          menubar: !1,
          MessageChannel: !1,
          MessageEvent: !1,
          MessagePort: !1,
          MIDIAccess: !1,
          MIDIConnectionEvent: !1,
          MIDIInput: !1,
          MIDIInputMap: !1,
          MIDIMessageEvent: !1,
          MIDIOutput: !1,
          MIDIOutputMap: !1,
          MIDIPort: !1,
          MimeType: !1,
          MimeTypeArray: !1,
          MouseEvent: !1,
          moveBy: !1,
          moveTo: !1,
          MutationEvent: !1,
          MutationObserver: !1,
          MutationRecord: !1,
          name: !1,
          NamedNodeMap: !1,
          navigator: !1,
          Navigator: !1,
          Node: !1,
          NodeFilter: !1,
          NodeIterator: !1,
          NodeList: !1,
          Notification: !1,
          OfflineAudioCompletionEvent: !1,
          OfflineAudioContext: !1,
          offscreenBuffering: !1,
          onbeforeunload: !0,
          onblur: !0,
          onerror: !0,
          onfocus: !0,
          onload: !0,
          onresize: !0,
          onunload: !0,
          open: !1,
          openDatabase: !1,
          opener: !1,
          opera: !1,
          Option: !1,
          OscillatorNode: !1,
          outerHeight: !1,
          outerWidth: !1,
          PageTransitionEvent: !1,
          pageXOffset: !1,
          pageYOffset: !1,
          parent: !1,
          PasswordCredential: !1,
          Path2D: !1,
          performance: !1,
          Performance: !1,
          PerformanceEntry: !1,
          PerformanceMark: !1,
          PerformanceMeasure: !1,
          PerformanceNavigation: !1,
          PerformanceResourceTiming: !1,
          PerformanceTiming: !1,
          PeriodicWave: !1,
          Permissions: !1,
          PermissionStatus: !1,
          personalbar: !1,
          Plugin: !1,
          PluginArray: !1,
          PopStateEvent: !1,
          postMessage: !1,
          print: !1,
          ProcessingInstruction: !1,
          ProgressEvent: !1,
          PromiseRejectionEvent: !1,
          prompt: !1,
          PushManager: !1,
          PushSubscription: !1,
          RadioNodeList: !1,
          Range: !1,
          ReadableByteStream: !1,
          ReadableStream: !1,
          removeEventListener: !1,
          Request: !1,
          requestAnimationFrame: !1,
          requestIdleCallback: !1,
          resizeBy: !1,
          resizeTo: !1,
          Response: !1,
          RTCIceCandidate: !1,
          RTCSessionDescription: !1,
          RTCPeerConnection: !1,
          screen: !1,
          Screen: !1,
          screenLeft: !1,
          ScreenOrientation: !1,
          screenTop: !1,
          screenX: !1,
          screenY: !1,
          ScriptProcessorNode: !1,
          scroll: !1,
          scrollbars: !1,
          scrollBy: !1,
          scrollTo: !1,
          scrollX: !1,
          scrollY: !1,
          SecurityPolicyViolationEvent: !1,
          Selection: !1,
          self: !1,
          ServiceWorker: !1,
          ServiceWorkerContainer: !1,
          ServiceWorkerRegistration: !1,
          sessionStorage: !1,
          setInterval: !1,
          setTimeout: !1,
          ShadowRoot: !1,
          SharedKeyframeList: !1,
          SharedWorker: !1,
          showModalDialog: !1,
          SiteBoundCredential: !1,
          speechSynthesis: !1,
          SpeechSynthesisEvent: !1,
          SpeechSynthesisUtterance: !1,
          status: !1,
          statusbar: !1,
          stop: !1,
          Storage: !1,
          StorageEvent: !1,
          styleMedia: !1,
          StyleSheet: !1,
          StyleSheetList: !1,
          SubtleCrypto: !1,
          SVGAElement: !1,
          SVGAltGlyphDefElement: !1,
          SVGAltGlyphElement: !1,
          SVGAltGlyphItemElement: !1,
          SVGAngle: !1,
          SVGAnimateColorElement: !1,
          SVGAnimatedAngle: !1,
          SVGAnimatedBoolean: !1,
          SVGAnimatedEnumeration: !1,
          SVGAnimatedInteger: !1,
          SVGAnimatedLength: !1,
          SVGAnimatedLengthList: !1,
          SVGAnimatedNumber: !1,
          SVGAnimatedNumberList: !1,
          SVGAnimatedPathData: !1,
          SVGAnimatedPoints: !1,
          SVGAnimatedPreserveAspectRatio: !1,
          SVGAnimatedRect: !1,
          SVGAnimatedString: !1,
          SVGAnimatedTransformList: !1,
          SVGAnimateElement: !1,
          SVGAnimateMotionElement: !1,
          SVGAnimateTransformElement: !1,
          SVGAnimationElement: !1,
          SVGCircleElement: !1,
          SVGClipPathElement: !1,
          SVGColor: !1,
          SVGColorProfileElement: !1,
          SVGColorProfileRule: !1,
          SVGComponentTransferFunctionElement: !1,
          SVGCSSRule: !1,
          SVGCursorElement: !1,
          SVGDefsElement: !1,
          SVGDescElement: !1,
          SVGDiscardElement: !1,
          SVGDocument: !1,
          SVGElement: !1,
          SVGElementInstance: !1,
          SVGElementInstanceList: !1,
          SVGEllipseElement: !1,
          SVGEvent: !1,
          SVGExternalResourcesRequired: !1,
          SVGFEBlendElement: !1,
          SVGFEColorMatrixElement: !1,
          SVGFEComponentTransferElement: !1,
          SVGFECompositeElement: !1,
          SVGFEConvolveMatrixElement: !1,
          SVGFEDiffuseLightingElement: !1,
          SVGFEDisplacementMapElement: !1,
          SVGFEDistantLightElement: !1,
          SVGFEDropShadowElement: !1,
          SVGFEFloodElement: !1,
          SVGFEFuncAElement: !1,
          SVGFEFuncBElement: !1,
          SVGFEFuncGElement: !1,
          SVGFEFuncRElement: !1,
          SVGFEGaussianBlurElement: !1,
          SVGFEImageElement: !1,
          SVGFEMergeElement: !1,
          SVGFEMergeNodeElement: !1,
          SVGFEMorphologyElement: !1,
          SVGFEOffsetElement: !1,
          SVGFEPointLightElement: !1,
          SVGFESpecularLightingElement: !1,
          SVGFESpotLightElement: !1,
          SVGFETileElement: !1,
          SVGFETurbulenceElement: !1,
          SVGFilterElement: !1,
          SVGFilterPrimitiveStandardAttributes: !1,
          SVGFitToViewBox: !1,
          SVGFontElement: !1,
          SVGFontFaceElement: !1,
          SVGFontFaceFormatElement: !1,
          SVGFontFaceNameElement: !1,
          SVGFontFaceSrcElement: !1,
          SVGFontFaceUriElement: !1,
          SVGForeignObjectElement: !1,
          SVGGElement: !1,
          SVGGeometryElement: !1,
          SVGGlyphElement: !1,
          SVGGlyphRefElement: !1,
          SVGGradientElement: !1,
          SVGGraphicsElement: !1,
          SVGHKernElement: !1,
          SVGICCColor: !1,
          SVGImageElement: !1,
          SVGLangSpace: !1,
          SVGLength: !1,
          SVGLengthList: !1,
          SVGLinearGradientElement: !1,
          SVGLineElement: !1,
          SVGLocatable: !1,
          SVGMarkerElement: !1,
          SVGMaskElement: !1,
          SVGMatrix: !1,
          SVGMetadataElement: !1,
          SVGMissingGlyphElement: !1,
          SVGMPathElement: !1,
          SVGNumber: !1,
          SVGNumberList: !1,
          SVGPaint: !1,
          SVGPathElement: !1,
          SVGPathSeg: !1,
          SVGPathSegArcAbs: !1,
          SVGPathSegArcRel: !1,
          SVGPathSegClosePath: !1,
          SVGPathSegCurvetoCubicAbs: !1,
          SVGPathSegCurvetoCubicRel: !1,
          SVGPathSegCurvetoCubicSmoothAbs: !1,
          SVGPathSegCurvetoCubicSmoothRel: !1,
          SVGPathSegCurvetoQuadraticAbs: !1,
          SVGPathSegCurvetoQuadraticRel: !1,
          SVGPathSegCurvetoQuadraticSmoothAbs: !1,
          SVGPathSegCurvetoQuadraticSmoothRel: !1,
          SVGPathSegLinetoAbs: !1,
          SVGPathSegLinetoHorizontalAbs: !1,
          SVGPathSegLinetoHorizontalRel: !1,
          SVGPathSegLinetoRel: !1,
          SVGPathSegLinetoVerticalAbs: !1,
          SVGPathSegLinetoVerticalRel: !1,
          SVGPathSegList: !1,
          SVGPathSegMovetoAbs: !1,
          SVGPathSegMovetoRel: !1,
          SVGPatternElement: !1,
          SVGPoint: !1,
          SVGPointList: !1,
          SVGPolygonElement: !1,
          SVGPolylineElement: !1,
          SVGPreserveAspectRatio: !1,
          SVGRadialGradientElement: !1,
          SVGRect: !1,
          SVGRectElement: !1,
          SVGRenderingIntent: !1,
          SVGScriptElement: !1,
          SVGSetElement: !1,
          SVGStopElement: !1,
          SVGStringList: !1,
          SVGStylable: !1,
          SVGStyleElement: !1,
          SVGSVGElement: !1,
          SVGSwitchElement: !1,
          SVGSymbolElement: !1,
          SVGTests: !1,
          SVGTextContentElement: !1,
          SVGTextElement: !1,
          SVGTextPathElement: !1,
          SVGTextPositioningElement: !1,
          SVGTitleElement: !1,
          SVGTransform: !1,
          SVGTransformable: !1,
          SVGTransformList: !1,
          SVGTRefElement: !1,
          SVGTSpanElement: !1,
          SVGUnitTypes: !1,
          SVGURIReference: !1,
          SVGUseElement: !1,
          SVGViewElement: !1,
          SVGViewSpec: !1,
          SVGVKernElement: !1,
          SVGZoomAndPan: !1,
          SVGZoomEvent: !1,
          Text: !1,
          TextDecoder: !1,
          TextEncoder: !1,
          TextEvent: !1,
          TextMetrics: !1,
          TextTrack: !1,
          TextTrackCue: !1,
          TextTrackCueList: !1,
          TextTrackList: !1,
          TimeEvent: !1,
          TimeRanges: !1,
          toolbar: !1,
          top: !1,
          Touch: !1,
          TouchEvent: !1,
          TouchList: !1,
          TrackEvent: !1,
          TransitionEvent: !1,
          TreeWalker: !1,
          UIEvent: !1,
          URL: !1,
          URLSearchParams: !1,
          ValidityState: !1,
          VTTCue: !1,
          WaveShaperNode: !1,
          WebGLActiveInfo: !1,
          WebGLBuffer: !1,
          WebGLContextEvent: !1,
          WebGLFramebuffer: !1,
          WebGLProgram: !1,
          WebGLRenderbuffer: !1,
          WebGLRenderingContext: !1,
          WebGLShader: !1,
          WebGLShaderPrecisionFormat: !1,
          WebGLTexture: !1,
          WebGLUniformLocation: !1,
          WebSocket: !1,
          WheelEvent: !1,
          window: !1,
          Window: !1,
          Worker: !1,
          XDomainRequest: !1,
          XMLDocument: !1,
          XMLHttpRequest: !1,
          XMLHttpRequestEventTarget: !1,
          XMLHttpRequestProgressEvent: !1,
          XMLHttpRequestUpload: !1,
          XMLSerializer: !1,
          XPathEvaluator: !1,
          XPathException: !1,
          XPathExpression: !1,
          XPathNamespace: !1,
          XPathNSResolver: !1,
          XPathResult: !1,
          XSLTProcessor: !1,
        },
        worker: {
          applicationCache: !1,
          atob: !1,
          Blob: !1,
          BroadcastChannel: !1,
          btoa: !1,
          Cache: !1,
          caches: !1,
          clearInterval: !1,
          clearTimeout: !1,
          close: !0,
          console: !1,
          fetch: !1,
          FileReaderSync: !1,
          FormData: !1,
          Headers: !1,
          IDBCursor: !1,
          IDBCursorWithValue: !1,
          IDBDatabase: !1,
          IDBFactory: !1,
          IDBIndex: !1,
          IDBKeyRange: !1,
          IDBObjectStore: !1,
          IDBOpenDBRequest: !1,
          IDBRequest: !1,
          IDBTransaction: !1,
          IDBVersionChangeEvent: !1,
          ImageData: !1,
          importScripts: !0,
          indexedDB: !1,
          location: !1,
          MessageChannel: !1,
          MessagePort: !1,
          name: !1,
          navigator: !1,
          Notification: !1,
          onclose: !0,
          onconnect: !0,
          onerror: !0,
          onlanguagechange: !0,
          onmessage: !0,
          onoffline: !0,
          ononline: !0,
          onrejectionhandled: !0,
          onunhandledrejection: !0,
          performance: !1,
          Performance: !1,
          PerformanceEntry: !1,
          PerformanceMark: !1,
          PerformanceMeasure: !1,
          PerformanceNavigation: !1,
          PerformanceResourceTiming: !1,
          PerformanceTiming: !1,
          postMessage: !0,
          Promise: !1,
          Request: !1,
          Response: !1,
          self: !0,
          ServiceWorkerRegistration: !1,
          setInterval: !1,
          setTimeout: !1,
          TextDecoder: !1,
          TextEncoder: !1,
          URL: !1,
          URLSearchParams: !1,
          WebSocket: !1,
          Worker: !1,
          XMLHttpRequest: !1,
        },
        node: {
          __dirname: !1,
          __filename: !1,
          arguments: !1,
          Buffer: !1,
          clearImmediate: !1,
          clearInterval: !1,
          clearTimeout: !1,
          console: !1,
          exports: !0,
          GLOBAL: !1,
          global: !1,
          Intl: !1,
          module: !1,
          process: !1,
          require: !1,
          root: !1,
          setImmediate: !1,
          setInterval: !1,
          setTimeout: !1,
        },
        commonjs: { exports: !0, module: !1, require: !1, global: !1 },
        amd: { define: !1, require: !1 },
        mocha: {
          after: !1,
          afterEach: !1,
          before: !1,
          beforeEach: !1,
          context: !1,
          describe: !1,
          it: !1,
          mocha: !1,
          run: !1,
          setup: !1,
          specify: !1,
          suite: !1,
          suiteSetup: !1,
          suiteTeardown: !1,
          teardown: !1,
          test: !1,
          xcontext: !1,
          xdescribe: !1,
          xit: !1,
          xspecify: !1,
        },
        jasmine: {
          afterAll: !1,
          afterEach: !1,
          beforeAll: !1,
          beforeEach: !1,
          describe: !1,
          expect: !1,
          fail: !1,
          fdescribe: !1,
          fit: !1,
          it: !1,
          jasmine: !1,
          pending: !1,
          runs: !1,
          spyOn: !1,
          waits: !1,
          waitsFor: !1,
          xdescribe: !1,
          xit: !1,
        },
        jest: {
          afterAll: !1,
          afterEach: !1,
          beforeAll: !1,
          beforeEach: !1,
          check: !1,
          describe: !1,
          expect: !1,
          gen: !1,
          it: !1,
          fit: !1,
          jest: !1,
          pit: !1,
          require: !1,
          test: !1,
          xdescribe: !1,
          xit: !1,
          xtest: !1,
        },
        qunit: {
          asyncTest: !1,
          deepEqual: !1,
          equal: !1,
          expect: !1,
          module: !1,
          notDeepEqual: !1,
          notEqual: !1,
          notOk: !1,
          notPropEqual: !1,
          notStrictEqual: !1,
          ok: !1,
          propEqual: !1,
          QUnit: !1,
          raises: !1,
          start: !1,
          stop: !1,
          strictEqual: !1,
          test: !1,
          throws: !1,
        },
        phantomjs: {
          console: !0,
          exports: !0,
          phantom: !0,
          require: !0,
          WebPage: !0,
        },
        couch: {
          emit: !1,
          exports: !1,
          getRow: !1,
          log: !1,
          module: !1,
          provides: !1,
          require: !1,
          respond: !1,
          send: !1,
          start: !1,
          sum: !1,
        },
        rhino: {
          defineClass: !1,
          deserialize: !1,
          gc: !1,
          help: !1,
          importClass: !1,
          importPackage: !1,
          java: !1,
          load: !1,
          loadClass: !1,
          Packages: !1,
          print: !1,
          quit: !1,
          readFile: !1,
          readUrl: !1,
          runCommand: !1,
          seal: !1,
          serialize: !1,
          spawn: !1,
          sync: !1,
          toint32: !1,
          version: !1,
        },
        nashorn: {
          __DIR__: !1,
          __FILE__: !1,
          __LINE__: !1,
          com: !1,
          edu: !1,
          exit: !1,
          Java: !1,
          java: !1,
          javafx: !1,
          JavaImporter: !1,
          javax: !1,
          JSAdapter: !1,
          load: !1,
          loadWithNewGlobal: !1,
          org: !1,
          Packages: !1,
          print: !1,
          quit: !1,
        },
        wsh: {
          ActiveXObject: !0,
          Enumerator: !0,
          GetObject: !0,
          ScriptEngine: !0,
          ScriptEngineBuildVersion: !0,
          ScriptEngineMajorVersion: !0,
          ScriptEngineMinorVersion: !0,
          VBArray: !0,
          WScript: !0,
          WSH: !0,
          XDomainRequest: !0,
        },
        jquery: { $: !1, jQuery: !1 },
        yui: { Y: !1, YUI: !1, YUI_config: !1 },
        shelljs: {
          cat: !1,
          cd: !1,
          chmod: !1,
          config: !1,
          cp: !1,
          dirs: !1,
          echo: !1,
          env: !1,
          error: !1,
          exec: !1,
          exit: !1,
          find: !1,
          grep: !1,
          ls: !1,
          ln: !1,
          mkdir: !1,
          mv: !1,
          popd: !1,
          pushd: !1,
          pwd: !1,
          rm: !1,
          sed: !1,
          set: !1,
          target: !1,
          tempdir: !1,
          test: !1,
          touch: !1,
          which: !1,
        },
        prototypejs: {
          $: !1,
          $$: !1,
          $A: !1,
          $break: !1,
          $continue: !1,
          $F: !1,
          $H: !1,
          $R: !1,
          $w: !1,
          Abstract: !1,
          Ajax: !1,
          Autocompleter: !1,
          Builder: !1,
          Class: !1,
          Control: !1,
          Draggable: !1,
          Draggables: !1,
          Droppables: !1,
          Effect: !1,
          Element: !1,
          Enumerable: !1,
          Event: !1,
          Field: !1,
          Form: !1,
          Hash: !1,
          Insertion: !1,
          ObjectRange: !1,
          PeriodicalExecuter: !1,
          Position: !1,
          Prototype: !1,
          Scriptaculous: !1,
          Selector: !1,
          Sortable: !1,
          SortableObserver: !1,
          Sound: !1,
          Template: !1,
          Toggle: !1,
          Try: !1,
        },
        meteor: {
          $: !1,
          _: !1,
          Accounts: !1,
          AccountsClient: !1,
          AccountsServer: !1,
          AccountsCommon: !1,
          App: !1,
          Assets: !1,
          Blaze: !1,
          check: !1,
          Cordova: !1,
          DDP: !1,
          DDPServer: !1,
          DDPRateLimiter: !1,
          Deps: !1,
          EJSON: !1,
          Email: !1,
          HTTP: !1,
          Log: !1,
          Match: !1,
          Meteor: !1,
          Mongo: !1,
          MongoInternals: !1,
          Npm: !1,
          Package: !1,
          Plugin: !1,
          process: !1,
          Random: !1,
          ReactiveDict: !1,
          ReactiveVar: !1,
          Router: !1,
          ServiceConfiguration: !1,
          Session: !1,
          share: !1,
          Spacebars: !1,
          Template: !1,
          Tinytest: !1,
          Tracker: !1,
          UI: !1,
          Utils: !1,
          WebApp: !1,
          WebAppInternals: !1,
        },
        mongo: {
          _isWindows: !1,
          _rand: !1,
          BulkWriteResult: !1,
          cat: !1,
          cd: !1,
          connect: !1,
          db: !1,
          getHostName: !1,
          getMemInfo: !1,
          hostname: !1,
          ISODate: !1,
          listFiles: !1,
          load: !1,
          ls: !1,
          md5sumFile: !1,
          mkdir: !1,
          Mongo: !1,
          NumberInt: !1,
          NumberLong: !1,
          ObjectId: !1,
          PlanCache: !1,
          print: !1,
          printjson: !1,
          pwd: !1,
          quit: !1,
          removeFile: !1,
          rs: !1,
          sh: !1,
          UUID: !1,
          version: !1,
          WriteResult: !1,
        },
        applescript: {
          $: !1,
          Application: !1,
          Automation: !1,
          console: !1,
          delay: !1,
          Library: !1,
          ObjC: !1,
          ObjectSpecifier: !1,
          Path: !1,
          Progress: !1,
          Ref: !1,
        },
        serviceworker: {
          caches: !1,
          Cache: !1,
          CacheStorage: !1,
          Client: !1,
          clients: !1,
          Clients: !1,
          ExtendableEvent: !1,
          ExtendableMessageEvent: !1,
          FetchEvent: !1,
          importScripts: !1,
          registration: !1,
          self: !1,
          ServiceWorker: !1,
          ServiceWorkerContainer: !1,
          ServiceWorkerGlobalScope: !1,
          ServiceWorkerMessageEvent: !1,
          ServiceWorkerRegistration: !1,
          skipWaiting: !1,
          WindowClient: !1,
        },
        atomtest: {
          advanceClock: !1,
          fakeClearInterval: !1,
          fakeClearTimeout: !1,
          fakeSetInterval: !1,
          fakeSetTimeout: !1,
          resetTimeouts: !1,
          waitsForPromise: !1,
        },
        embertest: {
          andThen: !1,
          click: !1,
          currentPath: !1,
          currentRouteName: !1,
          currentURL: !1,
          fillIn: !1,
          find: !1,
          findWithAssert: !1,
          keyEvent: !1,
          pauseTest: !1,
          triggerEvent: !1,
          visit: !1,
        },
        protractor: {
          $: !1,
          $$: !1,
          browser: !1,
          By: !1,
          by: !1,
          DartObject: !1,
          element: !1,
          protractor: !1,
        },
        "shared-node-browser": {
          clearInterval: !1,
          clearTimeout: !1,
          console: !1,
          setInterval: !1,
          setTimeout: !1,
        },
        webextensions: { browser: !1, chrome: !1, opr: !1 },
        greasemonkey: {
          GM_addStyle: !1,
          GM_deleteValue: !1,
          GM_getResourceText: !1,
          GM_getResourceURL: !1,
          GM_getValue: !1,
          GM_info: !1,
          GM_listValues: !1,
          GM_log: !1,
          GM_openInTab: !1,
          GM_registerMenuCommand: !1,
          GM_setClipboard: !1,
          GM_setValue: !1,
          GM_xmlhttpRequest: !1,
          unsafeWindow: !1,
        },
      };
    },
    function (e, t, r) {
      var n = t;
      (n.parse = (function () {
        "use strict";
        var e,
          t,
          r,
          n,
          i,
          s,
          a = {
            "'": "'",
            '"': '"',
            "\\": "\\",
            "/": "/",
            "\n": "",
            b: "\b",
            f: "\f",
            n: "\n",
            r: "\r",
            t: "\t",
          },
          o = [" ", "\t", "\r", "\n", "\v", "\f", "Â ", "\ufeff"],
          u = function (e) {
            return "" === e ? "EOF" : "'" + e + "'";
          },
          l = function (n) {
            var s = new SyntaxError();
            throw (
              ((s.message =
                n +
                " at line " +
                t +
                " column " +
                r +
                " of the JSON5 data. Still to read: " +
                JSON.stringify(i.substring(e - 1, e + 19))),
              (s.at = e),
              (s.lineNumber = t),
              (s.columnNumber = r),
              s)
            );
          },
          c = function (s) {
            return (
              s && s !== n && l("Expected " + u(s) + " instead of " + u(n)),
              (n = i.charAt(e)),
              e++,
              r++,
              ("\n" === n || ("\r" === n && "\n" !== f())) && (t++, (r = 0)),
              n
            );
          },
          f = function () {
            return i.charAt(e);
          },
          p = function () {
            var e = n;
            for (
              "_" !== n &&
              "$" !== n &&
              (n < "a" || n > "z") &&
              (n < "A" || n > "Z") &&
              l("Bad identifier as unquoted key");
              c() &&
              ("_" === n ||
                "$" === n ||
                (n >= "a" && n <= "z") ||
                (n >= "A" && n <= "Z") ||
                (n >= "0" && n <= "9"));

            )
              e += n;
            return e;
          },
          h = function () {
            var e,
              t = "",
              r = "",
              i = 10;
            if ((("-" !== n && "+" !== n) || ((t = n), c(n)), "I" === n))
              return (
                (e = b()),
                ("number" != typeof e || isNaN(e)) &&
                  l("Unexpected word for number"),
                "-" === t ? -e : e
              );
            if ("N" === n)
              return (e = b()), isNaN(e) || l("expected word to be NaN"), e;
            switch (
              ("0" === n &&
                ((r += n),
                c(),
                "x" === n || "X" === n
                  ? ((r += n), c(), (i = 16))
                  : n >= "0" && n <= "9" && l("Octal literal")),
              i)
            ) {
              case 10:
                for (; n >= "0" && n <= "9"; ) (r += n), c();
                if ("." === n)
                  for (r += "."; c() && n >= "0" && n <= "9"; ) r += n;
                if ("e" === n || "E" === n)
                  for (
                    r += n, c(), ("-" !== n && "+" !== n) || ((r += n), c());
                    n >= "0" && n <= "9";

                  )
                    (r += n), c();
                break;
              case 16:
                for (
                  ;
                  (n >= "0" && n <= "9") ||
                  (n >= "A" && n <= "F") ||
                  (n >= "a" && n <= "f");

                )
                  (r += n), c();
            }
            return (
              (e = "-" === t ? -r : +r), isFinite(e) ? e : void l("Bad number")
            );
          },
          d = function () {
            var e,
              t,
              r,
              i,
              s = "";
            if ('"' === n || "'" === n)
              for (r = n; c(); ) {
                if (n === r) return c(), s;
                if ("\\" === n)
                  if ((c(), "u" === n)) {
                    for (
                      i = 0, t = 0;
                      t < 4 && ((e = parseInt(c(), 16)), isFinite(e));
                      t += 1
                    )
                      i = 16 * i + e;
                    s += String.fromCharCode(i);
                  } else if ("\r" === n) "\n" === f() && c();
                  else {
                    if ("string" != typeof a[n]) break;
                    s += a[n];
                  }
                else {
                  if ("\n" === n) break;
                  s += n;
                }
              }
            l("Bad string");
          },
          m = function () {
            "/" !== n && l("Not an inline comment");
            do if ((c(), "\n" === n || "\r" === n)) return void c();
            while (n);
          },
          v = function () {
            "*" !== n && l("Not a block comment");
            do
              for (c(); "*" === n; )
                if ((c("*"), "/" === n)) return void c("/");
            while (n);
            l("Unterminated block comment");
          },
          y = function () {
            "/" !== n && l("Not a comment"),
              c("/"),
              "/" === n ? m() : "*" === n ? v() : l("Unrecognized comment");
          },
          g = function () {
            for (; n; )
              if ("/" === n) y();
              else {
                if (!(o.indexOf(n) >= 0)) return;
                c();
              }
          },
          b = function () {
            switch (n) {
              case "t":
                return c("t"), c("r"), c("u"), c("e"), !0;
              case "f":
                return c("f"), c("a"), c("l"), c("s"), c("e"), !1;
              case "n":
                return c("n"), c("u"), c("l"), c("l"), null;
              case "I":
                return (
                  c("I"),
                  c("n"),
                  c("f"),
                  c("i"),
                  c("n"),
                  c("i"),
                  c("t"),
                  c("y"),
                  1 / 0
                );
              case "N":
                return c("N"), c("a"), c("N"), NaN;
            }
            l("Unexpected " + u(n));
          },
          E = function () {
            var e = [];
            if ("[" === n)
              for (c("["), g(); n; ) {
                if ("]" === n) return c("]"), e;
                if (
                  ("," === n ? l("Missing array element") : e.push(s()),
                  g(),
                  "," !== n)
                )
                  return c("]"), e;
                c(","), g();
              }
            l("Bad array");
          },
          x = function () {
            var e,
              t = {};
            if ("{" === n)
              for (c("{"), g(); n; ) {
                if ("}" === n) return c("}"), t;
                if (
                  ((e = '"' === n || "'" === n ? d() : p()),
                  g(),
                  c(":"),
                  (t[e] = s()),
                  g(),
                  "," !== n)
                )
                  return c("}"), t;
                c(","), g();
              }
            l("Bad object");
          };
        return (
          (s = function () {
            switch ((g(), n)) {
              case "{":
                return x();
              case "[":
                return E();
              case '"':
              case "'":
                return d();
              case "-":
              case "+":
              case ".":
                return h();
              default:
                return n >= "0" && n <= "9" ? h() : b();
            }
          }),
          function (a, o) {
            var u;
            return (
              (i = String(a)),
              (e = 0),
              (t = 1),
              (r = 1),
              (n = " "),
              (u = s()),
              g(),
              n && l("Syntax error"),
              "function" == typeof o
                ? (function e(t, r) {
                    var n,
                      i,
                      s = t[r];
                    if (s && "object" == typeof s)
                      for (n in s)
                        Object.prototype.hasOwnProperty.call(s, n) &&
                          ((i = e(s, n)),
                          void 0 !== i ? (s[n] = i) : delete s[n]);
                    return o.call(t, r, s);
                  })({ "": u }, "")
                : u
            );
          }
        );
      })()),
        (n.stringify = function (e, t, r) {
          function i(e) {
            return (
              (e >= "a" && e <= "z") ||
              (e >= "A" && e <= "Z") ||
              (e >= "0" && e <= "9") ||
              "_" === e ||
              "$" === e
            );
          }
          function s(e) {
            return (
              (e >= "a" && e <= "z") ||
              (e >= "A" && e <= "Z") ||
              "_" === e ||
              "$" === e
            );
          }
          function a(e) {
            if ("string" != typeof e) return !1;
            if (!s(e[0])) return !1;
            for (var t = 1, r = e.length; t < r; ) {
              if (!i(e[t])) return !1;
              t++;
            }
            return !0;
          }
          function o(e) {
            return Array.isArray
              ? Array.isArray(e)
              : "[object Array]" === Object.prototype.toString.call(e);
          }
          function u(e) {
            return "[object Date]" === Object.prototype.toString.call(e);
          }
          function l(e) {
            for (var t = 0; t < m.length; t++)
              if (m[t] === e)
                throw new TypeError("Converting circular structure to JSON");
          }
          function c(e, t, r) {
            if (!e) return "";
            e.length > 10 && (e = e.substring(0, 10));
            for (var n = r ? "" : "\n", i = 0; i < t; i++) n += e;
            return n;
          }
          function f(e) {
            return (
              (v.lastIndex = 0),
              v.test(e)
                ? '"' +
                  e.replace(v, function (e) {
                    var t = y[e];
                    return "string" == typeof t
                      ? t
                      : "\\u" +
                          ("0000" + e.charCodeAt(0).toString(16)).slice(-4);
                  }) +
                  '"'
                : '"' + e + '"'
            );
          }
          function p(e, t, r) {
            var n,
              i,
              s = h(e, t, r);
            switch ((s && !u(s) && (s = s.valueOf()), typeof s)) {
              case "boolean":
                return s.toString();
              case "number":
                return isNaN(s) || !isFinite(s) ? "null" : s.toString();
              case "string":
                return f(s.toString());
              case "object":
                if (null === s) return "null";
                if (o(s)) {
                  l(s), (n = "["), m.push(s);
                  for (var v = 0; v < s.length; v++)
                    (i = p(s, v, !1)),
                      (n += c(d, m.length)),
                      (n += null === i || "undefined" == typeof i ? "null" : i),
                      v < s.length - 1 ? (n += ",") : d && (n += "\n");
                  m.pop(), s.length && (n += c(d, m.length, !0)), (n += "]");
                } else {
                  l(s), (n = "{");
                  var y = !1;
                  m.push(s);
                  for (var g in s)
                    if (s.hasOwnProperty(g)) {
                      var b = p(s, g, !1);
                      (r = !1),
                        "undefined" != typeof b &&
                          null !== b &&
                          ((n += c(d, m.length)),
                          (y = !0),
                          (t = a(g) ? g : f(g)),
                          (n += t + ":" + (d ? " " : "") + b + ","));
                    }
                  m.pop(),
                    (n = y
                      ? n.substring(0, n.length - 1) + c(d, m.length) + "}"
                      : "{}");
                }
                return n;
              default:
                return;
            }
          }
          if (t && "function" != typeof t && !o(t))
            throw new Error("Replacer must be a function or an array");
          var h = function (e, r, n) {
            var i = e[r];
            return (
              i &&
                i.toJSON &&
                "function" == typeof i.toJSON &&
                (i = i.toJSON()),
              "function" == typeof t
                ? t.call(e, r, i)
                : t
                ? n || o(e) || t.indexOf(r) >= 0
                  ? i
                  : void 0
                : i
            );
          };
          n.isWord = a;
          var d,
            m = [];
          r &&
            ("string" == typeof r
              ? (d = r)
              : "number" == typeof r && r >= 0 && (d = c(" ", r, !0)));
          var v = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
            y = {
              "\b": "\\b",
              "\t": "\\t",
              "\n": "\\n",
              "\f": "\\f",
              "\r": "\\r",
              '"': '\\"',
              "\\": "\\\\",
            },
            g = { "": e };
          return void 0 === e ? h(g, "", !0) : p(g, "", !0);
        });
    },
    function (e, t, r) {
      var n = r(38),
        i = r(15),
        s = n(i, "DataView");
      e.exports = s;
    },
    function (e, t, r) {
      function n(e) {
        var t = -1,
          r = null == e ? 0 : e.length;
        for (this.clear(); ++t < r; ) {
          var n = e[t];
          this.set(n[0], n[1]);
        }
      }
      var i = r(470),
        s = r(471),
        a = r(472),
        o = r(473),
        u = r(474);
      (n.prototype.clear = i),
        (n.prototype.delete = s),
        (n.prototype.get = a),
        (n.prototype.has = o),
        (n.prototype.set = u),
        (e.exports = n);
    },
    function (e, t, r) {
      var n = r(38),
        i = r(15),
        s = n(i, "Promise");
      e.exports = s;
    },
    function (e, t, r) {
      var n = r(38),
        i = r(15),
        s = n(i, "WeakMap");
      e.exports = s;
    },
    function (e, t) {
      function r(e, t) {
        return e.set(t[0], t[1]), e;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        return e.add(t), e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = null == e ? 0 : e.length;
        return !!r && i(e, t, 0) > -1;
      }
      var i = r(131);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t, r) {
        for (var n = -1, i = null == e ? 0 : e.length; ++n < i; )
          if (r(t, e[n])) return !0;
        return !1;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        for (var r = -1, n = null == e ? 0 : e.length; ++r < n; )
          if (t(e[r], r, e)) return !0;
        return !1;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return e.split("");
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r, n) {
        return void 0 === e || (i(e, s[r]) && !a.call(n, r)) ? t : e;
      }
      var i = r(43),
        s = Object.prototype,
        a = s.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return e && i(t, s(t), e);
      }
      var i = r(29),
        s = r(24);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return e && i(t, s(t), e);
      }
      var i = r(29),
        s = r(44);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t, r) {
        return (
          e === e &&
            (void 0 !== r && (e = e <= r ? e : r),
            void 0 !== t && (e = e >= t ? e : t)),
          e
        );
      }
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(9),
        i = Object.create,
        s = (function () {
          function e() {}
          return function (t) {
            if (!n(t)) return {};
            if (i) return i(t);
            e.prototype = t;
            var r = new e();
            return (e.prototype = void 0), r;
          };
        })();
      e.exports = s;
    },
    function (e, t, r) {
      function n(e, t, r, a, o) {
        var u = -1,
          l = e.length;
        for (r || (r = s), o || (o = []); ++u < l; ) {
          var c = e[u];
          t > 0 && r(c)
            ? t > 1
              ? n(c, t - 1, r, a, o)
              : i(o, c)
            : a || (o[o.length] = c);
        }
        return o;
      }
      var i = r(126),
        s = r(477);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return e && i(e, t, s);
      }
      var i = r(184),
        s = r(24);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        return null != e && i.call(e, t);
      }
      var n = Object.prototype,
        i = n.hasOwnProperty;
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        return null != e && t in Object(e);
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return s(e) && i(e) == a;
      }
      var i = r(14),
        s = r(10),
        a = "[object Arguments]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, n, v, g) {
        var b = l(e),
          E = l(t),
          x = d,
          A = d;
        b || ((x = u(e)), (x = x == h ? m : x)),
          E || ((A = u(t)), (A = A == h ? m : A));
        var D = x == m,
          C = A == m,
          S = x == A;
        if (S && c(e)) {
          if (!c(t)) return !1;
          (b = !0), (D = !1);
        }
        if (S && !D)
          return (
            g || (g = new i()),
            b || f(e) ? s(e, t, r, n, v, g) : a(e, t, x, r, n, v, g)
          );
        if (!(r & p)) {
          var _ = D && y.call(e, "__wrapped__"),
            w = C && y.call(t, "__wrapped__");
          if (_ || w) {
            var F = _ ? e.value() : e,
              k = w ? t.value() : t;
            return g || (g = new i()), v(F, k, r, n, g);
          }
        }
        return !!S && (g || (g = new i()), o(e, t, r, n, v, g));
      }
      var i = r(78),
        s = r(196),
        a = r(462),
        o = r(463),
        u = r(199),
        l = r(5),
        c = r(91),
        f = r(145),
        p = 1,
        h = "[object Arguments]",
        d = "[object Array]",
        m = "[object Object]",
        v = Object.prototype,
        y = v.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, n) {
        var u = r.length,
          l = u,
          c = !n;
        if (null == e) return !l;
        for (e = Object(e); u--; ) {
          var f = r[u];
          if (c && f[2] ? f[1] !== e[f[0]] : !(f[0] in e)) return !1;
        }
        for (; ++u < l; ) {
          f = r[u];
          var p = f[0],
            h = e[p],
            d = f[1];
          if (c && f[2]) {
            if (void 0 === h && !(p in e)) return !1;
          } else {
            var m = new i();
            if (n) var v = n(h, d, p, e, t, m);
            if (!(void 0 === v ? s(d, h, a | o, n, m) : v)) return !1;
          }
        }
        return !0;
      }
      var i = r(78),
        s = r(187),
        a = 1,
        o = 2;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return e !== e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        if (!a(e) || s(e)) return !1;
        var t = i(e) ? d : l;
        return t.test(o(e));
      }
      var i = r(92),
        s = r(479),
        a = r(9),
        o = r(206),
        u = /[\\^$.*+?()[\]{}|]/g,
        l = /^\[object .+?Constructor\]$/,
        c = Function.prototype,
        f = Object.prototype,
        p = c.toString,
        h = f.hasOwnProperty,
        d = RegExp(
          "^" +
            p
              .call(h)
              .replace(u, "\\$&")
              .replace(
                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                "$1.*?"
              ) +
            "$"
        );
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return s(e) && i(e) == a;
      }
      var i = r(14),
        s = r(10),
        a = "[object RegExp]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return a(e) && s(e.length) && !!T[i(e)];
      }
      var i = r(14),
        s = r(143),
        a = r(10),
        o = "[object Arguments]",
        u = "[object Array]",
        l = "[object Boolean]",
        c = "[object Date]",
        f = "[object Error]",
        p = "[object Function]",
        h = "[object Map]",
        d = "[object Number]",
        m = "[object Object]",
        v = "[object RegExp]",
        y = "[object Set]",
        g = "[object String]",
        b = "[object WeakMap]",
        E = "[object ArrayBuffer]",
        x = "[object DataView]",
        A = "[object Float32Array]",
        D = "[object Float64Array]",
        C = "[object Int8Array]",
        S = "[object Int16Array]",
        _ = "[object Int32Array]",
        w = "[object Uint8Array]",
        F = "[object Uint8ClampedArray]",
        k = "[object Uint16Array]",
        P = "[object Uint32Array]",
        T = {};
      (T[A] = T[D] = T[C] = T[S] = T[_] = T[w] = T[F] = T[k] = T[P] = !0),
        (T[o] = T[u] = T[E] = T[l] = T[x] = T[c] = T[f] = T[p] = T[h] = T[
          d
        ] = T[m] = T[v] = T[y] = T[g] = T[b] = !1),
        (e.exports = n);
    },
    function (e, t, r) {
      function n(e) {
        if (!i(e)) return s(e);
        var t = [];
        for (var r in Object(e))
          o.call(e, r) && "constructor" != r && t.push(r);
        return t;
      }
      var i = r(83),
        s = r(491),
        a = Object.prototype,
        o = a.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        if (!i(e)) return a(e);
        var t = s(e),
          r = [];
        for (var n in e)
          ("constructor" != n || (!t && u.call(e, n))) && r.push(n);
        return r;
      }
      var i = r(9),
        s = r(83),
        a = r(492),
        o = Object.prototype,
        u = o.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = s(e);
        return 1 == t.length && t[0][2]
          ? a(t[0][0], t[0][1])
          : function (r) {
              return r === e || i(r, e, t);
            };
      }
      var i = r(425),
        s = r(466),
        a = r(204);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return o(e) && u(t)
          ? l(c(e), t)
          : function (r) {
              var n = s(r, e);
              return void 0 === n && n === t ? a(r, e) : i(t, n, f | p);
            };
      }
      var i = r(187),
        s = r(520),
        a = r(521),
        o = r(140),
        u = r(202),
        l = r(204),
        c = r(86),
        f = 1,
        p = 2;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, c, f) {
        e !== t &&
          a(
            t,
            function (a, l) {
              if (u(a)) f || (f = new i()), o(e, t, l, r, n, c, f);
              else {
                var p = c ? c(e[l], a, l + "", e, t, f) : void 0;
                void 0 === p && (p = a), s(e, l, p);
              }
            },
            l
          );
      }
      var i = r(78),
        s = r(182),
        a = r(184),
        o = r(435),
        u = r(9),
        l = r(44);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, n, g, b, E) {
        var x = e[r],
          A = t[r],
          D = E.get(A);
        if (D) return void i(e, r, D);
        var C = b ? b(x, A, r + "", e, t, E) : void 0,
          S = void 0 === C;
        if (S) {
          var _ = c(A),
            w = !_ && p(A),
            F = !_ && !w && v(A);
          (C = A),
            _ || w || F
              ? c(x)
                ? (C = x)
                : f(x)
                ? (C = o(x))
                : w
                ? ((S = !1), (C = s(A, !0)))
                : F
                ? ((S = !1), (C = a(A, !0)))
                : (C = [])
              : m(A) || l(A)
              ? ((C = x),
                l(x) ? (C = y(x)) : (!d(x) || (n && h(x))) && (C = u(A)))
              : (S = !1);
        }
        S && (E.set(A, C), g(C, A, n, b, E), E.delete(A)), i(e, r, C);
      }
      var i = r(182),
        s = r(191),
        a = r(192),
        o = r(193),
        u = r(201),
        l = r(90),
        c = r(5),
        f = r(522),
        p = r(91),
        h = r(92),
        d = r(9),
        m = r(212),
        v = r(145),
        y = r(534);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = -1;
        t = i(t.length ? t : [c], u(s));
        var f = a(e, function (e, r, s) {
          var a = i(t, function (t) {
            return t(e);
          });
          return { criteria: a, index: ++n, value: e };
        });
        return o(f, function (e, t) {
          return l(e, t, r);
        });
      }
      var i = r(79),
        s = r(57),
        a = r(188),
        o = r(442),
        u = r(134),
        l = r(455),
        c = r(58);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return function (t) {
          return null == t ? void 0 : t[e];
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return function (t) {
          return i(t, e);
        };
      }
      var i = r(185);
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        var r = "";
        if (!e || t < 1 || t > n) return r;
        do t % 2 && (r += e), (t = i(t / 2)), t && (e += e);
        while (t);
        return r;
      }
      var n = 9007199254740991,
        i = Math.floor;
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(513),
        i = r(195),
        s = r(58),
        a = i
          ? function (e, t) {
              return i(e, "toString", {
                configurable: !0,
                enumerable: !1,
                value: n(t),
                writable: !0,
              });
            }
          : s;
      e.exports = a;
    },
    function (e, t) {
      function r(e, t, r) {
        var n = -1,
          i = e.length;
        t < 0 && (t = -t > i ? 0 : i + t),
          (r = r > i ? i : r),
          r < 0 && (r += i),
          (i = t > r ? 0 : (r - t) >>> 0),
          (t >>>= 0);
        for (var s = Array(i); ++n < i; ) s[n] = e[n + t];
        return s;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        var r = e.length;
        for (e.sort(t); r--; ) e[r] = e[r].value;
        return e;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e, t) {
        for (var r = -1, n = Array(e); ++r < e; ) n[r] = t(r);
        return n;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = -1,
          f = s,
          p = e.length,
          h = !0,
          d = [],
          m = d;
        if (r) (h = !1), (f = a);
        else if (p >= c) {
          var v = t ? null : u(e);
          if (v) return l(v);
          (h = !1), (f = o), (m = new i());
        } else m = t ? [] : d;
        e: for (; ++n < p; ) {
          var y = e[n],
            g = t ? t(y) : y;
          if (((y = r || 0 !== y ? y : 0), h && g === g)) {
            for (var b = m.length; b--; ) if (m[b] === g) continue e;
            t && m.push(g), d.push(y);
          } else f(m, g, r) || (m !== d && m.push(g), d.push(y));
        }
        return d;
      }
      var i = r(176),
        s = r(410),
        a = r(411),
        o = r(189),
        u = r(461),
        l = r(85),
        c = 200;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return i(t, function (t) {
          return e[t];
        });
      }
      var i = r(79);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return "function" == typeof e ? e : i;
      }
      var i = r(58);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = e.length;
        return (r = void 0 === r ? n : r), !t && r >= n ? e : i(e, t, r);
      }
      var i = r(441);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        for (var r = e.length; r-- && i(t, e[r], 0) > -1; );
        return r;
      }
      var i = r(131);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = t ? i(e.buffer) : e.buffer;
        return new e.constructor(r, e.byteOffset, e.byteLength);
      }
      var i = r(135);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = t ? r(a(e), o) : a(e);
        return s(n, i, new e.constructor());
      }
      var i = r(408),
        s = r(181),
        a = r(203),
        o = 1;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = new e.constructor(e.source, n.exec(e));
        return (t.lastIndex = e.lastIndex), t;
      }
      var n = /\w*$/;
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = t ? r(a(e), o) : a(e);
        return s(n, i, new e.constructor());
      }
      var i = r(409),
        s = r(181),
        a = r(85),
        o = 1;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return a ? Object(a.call(e)) : {};
      }
      var i = r(42),
        s = i ? i.prototype : void 0,
        a = s ? s.valueOf : void 0;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        if (e !== t) {
          var r = void 0 !== e,
            n = null === e,
            s = e === e,
            a = i(e),
            o = void 0 !== t,
            u = null === t,
            l = t === t,
            c = i(t);
          if (
            (!u && !c && !a && e > t) ||
            (a && o && l && !u && !c) ||
            (n && o && l) ||
            (!r && l) ||
            !s
          )
            return 1;
          if (
            (!n && !a && !c && e < t) ||
            (c && r && s && !n && !a) ||
            (u && r && s) ||
            (!o && s) ||
            !l
          )
            return -1;
        }
        return 0;
      }
      var i = r(59);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        for (
          var n = -1,
            s = e.criteria,
            a = t.criteria,
            o = s.length,
            u = r.length;
          ++n < o;

        ) {
          var l = i(s[n], a[n]);
          if (l) {
            if (n >= u) return l;
            var c = r[n];
            return l * ("desc" == c ? -1 : 1);
          }
        }
        return e.index - t.index;
      }
      var i = r(454);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return i(e, s(e), t);
      }
      var i = r(29),
        s = r(137);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return i(e, s(e), t);
      }
      var i = r(29),
        s = r(198);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(15),
        i = n["__core-js_shared__"];
      e.exports = i;
    },
    function (e, t, r) {
      function n(e, t) {
        return function (r, n) {
          if (null == r) return r;
          if (!i(r)) return e(r, n);
          for (
            var s = r.length, a = t ? s : -1, o = Object(r);
            (t ? a-- : ++a < s) && n(o[a], a, o) !== !1;

          );
          return r;
        };
      }
      var i = r(23);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return function (t, r, n) {
          for (var i = -1, s = Object(t), a = n(t), o = a.length; o--; ) {
            var u = a[e ? o : ++i];
            if (r(s[u], u, s) === !1) break;
          }
          return t;
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(175),
        i = r(527),
        s = r(85),
        a = 1 / 0,
        o =
          n && 1 / s(new n([, -0]))[1] == a
            ? function (e) {
                return new n(e);
              }
            : i;
      e.exports = o;
    },
    function (e, t, r) {
      function n(e, t, r, n, i, D, S) {
        switch (r) {
          case A:
            if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
              return !1;
            (e = e.buffer), (t = t.buffer);
          case x:
            return !(e.byteLength != t.byteLength || !D(new s(e), new s(t)));
          case p:
          case h:
          case v:
            return a(+e, +t);
          case d:
            return e.name == t.name && e.message == t.message;
          case y:
          case b:
            return e == t + "";
          case m:
            var _ = u;
          case g:
            var w = n & c;
            if ((_ || (_ = l), e.size != t.size && !w)) return !1;
            var F = S.get(e);
            if (F) return F == t;
            (n |= f), S.set(e, t);
            var k = o(_(e), _(t), n, i, D, S);
            return S.delete(e), k;
          case E:
            if (C) return C.call(e) == C.call(t);
        }
        return !1;
      }
      var i = r(42),
        s = r(177),
        a = r(43),
        o = r(196),
        u = r(203),
        l = r(85),
        c = 1,
        f = 2,
        p = "[object Boolean]",
        h = "[object Date]",
        d = "[object Error]",
        m = "[object Map]",
        v = "[object Number]",
        y = "[object RegExp]",
        g = "[object Set]",
        b = "[object String]",
        E = "[object Symbol]",
        x = "[object ArrayBuffer]",
        A = "[object DataView]",
        D = i ? i.prototype : void 0,
        C = D ? D.valueOf : void 0;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r, n, a, u) {
        var l = r & s,
          c = i(e),
          f = c.length,
          p = i(t),
          h = p.length;
        if (f != h && !l) return !1;
        for (var d = f; d--; ) {
          var m = c[d];
          if (!(l ? m in t : o.call(t, m))) return !1;
        }
        var v = u.get(e);
        if (v && u.get(t)) return v == t;
        var y = !0;
        u.set(e, t), u.set(t, e);
        for (var g = l; ++d < f; ) {
          m = c[d];
          var b = e[m],
            E = t[m];
          if (n) var x = l ? n(E, b, m, t, e, u) : n(b, E, m, e, t, u);
          if (!(void 0 === x ? b === E || a(b, E, r, n, u) : x)) {
            y = !1;
            break;
          }
          g || (g = "constructor" == m);
        }
        if (y && !g) {
          var A = e.constructor,
            D = t.constructor;
          A != D &&
            "constructor" in e &&
            "constructor" in t &&
            !(
              "function" == typeof A &&
              A instanceof A &&
              "function" == typeof D &&
              D instanceof D
            ) &&
            (y = !1);
        }
        return u.delete(e), u.delete(t), y;
      }
      var i = r(24),
        s = 1,
        a = Object.prototype,
        o = a.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(e, a, s);
      }
      var i = r(186),
        s = r(137),
        a = r(24);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(e, a, s);
      }
      var i = r(186),
        s = r(198),
        a = r(44);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        for (var t = s(e), r = t.length; r--; ) {
          var n = t[r],
            a = e[n];
          t[r] = [n, a, i(a)];
        }
        return t;
      }
      var i = r(202),
        s = r(24);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = a.call(e, u),
          r = e[u];
        try {
          e[u] = void 0;
          var n = !0;
        } catch (e) {}
        var i = o.call(e);
        return n && (t ? (e[u] = r) : delete e[u]), i;
      }
      var i = r(42),
        s = Object.prototype,
        a = s.hasOwnProperty,
        o = s.toString,
        u = i ? i.toStringTag : void 0;
      e.exports = n;
    },
    function (e, t) {
      function r(e, t) {
        return null == e ? void 0 : e[t];
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return c.test(e);
      }
      var n = "\\ud800-\\udfff",
        i = "\\u0300-\\u036f",
        s = "\\ufe20-\\ufe2f",
        a = "\\u20d0-\\u20ff",
        o = i + s + a,
        u = "\\ufe0e\\ufe0f",
        l = "\\u200d",
        c = RegExp("[" + l + n + o + u + "]");
      e.exports = r;
    },
    function (e, t, r) {
      function n() {
        (this.__data__ = i ? i(null) : {}), (this.size = 0);
      }
      var i = r(84);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = this.has(e) && delete this.__data__[e];
        return (this.size -= t ? 1 : 0), t;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        var t = this.__data__;
        if (i) {
          var r = t[e];
          return r === s ? void 0 : r;
        }
        return o.call(t, e) ? t[e] : void 0;
      }
      var i = r(84),
        s = "__lodash_hash_undefined__",
        a = Object.prototype,
        o = a.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = this.__data__;
        return i ? void 0 !== t[e] : a.call(t, e);
      }
      var i = r(84),
        s = Object.prototype,
        a = s.hasOwnProperty;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = this.__data__;
        return (
          (this.size += this.has(e) ? 0 : 1),
          (r[e] = i && void 0 === t ? s : t),
          this
        );
      }
      var i = r(84),
        s = "__lodash_hash_undefined__";
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = e.length,
          r = e.constructor(t);
        return (
          t &&
            "string" == typeof e[0] &&
            i.call(e, "index") &&
            ((r.index = e.index), (r.input = e.input)),
          r
        );
      }
      var n = Object.prototype,
        i = n.hasOwnProperty;
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r, n) {
        var P = e.constructor;
        switch (t) {
          case b:
            return i(e);
          case f:
          case p:
            return new P(+e);
          case E:
            return s(e, n);
          case x:
          case A:
          case D:
          case C:
          case S:
          case _:
          case w:
          case F:
          case k:
            return c(e, n);
          case h:
            return a(e, n, r);
          case d:
          case y:
            return new P(e);
          case m:
            return o(e);
          case v:
            return u(e, n, r);
          case g:
            return l(e);
        }
      }
      var i = r(135),
        s = r(449),
        a = r(450),
        o = r(451),
        u = r(452),
        l = r(453),
        c = r(192),
        f = "[object Boolean]",
        p = "[object Date]",
        h = "[object Map]",
        d = "[object Number]",
        m = "[object RegExp]",
        v = "[object Set]",
        y = "[object String]",
        g = "[object Symbol]",
        b = "[object ArrayBuffer]",
        E = "[object DataView]",
        x = "[object Float32Array]",
        A = "[object Float64Array]",
        D = "[object Int8Array]",
        C = "[object Int16Array]",
        S = "[object Int32Array]",
        _ = "[object Uint8Array]",
        w = "[object Uint8ClampedArray]",
        F = "[object Uint16Array]",
        k = "[object Uint32Array]";
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return a(e) || s(e) || !!(o && e && e[o]);
      }
      var i = r(42),
        s = r(90),
        a = r(5),
        o = i ? i.isConcatSpreadable : void 0;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = typeof e;
        return "string" == t || "number" == t || "symbol" == t || "boolean" == t
          ? "__proto__" !== e
          : null === e;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return !!s && s in e;
      }
      var i = r(458),
        s = (function () {
          var e = /[^.]+$/.exec((i && i.keys && i.keys.IE_PROTO) || "");
          return e ? "Symbol(src)_1." + e : "";
        })();
      e.exports = n;
    },
    function (e, t) {
      function r() {
        (this.__data__ = []), (this.size = 0);
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        var t = this.__data__,
          r = i(t, e);
        if (r < 0) return !1;
        var n = t.length - 1;
        return r == n ? t.pop() : a.call(t, r, 1), --this.size, !0;
      }
      var i = r(80),
        s = Array.prototype,
        a = s.splice;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = this.__data__,
          r = i(t, e);
        return r < 0 ? void 0 : t[r][1];
      }
      var i = r(80);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(this.__data__, e) > -1;
      }
      var i = r(80);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = this.__data__,
          n = i(r, e);
        return n < 0 ? (++this.size, r.push([e, t])) : (r[n][1] = t), this;
      }
      var i = r(80);
      e.exports = n;
    },
    function (e, t, r) {
      function n() {
        (this.size = 0),
          (this.__data__ = {
            hash: new i(),
            map: new (a || s)(),
            string: new i(),
          });
      }
      var i = r(405),
        s = r(77),
        a = r(124);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = i(this, e).delete(e);
        return (this.size -= t ? 1 : 0), t;
      }
      var i = r(82);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(this, e).get(e);
      }
      var i = r(82);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(this, e).has(e);
      }
      var i = r(82);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = i(this, e),
          n = r.size;
        return r.set(e, t), (this.size += r.size == n ? 0 : 1), this;
      }
      var i = r(82);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        var t = i(e, function (e) {
            return r.size === s && r.clear(), e;
          }),
          r = t.cache;
        return t;
      }
      var i = r(525),
        s = 500;
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(141),
        i = n(Object.keys, Object);
      e.exports = i;
    },
    function (e, t) {
      function r(e) {
        var t = [];
        if (null != e) for (var r in Object(e)) t.push(r);
        return t;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return i.call(e);
      }
      var n = Object.prototype,
        i = n.toString;
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t, r) {
        return (
          (t = s(void 0 === t ? e.length - 1 : t, 0)),
          function () {
            for (
              var n = arguments, a = -1, o = s(n.length - t, 0), u = Array(o);
              ++a < o;

            )
              u[a] = n[t + a];
            a = -1;
            for (var l = Array(t + 1); ++a < t; ) l[a] = n[a];
            return (l[t] = r(u)), i(e, this, l);
          }
        );
      }
      var i = r(178),
        s = Math.max;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        return this.__data__.set(e, n), this;
      }
      var n = "__lodash_hash_undefined__";
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return this.__data__.has(e);
      }
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(440),
        i = r(498),
        s = i(n);
      e.exports = s;
    },
    function (e, t) {
      function r(e) {
        var t = 0,
          r = 0;
        return function () {
          var a = s(),
            o = i - (a - r);
          if (((r = a), o > 0)) {
            if (++t >= n) return arguments[0];
          } else t = 0;
          return e.apply(void 0, arguments);
        };
      }
      var n = 800,
        i = 16,
        s = Date.now;
      e.exports = r;
    },
    function (e, t, r) {
      function n() {
        (this.__data__ = new i()), (this.size = 0);
      }
      var i = r(77);
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        var t = this.__data__,
          r = t.delete(e);
        return (this.size = t.size), r;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return this.__data__.get(e);
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return this.__data__.has(e);
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = this.__data__;
        if (r instanceof i) {
          var n = r.__data__;
          if (!s || n.length < o - 1)
            return n.push([e, t]), (this.size = ++r.size), this;
          r = this.__data__ = new a(n);
        }
        return r.set(e, t), (this.size = r.size), this;
      }
      var i = r(77),
        s = r(124),
        a = r(125),
        o = 200;
      e.exports = n;
    },
    function (e, t) {
      function r(e, t, r) {
        for (var n = r - 1, i = e.length; ++n < i; ) if (e[n] === t) return n;
        return -1;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return s(e) ? a(e) : i(e);
      }
      var i = r(413),
        s = r(469),
        a = r(507);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(490),
        i = /^\./,
        s = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        a = /\\(\\)?/g,
        o = n(function (e) {
          var t = [];
          return (
            i.test(e) && t.push(""),
            e.replace(s, function (e, r, n, i) {
              t.push(n ? i.replace(a, "$1") : r || e);
            }),
            t
          );
        });
      e.exports = o;
    },
    function (e, t) {
      function r(e) {
        return e.match(A) || [];
      }
      var n = "\\ud800-\\udfff",
        i = "\\u0300-\\u036f",
        s = "\\ufe20-\\ufe2f",
        a = "\\u20d0-\\u20ff",
        o = i + s + a,
        u = "\\ufe0e\\ufe0f",
        l = "[" + n + "]",
        c = "[" + o + "]",
        f = "\\ud83c[\\udffb-\\udfff]",
        p = "(?:" + c + "|" + f + ")",
        h = "[^" + n + "]",
        d = "(?:\\ud83c[\\udde6-\\uddff]){2}",
        m = "[\\ud800-\\udbff][\\udc00-\\udfff]",
        v = "\\u200d",
        y = p + "?",
        g = "[" + u + "]?",
        b = "(?:" + v + "(?:" + [h, d, m].join("|") + ")" + g + y + ")*",
        E = g + y + b,
        x = "(?:" + [h + c + "?", c, d, m, l].join("|") + ")",
        A = RegExp(f + "(?=" + f + ")|" + x + E, "g");
      e.exports = r;
    },
    function (e, t, r) {
      var n = r(29),
        i = r(81),
        s = r(44),
        a = i(function (e, t) {
          n(t, s(t), e);
        });
      e.exports = a;
    },
    function (e, t, r) {
      var n = r(29),
        i = r(81),
        s = r(44),
        a = i(function (e, t, r, i) {
          n(t, s(t), e, i);
        });
      e.exports = a;
    },
    function (e, t, r) {
      function n(e) {
        return i(e, s | a);
      }
      var i = r(129),
        s = 1,
        a = 4;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return (t = "function" == typeof t ? t : void 0), i(e, s | a, t);
      }
      var i = r(129),
        s = 1,
        a = 4;
      e.exports = n;
    },
    function (e, t) {
      function r(e) {
        for (
          var t = -1, r = null == e ? 0 : e.length, n = 0, i = [];
          ++t < r;

        ) {
          var s = e[t];
          s && (i[n++] = s);
        }
        return i;
      }
      e.exports = r;
    },
    function (e, t) {
      function r(e) {
        return function () {
          return e;
        };
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return (e = i(e)), e && a.test(e) ? e.replace(s, "\\$&") : e;
      }
      var i = r(60),
        s = /[\\^$.*+?()[\]{}|]/g,
        a = RegExp(s.source);
      e.exports = n;
    },
    function (e, t, r) {
      e.exports = r(508);
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = null == e ? 0 : e.length;
        if (!n) return -1;
        var u = null == r ? 0 : a(r);
        return u < 0 && (u = o(n + u, 0)), i(e, s(t, 3), u);
      }
      var i = r(130),
        s = r(57),
        a = r(45),
        o = Math.max;
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(194),
        i = r(518),
        s = n(i);
      e.exports = s;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = null == e ? 0 : e.length;
        if (!n) return -1;
        var l = n - 1;
        return (
          void 0 !== r && ((l = a(r)), (l = r < 0 ? o(n + l, 0) : u(l, n - 1))),
          i(e, s(t, 3), l, !0)
        );
      }
      var i = r(130),
        s = r(57),
        a = r(45),
        o = Math.max,
        u = Math.min;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = o(e) ? i : s;
        return r(e, a(t));
      }
      var i = r(179),
        s = r(183),
        a = r(446),
        o = r(5);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        var n = null == e ? void 0 : i(e, t);
        return void 0 === n ? r : n;
      }
      var i = r(185);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        return null != e && s(e, t, i);
      }
      var i = r(422),
        s = r(200);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return s(e) && i(e);
      }
      var i = r(23),
        s = r(10);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return "number" == typeof e && e == i(e);
      }
      var i = r(45);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        var r = o(e) ? i : a;
        return r(e, s(t, 3));
      }
      var i = r(79),
        s = r(57),
        a = r(188),
        o = r(5);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t) {
        if ("function" != typeof e || (null != t && "function" != typeof t))
          throw new TypeError(s);
        var r = function () {
          var n = arguments,
            i = t ? t.apply(this, n) : n[0],
            s = r.cache;
          if (s.has(i)) return s.get(i);
          var a = e.apply(this, n);
          return (r.cache = s.set(i, a) || s), a;
        };
        return (r.cache = new (n.Cache || i)()), r;
      }
      var i = r(125),
        s = "Expected a function";
      (n.Cache = i), (e.exports = n);
    },
    function (e, t, r) {
      var n = r(434),
        i = r(81),
        s = i(function (e, t, r, i) {
          n(e, t, r, i);
        });
      e.exports = s;
    },
    function (e, t) {
      function r() {}
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        return a(e) ? i(o(e)) : s(e);
      }
      var i = r(437),
        s = r(438),
        a = r(140),
        o = r(86);
      e.exports = n;
    },
    function (e, t, r) {
      var n = r(419),
        i = r(436),
        s = r(132),
        a = r(139),
        o = s(function (e, t) {
          if (null == e) return [];
          var r = t.length;
          return (
            r > 1 && a(e, t[0], t[1])
              ? (t = [])
              : r > 2 && a(t[0], t[1], t[2]) && (t = [t[0]]),
            i(e, n(t, 1), [])
          );
        });
      e.exports = o;
    },
    function (e, t, r) {
      function n(e, t, r) {
        return (
          (e = o(e)),
          (r = i(a(r), 0, e.length)),
          (t = s(t)),
          e.slice(r, r + t.length) == t
        );
      }
      var i = r(417),
        s = r(133),
        a = r(45),
        o = r(60);
      e.exports = n;
    },
    function (e, t) {
      function r() {
        return !1;
      }
      e.exports = r;
    },
    function (e, t, r) {
      function n(e) {
        if (!e) return 0 === e ? e : 0;
        if (((e = i(e)), e === s || e === -s)) {
          var t = e < 0 ? -1 : 1;
          return t * a;
        }
        return e === e ? e : 0;
      }
      var i = r(533),
        s = 1 / 0,
        a = 1.7976931348623157e308;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        if ("number" == typeof e) return e;
        if (s(e)) return a;
        if (i(e)) {
          var t = "function" == typeof e.valueOf ? e.valueOf() : e;
          e = i(t) ? t + "" : t;
        }
        if ("string" != typeof e) return 0 === e ? e : +e;
        e = e.replace(o, "");
        var r = l.test(e);
        return r || c.test(e) ? f(e.slice(2), r ? 2 : 8) : u.test(e) ? a : +e;
      }
      var i = r(9),
        s = r(59),
        a = NaN,
        o = /^\s+|\s+$/g,
        u = /^[-+]0x[0-9a-f]+$/i,
        l = /^0b[01]+$/i,
        c = /^0o[0-7]+$/i,
        f = parseInt;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return i(e, s(e));
      }
      var i = r(29),
        s = r(44);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e, t, r) {
        if (((e = u(e)), e && (r || void 0 === t))) return e.replace(l, "");
        if (!e || !(t = i(t))) return e;
        var n = o(e),
          c = a(n, o(t)) + 1;
        return s(n, 0, c).join("");
      }
      var i = r(133),
        s = r(447),
        a = r(448),
        o = r(505),
        u = r(60),
        l = /\s+$/;
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return e && e.length ? i(e) : [];
      }
      var i = r(444);
      e.exports = n;
    },
    function (e, t, r) {
      function n(e) {
        return e.split("").reduce(function (e, t) {
          return (e[t] = !0), e;
        }, {});
      }
      function i(e, t) {
        return (
          (t = t || {}),
          function (r, n, i) {
            return a(r, e, t);
          }
        );
      }
      function s(e, t) {
        (e = e || {}), (t = t || {});
        var r = {};
        return (
          Object.keys(t).forEach(function (e) {
            r[e] = t[e];
          }),
          Object.keys(e).forEach(function (t) {
            r[t] = e[t];
          }),
          r
        );
      }
      function a(e, t, r) {
        if ("string" != typeof t)
          throw new TypeError("glob pattern string required");
        return (
          r || (r = {}),
          !(!r.nocomment && "#" === t.charAt(0)) &&
            ("" === t.trim() ? "" === e : new o(t, r).match(e))
        );
      }
      function o(e, t) {
        if (!(this instanceof o)) return new o(e, t);
        if ("string" != typeof e)
          throw new TypeError("glob pattern string required");
        t || (t = {}),
          (e = e.trim()),
          "/" !== v.sep && (e = e.split(v.sep).join("/")),
          (this.options = t),
          (this.set = []),
          (this.pattern = e),
          (this.regexp = null),
          (this.negate = !1),
          (this.comment = !1),
          (this.empty = !1),
          this.make();
      }
      function u() {
        if (!this._made) {
          var e = this.pattern,
            t = this.options;
          if (!t.nocomment && "#" === e.charAt(0))
            return void (this.comment = !0);
          if (!e) return void (this.empty = !0);
          this.parseNegate();
          var r = (this.globSet = this.braceExpand());
          t.debug && (this.debug = console.error),
            this.debug(this.pattern, r),
            (r = this.globParts = r.map(function (e) {
              return e.split(S);
            })),
            this.debug(this.pattern, r),
            (r = r.map(function (e, t, r) {
              return e.map(this.parse, this);
            }, this)),
            this.debug(this.pattern, r),
            (r = r.filter(function (e) {
              return e.indexOf(!1) === -1;
            })),
            this.debug(this.pattern, r),
            (this.set = r);
        }
      }
      function l() {
        var e = this.pattern,
          t = !1,
          r = this.options,
          n = 0;
        if (!r.nonegate) {
          for (var i = 0, s = e.length; i < s && "!" === e.charAt(i); i++)
            (t = !t), n++;
          n && (this.pattern = e.substr(n)), (this.negate = t);
        }
      }
      function c(e, t) {
        if (
          (t || (t = this instanceof o ? this.options : {}),
          (e = "undefined" == typeof e ? this.pattern : e),
          "undefined" == typeof e)
        )
          throw new TypeError("undefined pattern");
        return t.nobrace || !e.match(/\{.*\}/) ? [e] : g(e);
      }
      function f(e, t) {
        function r() {
          if (i) {
            switch (i) {
              case "*":
                (a += x), (o = !0);
                break;
              case "?":
                (a += E), (o = !0);
                break;
              default:
                a += "\\" + i;
            }
            v.debug("clearStateChar %j %j", i, a), (i = !1);
          }
        }
        if (e.length > 65536) throw new TypeError("pattern is too long");
        var n = this.options;
        if (!n.noglobstar && "**" === e) return y;
        if ("" === e) return "";
        for (
          var i,
            s,
            a = "",
            o = !!n.nocase,
            u = !1,
            l = [],
            c = [],
            f = !1,
            p = -1,
            h = -1,
            m =
              "." === e.charAt(0)
                ? ""
                : n.dot
                ? "(?!(?:^|\\/)\\.{1,2}(?:$|\\/))"
                : "(?!\\.)",
            v = this,
            g = 0,
            A = e.length;
          g < A && (s = e.charAt(g));
          g++
        )
          if ((this.debug("%s\t%s %s %j", e, g, a, s), u && C[s]))
            (a += "\\" + s), (u = !1);
          else
            switch (s) {
              case "/":
                return !1;
              case "\\":
                r(), (u = !0);
                continue;
              case "?":
              case "*":
              case "+":
              case "@":
              case "!":
                if ((this.debug("%s\t%s %s %j <-- stateChar", e, g, a, s), f)) {
                  this.debug("  in class"),
                    "!" === s && g === h + 1 && (s = "^"),
                    (a += s);
                  continue;
                }
                v.debug("call clearStateChar %j", i),
                  r(),
                  (i = s),
                  n.noext && r();
                continue;
              case "(":
                if (f) {
                  a += "(";
                  continue;
                }
                if (!i) {
                  a += "\\(";
                  continue;
                }
                l.push({
                  type: i,
                  start: g - 1,
                  reStart: a.length,
                  open: b[i].open,
                  close: b[i].close,
                }),
                  (a += "!" === i ? "(?:(?!(?:" : "(?:"),
                  this.debug("plType %j %j", i, a),
                  (i = !1);
                continue;
              case ")":
                if (f || !l.length) {
                  a += "\\)";
                  continue;
                }
                r(), (o = !0);
                var D = l.pop();
                (a += D.close),
                  "!" === D.type && c.push(D),
                  (D.reEnd = a.length);
                continue;
              case "|":
                if (f || !l.length || u) {
                  (a += "\\|"), (u = !1);
                  continue;
                }
                r(), (a += "|");
                continue;
              case "[":
                if ((r(), f)) {
                  a += "\\" + s;
                  continue;
                }
                (f = !0), (h = g), (p = a.length), (a += s);
                continue;
              case "]":
                if (g === h + 1 || !f) {
                  (a += "\\" + s), (u = !1);
                  continue;
                }
                if (f) {
                  var S = e.substring(h + 1, g);
                  try {
                    RegExp("[" + S + "]");
                  } catch (e) {
                    var w = this.parse(S, _);
                    (a = a.substr(0, p) + "\\[" + w[0] + "\\]"),
                      (o = o || w[1]),
                      (f = !1);
                    continue;
                  }
                }
                (o = !0), (f = !1), (a += s);
                continue;
              default:
                r(),
                  u ? (u = !1) : !C[s] || ("^" === s && f) || (a += "\\"),
                  (a += s);
            }
        for (
          f &&
            ((S = e.substr(h + 1)),
            (w = this.parse(S, _)),
            (a = a.substr(0, p) + "\\[" + w[0]),
            (o = o || w[1])),
            D = l.pop();
          D;
          D = l.pop()
        ) {
          var F = a.slice(D.reStart + D.open.length);
          this.debug("setting tail", a, D),
            (F = F.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (e, t, r) {
              return r || (r = "\\"), t + t + r + "|";
            })),
            this.debug("tail=%j\n   %s", F, F, D, a);
          var k = "*" === D.type ? x : "?" === D.type ? E : "\\" + D.type;
          (o = !0), (a = a.slice(0, D.reStart) + k + "\\(" + F);
        }
        r(), u && (a += "\\\\");
        var P = !1;
        switch (a.charAt(0)) {
          case ".":
          case "[":
          case "(":
            P = !0;
        }
        for (var T = c.length - 1; T > -1; T--) {
          var O = c[T],
            B = a.slice(0, O.reStart),
            I = a.slice(O.reStart, O.reEnd - 8),
            N = a.slice(O.reEnd - 8, O.reEnd),
            M = a.slice(O.reEnd);
          N += M;
          var R = B.split("(").length - 1,
            L = M;
          for (g = 0; g < R; g++) L = L.replace(/\)[+*?]?/, "");
          M = L;
          var j = "";
          "" === M && t !== _ && (j = "$");
          var V = B + I + M + j + N;
          a = V;
        }
        if (("" !== a && o && (a = "(?=.)" + a), P && (a = m + a), t === _))
          return [a, o];
        if (!o) return d(e);
        var U = n.nocase ? "i" : "";
        try {
          var G = new RegExp("^" + a + "$", U);
        } catch (e) {
          return new RegExp("$.");
        }
        return (G._glob = e), (G._src = a), G;
      }
      function p() {
        if (this.regexp || this.regexp === !1) return this.regexp;
        var e = this.set;
        if (!e.length) return (this.regexp = !1), this.regexp;
        var t = this.options,
          r = t.noglobstar ? x : t.dot ? A : D,
          n = t.nocase ? "i" : "",
          i = e
            .map(function (e) {
              return e
                .map(function (e) {
                  return e === y ? r : "string" == typeof e ? m(e) : e._src;
                })
                .join("\\/");
            })
            .join("|");
        (i = "^(?:" + i + ")$"), this.negate && (i = "^(?!" + i + ").*$");
        try {
          this.regexp = new RegExp(i, n);
        } catch (e) {
          this.regexp = !1;
        }
        return this.regexp;
      }
      function h(e, t) {
        if ((this.debug("match", e, this.pattern), this.comment)) return !1;
        if (this.empty) return "" === e;
        if ("/" === e && t) return !0;
        var r = this.options;
        "/" !== v.sep && (e = e.split(v.sep).join("/")),
          (e = e.split(S)),
          this.debug(this.pattern, "split", e);
        var n = this.set;
        this.debug(this.pattern, "set", n);
        var i, s;
        for (s = e.length - 1; s >= 0 && !(i = e[s]); s--);
        for (s = 0; s < n.length; s++) {
          var a = n[s],
            o = e;
          r.matchBase && 1 === a.length && (o = [i]);
          var u = this.matchOne(o, a, t);
          if (u) return !!r.flipNegate || !this.negate;
        }
        return !r.flipNegate && this.negate;
      }
      function d(e) {
        return e.replace(/\\(.)/g, "$1");
      }
      function m(e) {
        return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
      }
      (e.exports = a), (a.Minimatch = o);
      var v = { sep: "/" };
      try {
        v = r(25);
      } catch (e) {}
      var y = (a.GLOBSTAR = o.GLOBSTAR = {}),
        g = r(334),
        b = {
          "!": { open: "(?:(?!(?:", close: "))[^/]*?)" },
          "?": { open: "(?:", close: ")?" },
          "+": { open: "(?:", close: ")+" },
          "*": { open: "(?:", close: ")*" },
          "@": { open: "(?:", close: ")" },
        },
        E = "[^/]",
        x = E + "*?",
        A = "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?",
        D = "(?:(?!(?:\\/|^)\\.).)*?",
        C = n("().*{}+?[]^$\\!"),
        S = /\/+/;
      (a.filter = i),
        (a.defaults = function (e) {
          if (!e || !Object.keys(e).length) return a;
          var t = a,
            r = function (r, n, i) {
              return t.minimatch(r, n, s(e, i));
            };
          return (
            (r.Minimatch = function (r, n) {
              return new t.Minimatch(r, s(e, n));
            }),
            r
          );
        }),
        (o.defaults = function (e) {
          return e && Object.keys(e).length ? a.defaults(e).Minimatch : o;
        }),
        (o.prototype.debug = function () {}),
        (o.prototype.make = u),
        (o.prototype.parseNegate = l),
        (a.braceExpand = function (e, t) {
          return c(e, t);
        }),
        (o.prototype.braceExpand = c),
        (o.prototype.parse = f);
      var _ = {};
      (a.makeRe = function (e, t) {
        return new o(e, t || {}).makeRe();
      }),
        (o.prototype.makeRe = p),
        (a.match = function (e, t, r) {
          r = r || {};
          var n = new o(t, r);
          return (
            (e = e.filter(function (e) {
              return n.match(e);
            })),
            n.options.nonull && !e.length && e.push(t),
            e
          );
        }),
        (o.prototype.match = h),
        (o.prototype.matchOne = function (e, t, r) {
          var n = this.options;
          this.debug("matchOne", { this: this, file: e, pattern: t }),
            this.debug("matchOne", e.length, t.length);
          for (
            var i = 0, s = 0, a = e.length, o = t.length;
            i < a && s < o;
            i++, s++
          ) {
            this.debug("matchOne loop");
            var u = t[s],
              l = e[i];
            if ((this.debug(t, u, l), u === !1)) return !1;
            if (u === y) {
              this.debug("GLOBSTAR", [t, u, l]);
              var c = i,
                f = s + 1;
              if (f === o) {
                for (this.debug("** at the end"); i < a; i++)
                  if (
                    "." === e[i] ||
                    ".." === e[i] ||
                    (!n.dot && "." === e[i].charAt(0))
                  )
                    return !1;
                return !0;
              }
              for (; c < a; ) {
                var p = e[c];
                if (
                  (this.debug("\nglobstar while", e, c, t, f, p),
                  this.matchOne(e.slice(c), t.slice(f), r))
                )
                  return this.debug("globstar found match!", c, a, p), !0;
                if (
                  "." === p ||
                  ".." === p ||
                  (!n.dot && "." === p.charAt(0))
                ) {
                  this.debug("dot detected!", e, c, t, f);
                  break;
                }
                this.debug("globstar swallow a segment, and continue"), c++;
              }
              return !(
                !r ||
                (this.debug("\n>>> no match, partial?", e, c, t, f), c !== a)
              );
            }
            var h;
            if (
              ("string" == typeof u
                ? ((h = n.nocase
                    ? l.toLowerCase() === u.toLowerCase()
                    : l === u),
                  this.debug("string match", u, l, h))
                : ((h = l.match(u)), this.debug("pattern match", u, l, h)),
              !h)
            )
              return !1;
          }
          if (i === a && s === o) return !0;
          if (i === a) return r;
          if (s === o) {
            var d = i === a - 1 && "" === e[i];
            return d;
          }
          throw new Error("wtf?");
        });
    },
    function (e, t) {
      function r(e) {
        if (((e = String(e)), !(e.length > 1e4))) {
          var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
            e
          );
          if (t) {
            var r = parseFloat(t[1]),
              n = (t[2] || "ms").toLowerCase();
            switch (n) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return r * c;
              case "days":
              case "day":
              case "d":
                return r * l;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return r * u;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return r * o;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return r * a;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return r;
              default:
                return;
            }
          }
        }
      }
      function n(e) {
        return e >= l
          ? Math.round(e / l) + "d"
          : e >= u
          ? Math.round(e / u) + "h"
          : e >= o
          ? Math.round(e / o) + "m"
          : e >= a
          ? Math.round(e / a) + "s"
          : e + "ms";
      }
      function i(e) {
        return (
          s(e, l, "day") ||
          s(e, u, "hour") ||
          s(e, o, "minute") ||
          s(e, a, "second") ||
          e + " ms"
        );
      }
      function s(e, t, r) {
        if (!(e < t))
          return e < 1.5 * t
            ? Math.floor(e / t) + " " + r
            : Math.ceil(e / t) + " " + r + "s";
      }
      var a = 1e3,
        o = 60 * a,
        u = 60 * o,
        l = 24 * u,
        c = 365.25 * l;
      e.exports = function (e, t) {
        t = t || {};
        var s = typeof e;
        if ("string" === s && e.length > 0) return r(e);
        if ("number" === s && isNaN(e) === !1) return t.long ? i(e) : n(e);
        throw new Error(
          "val is not a non-empty string or a valid number. val=" +
            JSON.stringify(e)
        );
      };
    },
    function (e, t) {
      "use strict";
      e.exports =
        Number.isNaN ||
        function (e) {
          return e !== e;
        };
    },
    function (e, t, r) {
      (function (t) {
        "use strict";
        function r(e) {
          return "/" === e.charAt(0);
        }
        function n(e) {
          var t = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/,
            r = t.exec(e),
            n = r[1] || "",
            i = Boolean(n && ":" !== n.charAt(1));
          return Boolean(r[2] || i);
        }
        (e.exports = "win32" === t.platform ? n : r),
          (e.exports.posix = r),
          (e.exports.win32 = n);
      }.call(t, r(11)));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      var s = r(17),
        a = i(s),
        o = r(1),
        u = n(o),
        l = Object.prototype.hasOwnProperty;
      t.hoist = function (e) {
        function t(e, t) {
          u.assertVariableDeclaration(e);
          var n = [];
          return (
            e.declarations.forEach(function (e) {
              (r[e.id.name] = u.identifier(e.id.name)),
                e.init
                  ? n.push(u.assignmentExpression("=", e.id, e.init))
                  : t && n.push(e.id);
            }),
            0 === n.length
              ? null
              : 1 === n.length
              ? n[0]
              : u.sequenceExpression(n)
          );
        }
        u.assertFunction(e.node);
        var r = {};
        e.get("body").traverse({
          VariableDeclaration: {
            exit: function (e) {
              var r = t(e.node, !1);
              null === r ? e.remove() : e.replaceWith(u.expressionStatement(r)),
                e.skip();
            },
          },
          ForStatement: function (e) {
            var r = e.node.init;
            u.isVariableDeclaration(r) && e.get("init").replaceWith(t(r, !1));
          },
          ForXStatement: function (e) {
            var r = e.get("left");
            r.isVariableDeclaration() && r.replaceWith(t(r.node, !0));
          },
          FunctionDeclaration: function (e) {
            var t = e.node;
            r[t.id.name] = t.id;
            var n = u.expressionStatement(
              u.assignmentExpression(
                "=",
                t.id,
                u.functionExpression(
                  t.id,
                  t.params,
                  t.body,
                  t.generator,
                  t.expression
                )
              )
            );
            e.parentPath.isBlockStatement()
              ? (e.parentPath.unshiftContainer("body", n), e.remove())
              : e.replaceWith(n),
              e.skip();
          },
          FunctionExpression: function (e) {
            e.skip();
          },
        });
        var n = {};
        e.get("params").forEach(function (e) {
          var t = e.node;
          u.isIdentifier(t) && (n[t.name] = t);
        });
        var i = [];
        return (
          (0, a.default)(r).forEach(function (e) {
            l.call(n, e) || i.push(u.variableDeclarator(r[e], null));
          }),
          0 === i.length ? null : u.variableDeclaration("var", i)
        );
      };
    },
    function (e, t, r) {
      "use strict";
      (t.__esModule = !0),
        (t.default = function () {
          return r(545);
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s() {
        m.default.ok(this instanceof s);
      }
      function a(e) {
        s.call(this), y.assertLiteral(e), (this.returnLoc = e);
      }
      function o(e, t, r) {
        s.call(this),
          y.assertLiteral(e),
          y.assertLiteral(t),
          r ? y.assertIdentifier(r) : (r = null),
          (this.breakLoc = e),
          (this.continueLoc = t),
          (this.label = r);
      }
      function u(e) {
        s.call(this), y.assertLiteral(e), (this.breakLoc = e);
      }
      function l(e, t, r) {
        s.call(this),
          y.assertLiteral(e),
          t ? m.default.ok(t instanceof c) : (t = null),
          r ? m.default.ok(r instanceof f) : (r = null),
          m.default.ok(t || r),
          (this.firstLoc = e),
          (this.catchEntry = t),
          (this.finallyEntry = r);
      }
      function c(e, t) {
        s.call(this),
          y.assertLiteral(e),
          y.assertIdentifier(t),
          (this.firstLoc = e),
          (this.paramId = t);
      }
      function f(e, t) {
        s.call(this),
          y.assertLiteral(e),
          y.assertLiteral(t),
          (this.firstLoc = e),
          (this.afterLoc = t);
      }
      function p(e, t) {
        s.call(this),
          y.assertLiteral(e),
          y.assertIdentifier(t),
          (this.breakLoc = e),
          (this.label = t);
      }
      function h(e) {
        m.default.ok(this instanceof h);
        var t = r(218).Emitter;
        m.default.ok(e instanceof t),
          (this.emitter = e),
          (this.entryStack = [new a(e.finalLoc)]);
      }
      var d = r(64),
        m = i(d),
        v = r(1),
        y = n(v),
        g = r(62);
      (0, g.inherits)(a, s),
        (t.FunctionEntry = a),
        (0, g.inherits)(o, s),
        (t.LoopEntry = o),
        (0, g.inherits)(u, s),
        (t.SwitchEntry = u),
        (0, g.inherits)(l, s),
        (t.TryEntry = l),
        (0, g.inherits)(c, s),
        (t.CatchEntry = c),
        (0, g.inherits)(f, s),
        (t.FinallyEntry = f),
        (0, g.inherits)(p, s),
        (t.LabeledEntry = p);
      var b = h.prototype;
      (t.LeapManager = h),
        (b.withEntry = function (e, t) {
          m.default.ok(e instanceof s), this.entryStack.push(e);
          try {
            t.call(this.emitter);
          } finally {
            var r = this.entryStack.pop();
            m.default.strictEqual(r, e);
          }
        }),
        (b._findLeapLocation = function (e, t) {
          for (var r = this.entryStack.length - 1; r >= 0; --r) {
            var n = this.entryStack[r],
              i = n[e];
            if (i)
              if (t) {
                if (n.label && n.label.name === t.name) return i;
              } else if (!(n instanceof p)) return i;
          }
          return null;
        }),
        (b.getBreakLoc = function (e) {
          return this._findLeapLocation("breakLoc", e);
        }),
        (b.getContinueLoc = function (e) {
          return this._findLeapLocation("continueLoc", e);
        });
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e, t) {
        function r(e) {
          function t(e) {
            return (
              r ||
                (Array.isArray(e)
                  ? e.some(t)
                  : l.isNode(e) && (o.default.strictEqual(r, !1), (r = n(e)))),
              r
            );
          }
          l.assertNode(e);
          var r = !1,
            i = l.VISITOR_KEYS[e.type];
          if (i)
            for (var s = 0; s < i.length; s++) {
              var a = i[s],
                u = e[a];
              t(u);
            }
          return r;
        }
        function n(n) {
          l.assertNode(n);
          var i = c(n);
          return f.call(i, e)
            ? i[e]
            : f.call(p, n.type)
            ? (i[e] = !1)
            : f.call(t, n.type)
            ? (i[e] = !0)
            : (i[e] = r(n));
        }
        return (n.onlyChildren = r), n;
      }
      var a = r(64),
        o = i(a),
        u = r(1),
        l = n(u),
        c = r(217).makeAccessor(),
        f = Object.prototype.hasOwnProperty,
        p = { FunctionExpression: !0 },
        h = {
          CallExpression: !0,
          ForInStatement: !0,
          UnaryExpression: !0,
          BinaryExpression: !0,
          AssignmentExpression: !0,
          UpdateExpression: !0,
          NewExpression: !0,
        },
        d = {
          YieldExpression: !0,
          BreakStatement: !0,
          ContinueStatement: !0,
          ReturnStatement: !0,
          ThrowStatement: !0,
        };
      for (var m in d) f.call(d, m) && (h[m] = d[m]);
      (t.hasSideEffects = s("hasSideEffects", h)),
        (t.containsLeap = s("containsLeap", d));
    },
    function (e, t, r) {
      "use strict";
      function n(e) {
        if (e && e.__esModule) return e;
        var t = {};
        if (null != e)
          for (var r in e)
            Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);
        return (t.default = e), t;
      }
      function i(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function s(e) {
        var t = e.node;
        if (
          (f.assertFunction(t),
          t.id || (t.id = e.scope.parent.generateUidIdentifier("callee")),
          t.generator && f.isFunctionDeclaration(t))
        ) {
          var r = e.findParent(function (e) {
            return e.isProgram() || e.isBlockStatement();
          });
          if (!r) return t.id;
          var n = a(r),
            i = n.declarations[0].id,
            s = n.declarations[0].init.callee.object;
          f.assertArrayExpression(s);
          var o = s.elements.length;
          return (
            s.elements.push(t.id),
            f.memberExpression(i, f.numericLiteral(o), !0)
          );
        }
        return t.id;
      }
      function a(e) {
        var t = e.node;
        l.default.ok(Array.isArray(t.body));
        var r = v(t);
        return r.decl
          ? r.decl
          : ((r.decl = f.variableDeclaration("var", [
              f.variableDeclarator(
                e.scope.generateUidIdentifier("marked"),
                f.callExpression(
                  f.memberExpression(
                    f.arrayExpression([]),
                    f.identifier("map"),
                    !1
                  ),
                  [m.runtimeProperty("mark")]
                )
              ),
            ])),
            e.unshiftContainer("body", r.decl),
            r.decl);
      }
      function o(e, t) {
        var r = { didRenameArguments: !1, argsId: t };
        return e.traverse(y, r), r.didRenameArguments;
      }
      var u = r(64),
        l = i(u),
        c = r(1),
        f = n(c),
        p = r(541),
        h = r(218),
        d = r(219),
        m = n(d),
        v = r(217).makeAccessor();
      t.visitor = {
        Function: {
          exit: function (e, t) {
            var r = e.node;
            if (r.generator) {
              if (r.async) {
                if (t.opts.asyncGenerators === !1) return;
              } else if (t.opts.generators === !1) return;
            } else {
              if (!r.async) return;
              if (t.opts.async === !1) return;
            }
            var n = e.scope.generateUidIdentifier("context"),
              i = e.scope.generateUidIdentifier("args");
            e.ensureBlock();
            var a = e.get("body");
            r.async && a.traverse(b), a.traverse(g, { context: n });
            var u = [],
              l = [];
            a.get("body").forEach(function (e) {
              var t = e.node;
              f.isExpressionStatement(t) && f.isStringLiteral(t.expression)
                ? u.push(t)
                : t && null != t._blockHoist
                ? u.push(t)
                : l.push(t);
            }),
              u.length > 0 && (a.node.body = l);
            var c = s(e);
            f.assertIdentifier(r.id);
            var d = f.identifier(r.id.name + "$"),
              v = (0, p.hoist)(e),
              y = o(e, i);
            y &&
              ((v = v || f.variableDeclaration("var", [])),
              v.declarations.push(
                f.variableDeclarator(i, f.identifier("arguments"))
              ));
            var E = new h.Emitter(n);
            E.explode(e.get("body")),
              v && v.declarations.length > 0 && u.push(v);
            var x = [
                E.getContextFunction(d),
                r.generator ? c : f.nullLiteral(),
                f.thisExpression(),
              ],
              A = E.getTryLocsList();
            A && x.push(A);
            var D = f.callExpression(
              m.runtimeProperty(r.async ? "async" : "wrap"),
              x
            );
            u.push(f.returnStatement(D)), (r.body = f.blockStatement(u));
            var C = a.node.directives;
            C && (r.body.directives = C);
            var S = r.generator;
            S && (r.generator = !1),
              r.async && (r.async = !1),
              S &&
                f.isExpression(r) &&
                e.replaceWith(f.callExpression(m.runtimeProperty("mark"), [r])),
              e.requeue();
          },
        },
      };
      var y = {
          "FunctionExpression|FunctionDeclaration": function (e) {
            e.skip();
          },
          Identifier: function (e, t) {
            "arguments" === e.node.name &&
              m.isReference(e) &&
              (e.replaceWith(t.argsId), (t.didRenameArguments = !0));
          },
        },
        g = {
          MetaProperty: function (e) {
            var t = e.node;
            "function" === t.meta.name &&
              "sent" === t.property.name &&
              e.replaceWith(
                f.memberExpression(this.context, f.identifier("_sent"))
              );
          },
        },
        b = {
          Function: function (e) {
            e.skip();
          },
          AwaitExpression: function (e) {
            var t = e.node.argument;
            e.replaceWith(
              f.yieldExpression(
                f.callExpression(m.runtimeProperty("awrap"), [t]),
                !1
              )
            );
          },
        };
    },
    function (e, t) {
      var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(
        ""
      );
      (t.encode = function (e) {
        if (0 <= e && e < r.length) return r[e];
        throw new TypeError("Must be between 0 and 63: " + e);
      }),
        (t.decode = function (e) {
          var t = 65,
            r = 90,
            n = 97,
            i = 122,
            s = 48,
            a = 57,
            o = 43,
            u = 47,
            l = 26,
            c = 52;
          return t <= e && e <= r
            ? e - t
            : n <= e && e <= i
            ? e - n + l
            : s <= e && e <= a
            ? e - s + c
            : e == o
            ? 62
            : e == u
            ? 63
            : -1;
        });
    },
    function (e, t) {
      function r(e, n, i, s, a, o) {
        var u = Math.floor((n - e) / 2) + e,
          l = a(i, s[u], !0);
        return 0 === l
          ? u
          : l > 0
          ? n - u > 1
            ? r(u, n, i, s, a, o)
            : o == t.LEAST_UPPER_BOUND
            ? n < s.length
              ? n
              : -1
            : u
          : u - e > 1
          ? r(e, u, i, s, a, o)
          : o == t.LEAST_UPPER_BOUND
          ? u
          : e < 0
          ? -1
          : e;
      }
      (t.GREATEST_LOWER_BOUND = 1),
        (t.LEAST_UPPER_BOUND = 2),
        (t.search = function (e, n, i, s) {
          if (0 === n.length) return -1;
          var a = r(-1, n.length, e, n, i, s || t.GREATEST_LOWER_BOUND);
          if (a < 0) return -1;
          for (; a - 1 >= 0 && 0 === i(n[a], n[a - 1], !0); ) --a;
          return a;
        });
    },
    function (e, t, r) {
      function n(e, t) {
        var r = e.generatedLine,
          n = t.generatedLine,
          i = e.generatedColumn,
          a = t.generatedColumn;
        return (
          n > r ||
          (n == r && a >= i) ||
          s.compareByGeneratedPositionsInflated(e, t) <= 0
        );
      }
      function i() {
        (this._array = []),
          (this._sorted = !0),
          (this._last = { generatedLine: -1, generatedColumn: 0 });
      }
      var s = r(61);
      (i.prototype.unsortedForEach = function (e, t) {
        this._array.forEach(e, t);
      }),
        (i.prototype.add = function (e) {
          n(this._last, e)
            ? ((this._last = e), this._array.push(e))
            : ((this._sorted = !1), this._array.push(e));
        }),
        (i.prototype.toArray = function () {
          return (
            this._sorted ||
              (this._array.sort(s.compareByGeneratedPositionsInflated),
              (this._sorted = !0)),
            this._array
          );
        }),
        (t.MappingList = i);
    },
    function (e, t) {
      function r(e, t, r) {
        var n = e[t];
        (e[t] = e[r]), (e[r] = n);
      }
      function n(e, t) {
        return Math.round(e + Math.random() * (t - e));
      }
      function i(e, t, s, a) {
        if (s < a) {
          var o = n(s, a),
            u = s - 1;
          r(e, o, a);
          for (var l = e[a], c = s; c < a; c++)
            t(e[c], l) <= 0 && ((u += 1), r(e, u, c));
          r(e, u + 1, c);
          var f = u + 1;
          i(e, t, s, f - 1), i(e, t, f + 1, a);
        }
      }
      t.quickSort = function (e, t) {
        i(e, t, 0, e.length - 1);
      };
    },
    function (e, t, r) {
      function n(e) {
        var t = e;
        return (
          "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, ""))),
          null != t.sections ? new a(t) : new i(t)
        );
      }
      function i(e) {
        var t = e;
        "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
        var r = o.getArg(t, "version"),
          n = o.getArg(t, "sources"),
          i = o.getArg(t, "names", []),
          s = o.getArg(t, "sourceRoot", null),
          a = o.getArg(t, "sourcesContent", null),
          u = o.getArg(t, "mappings"),
          c = o.getArg(t, "file", null);
        if (r != this._version) throw new Error("Unsupported version: " + r);
        (n = n
          .map(String)
          .map(o.normalize)
          .map(function (e) {
            return s && o.isAbsolute(s) && o.isAbsolute(e)
              ? o.relative(s, e)
              : e;
          })),
          (this._names = l.fromArray(i.map(String), !0)),
          (this._sources = l.fromArray(n, !0)),
          (this.sourceRoot = s),
          (this.sourcesContent = a),
          (this._mappings = u),
          (this.file = c);
      }
      function s() {
        (this.generatedLine = 0),
          (this.generatedColumn = 0),
          (this.source = null),
          (this.originalLine = null),
          (this.originalColumn = null),
          (this.name = null);
      }
      function a(e) {
        var t = e;
        "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
        var r = o.getArg(t, "version"),
          i = o.getArg(t, "sections");
        if (r != this._version) throw new Error("Unsupported version: " + r);
        (this._sources = new l()), (this._names = new l());
        var s = { line: -1, column: 0 };
        this._sections = i.map(function (e) {
          if (e.url)
            throw new Error(
              "Support for url field in sections not implemented."
            );
          var t = o.getArg(e, "offset"),
            r = o.getArg(t, "line"),
            i = o.getArg(t, "column");
          if (r < s.line || (r === s.line && i < s.column))
            throw new Error(
              "Section offsets must be ordered and non-overlapping."
            );
          return (
            (s = t),
            {
              generatedOffset: { generatedLine: r + 1, generatedColumn: i + 1 },
              consumer: new n(o.getArg(e, "map")),
            }
          );
        });
      }
      var o = r(61),
        u = r(547),
        l = r(221).ArraySet,
        c = r(222),
        f = r(549).quickSort;
      (n.fromSourceMap = function (e) {
        return i.fromSourceMap(e);
      }),
        (n.prototype._version = 3),
        (n.prototype.__generatedMappings = null),
        Object.defineProperty(n.prototype, "_generatedMappings", {
          get: function () {
            return (
              this.__generatedMappings ||
                this._parseMappings(this._mappings, this.sourceRoot),
              this.__generatedMappings
            );
          },
        }),
        (n.prototype.__originalMappings = null),
        Object.defineProperty(n.prototype, "_originalMappings", {
          get: function () {
            return (
              this.__originalMappings ||
                this._parseMappings(this._mappings, this.sourceRoot),
              this.__originalMappings
            );
          },
        }),
        (n.prototype._charIsMappingSeparator = function (e, t) {
          var r = e.charAt(t);
          return ";" === r || "," === r;
        }),
        (n.prototype._parseMappings = function (e, t) {
          throw new Error("Subclasses must implement _parseMappings");
        }),
        (n.GENERATED_ORDER = 1),
        (n.ORIGINAL_ORDER = 2),
        (n.GREATEST_LOWER_BOUND = 1),
        (n.LEAST_UPPER_BOUND = 2),
        (n.prototype.eachMapping = function (e, t, r) {
          var i,
            s = t || null,
            a = r || n.GENERATED_ORDER;
          switch (a) {
            case n.GENERATED_ORDER:
              i = this._generatedMappings;
              break;
            case n.ORIGINAL_ORDER:
              i = this._originalMappings;
              break;
            default:
              throw new Error("Unknown order of iteration.");
          }
          var u = this.sourceRoot;
          i.map(function (e) {
            var t = null === e.source ? null : this._sources.at(e.source);
            return (
              null != t && null != u && (t = o.join(u, t)),
              {
                source: t,
                generatedLine: e.generatedLine,
                generatedColumn: e.generatedColumn,
                originalLine: e.originalLine,
                originalColumn: e.originalColumn,
                name: null === e.name ? null : this._names.at(e.name),
              }
            );
          }, this).forEach(e, s);
        }),
        (n.prototype.allGeneratedPositionsFor = function (e) {
          var t = o.getArg(e, "line"),
            r = {
              source: o.getArg(e, "source"),
              originalLine: t,
              originalColumn: o.getArg(e, "column", 0),
            };
          if (
            (null != this.sourceRoot &&
              (r.source = o.relative(this.sourceRoot, r.source)),
            !this._sources.has(r.source))
          )
            return [];
          r.source = this._sources.indexOf(r.source);
          var n = [],
            i = this._findMapping(
              r,
              this._originalMappings,
              "originalLine",
              "originalColumn",
              o.compareByOriginalPositions,
              u.LEAST_UPPER_BOUND
            );
          if (i >= 0) {
            var s = this._originalMappings[i];
            if (void 0 === e.column)
              for (var a = s.originalLine; s && s.originalLine === a; )
                n.push({
                  line: o.getArg(s, "generatedLine", null),
                  column: o.getArg(s, "generatedColumn", null),
                  lastColumn: o.getArg(s, "lastGeneratedColumn", null),
                }),
                  (s = this._originalMappings[++i]);
            else
              for (
                var l = s.originalColumn;
                s && s.originalLine === t && s.originalColumn == l;

              )
                n.push({
                  line: o.getArg(s, "generatedLine", null),
                  column: o.getArg(s, "generatedColumn", null),
                  lastColumn: o.getArg(s, "lastGeneratedColumn", null),
                }),
                  (s = this._originalMappings[++i]);
          }
          return n;
        }),
        (t.SourceMapConsumer = n),
        (i.prototype = Object.create(n.prototype)),
        (i.prototype.consumer = n),
        (i.fromSourceMap = function (e) {
          var t = Object.create(i.prototype),
            r = (t._names = l.fromArray(e._names.toArray(), !0)),
            n = (t._sources = l.fromArray(e._sources.toArray(), !0));
          (t.sourceRoot = e._sourceRoot),
            (t.sourcesContent = e._generateSourcesContent(
              t._sources.toArray(),
              t.sourceRoot
            )),
            (t.file = e._file);
          for (
            var a = e._mappings.toArray().slice(),
              u = (t.__generatedMappings = []),
              c = (t.__originalMappings = []),
              p = 0,
              h = a.length;
            p < h;
            p++
          ) {
            var d = a[p],
              m = new s();
            (m.generatedLine = d.generatedLine),
              (m.generatedColumn = d.generatedColumn),
              d.source &&
                ((m.source = n.indexOf(d.source)),
                (m.originalLine = d.originalLine),
                (m.originalColumn = d.originalColumn),
                d.name && (m.name = r.indexOf(d.name)),
                c.push(m)),
              u.push(m);
          }
          return f(t.__originalMappings, o.compareByOriginalPositions), t;
        }),
        (i.prototype._version = 3),
        Object.defineProperty(i.prototype, "sources", {
          get: function () {
            return this._sources.toArray().map(function (e) {
              return null != this.sourceRoot ? o.join(this.sourceRoot, e) : e;
            }, this);
          },
        }),
        (i.prototype._parseMappings = function (e, t) {
          for (
            var r,
              n,
              i,
              a,
              u,
              l = 1,
              p = 0,
              h = 0,
              d = 0,
              m = 0,
              v = 0,
              y = e.length,
              g = 0,
              b = {},
              E = {},
              x = [],
              A = [];
            g < y;

          )
            if (";" === e.charAt(g)) l++, g++, (p = 0);
            else if ("," === e.charAt(g)) g++;
            else {
              for (
                r = new s(), r.generatedLine = l, a = g;
                a < y && !this._charIsMappingSeparator(e, a);
                a++
              );
              if (((n = e.slice(g, a)), (i = b[n]))) g += n.length;
              else {
                for (i = []; g < a; )
                  c.decode(e, g, E), (u = E.value), (g = E.rest), i.push(u);
                if (2 === i.length)
                  throw new Error("Found a source, but no line and column");
                if (3 === i.length)
                  throw new Error("Found a source and line, but no column");
                b[n] = i;
              }
              (r.generatedColumn = p + i[0]),
                (p = r.generatedColumn),
                i.length > 1 &&
                  ((r.source = m + i[1]),
                  (m += i[1]),
                  (r.originalLine = h + i[2]),
                  (h = r.originalLine),
                  (r.originalLine += 1),
                  (r.originalColumn = d + i[3]),
                  (d = r.originalColumn),
                  i.length > 4 && ((r.name = v + i[4]), (v += i[4]))),
                A.push(r),
                "number" == typeof r.originalLine && x.push(r);
            }
          f(A, o.compareByGeneratedPositionsDeflated),
            (this.__generatedMappings = A),
            f(x, o.compareByOriginalPositions),
            (this.__originalMappings = x);
        }),
        (i.prototype._findMapping = function (e, t, r, n, i, s) {
          if (e[r] <= 0)
            throw new TypeError(
              "Line must be greater than or equal to 1, got " + e[r]
            );
          if (e[n] < 0)
            throw new TypeError(
              "Column must be greater than or equal to 0, got " + e[n]
            );
          return u.search(e, t, i, s);
        }),
        (i.prototype.computeColumnSpans = function () {
          for (var e = 0; e < this._generatedMappings.length; ++e) {
            var t = this._generatedMappings[e];
            if (e + 1 < this._generatedMappings.length) {
              var r = this._generatedMappings[e + 1];
              if (t.generatedLine === r.generatedLine) {
                t.lastGeneratedColumn = r.generatedColumn - 1;
                continue;
              }
            }
            t.lastGeneratedColumn = 1 / 0;
          }
        }),
        (i.prototype.originalPositionFor = function (e) {
          var t = {
              generatedLine: o.getArg(e, "line"),
              generatedColumn: o.getArg(e, "column"),
            },
            r = this._findMapping(
              t,
              this._generatedMappings,
              "generatedLine",
              "generatedColumn",
              o.compareByGeneratedPositionsDeflated,
              o.getArg(e, "bias", n.GREATEST_LOWER_BOUND)
            );
          if (r >= 0) {
            var i = this._generatedMappings[r];
            if (i.generatedLine === t.generatedLine) {
              var s = o.getArg(i, "source", null);
              null !== s &&
                ((s = this._sources.at(s)),
                null != this.sourceRoot && (s = o.join(this.sourceRoot, s)));
              var a = o.getArg(i, "name", null);
              return (
                null !== a && (a = this._names.at(a)),
                {
                  source: s,
                  line: o.getArg(i, "originalLine", null),
                  column: o.getArg(i, "originalColumn", null),
                  name: a,
                }
              );
            }
          }
          return { source: null, line: null, column: null, name: null };
        }),
        (i.prototype.hasContentsOfAllSources = function () {
          return (
            !!this.sourcesContent &&
            this.sourcesContent.length >= this._sources.size() &&
            !this.sourcesContent.some(function (e) {
              return null == e;
            })
          );
        }),
        (i.prototype.sourceContentFor = function (e, t) {
          if (!this.sourcesContent) return null;
          if (
            (null != this.sourceRoot && (e = o.relative(this.sourceRoot, e)),
            this._sources.has(e))
          )
            return this.sourcesContent[this._sources.indexOf(e)];
          var r;
          if (null != this.sourceRoot && (r = o.urlParse(this.sourceRoot))) {
            var n = e.replace(/^file:\/\//, "");
            if ("file" == r.scheme && this._sources.has(n))
              return this.sourcesContent[this._sources.indexOf(n)];
            if ((!r.path || "/" == r.path) && this._sources.has("/" + e))
              return this.sourcesContent[this._sources.indexOf("/" + e)];
          }
          if (t) return null;
          throw new Error('"' + e + '" is not in the SourceMap.');
        }),
        (i.prototype.generatedPositionFor = function (e) {
          var t = o.getArg(e, "source");
          if (
            (null != this.sourceRoot && (t = o.relative(this.sourceRoot, t)),
            !this._sources.has(t))
          )
            return { line: null, column: null, lastColumn: null };
          t = this._sources.indexOf(t);
          var r = {
              source: t,
              originalLine: o.getArg(e, "line"),
              originalColumn: o.getArg(e, "column"),
            },
            i = this._findMapping(
              r,
              this._originalMappings,
              "originalLine",
              "originalColumn",
              o.compareByOriginalPositions,
              o.getArg(e, "bias", n.GREATEST_LOWER_BOUND)
            );
          if (i >= 0) {
            var s = this._originalMappings[i];
            if (s.source === r.source)
              return {
                line: o.getArg(s, "generatedLine", null),
                column: o.getArg(s, "generatedColumn", null),
                lastColumn: o.getArg(s, "lastGeneratedColumn", null),
              };
          }
          return { line: null, column: null, lastColumn: null };
        }),
        (t.BasicSourceMapConsumer = i),
        (a.prototype = Object.create(n.prototype)),
        (a.prototype.constructor = n),
        (a.prototype._version = 3),
        Object.defineProperty(a.prototype, "sources", {
          get: function () {
            for (var e = [], t = 0; t < this._sections.length; t++)
              for (
                var r = 0;
                r < this._sections[t].consumer.sources.length;
                r++
              )
                e.push(this._sections[t].consumer.sources[r]);
            return e;
          },
        }),
        (a.prototype.originalPositionFor = function (e) {
          var t = {
              generatedLine: o.getArg(e, "line"),
              generatedColumn: o.getArg(e, "column"),
            },
            r = u.search(t, this._sections, function (e, t) {
              var r = e.generatedLine - t.generatedOffset.generatedLine;
              return r
                ? r
                : e.generatedColumn - t.generatedOffset.generatedColumn;
            }),
            n = this._sections[r];
          return n
            ? n.consumer.originalPositionFor({
                line: t.generatedLine - (n.generatedOffset.generatedLine - 1),
                column:
                  t.generatedColumn -
                  (n.generatedOffset.generatedLine === t.generatedLine
                    ? n.generatedOffset.generatedColumn - 1
                    : 0),
                bias: e.bias,
              })
            : { source: null, line: null, column: null, name: null };
        }),
        (a.prototype.hasContentsOfAllSources = function () {
          return this._sections.every(function (e) {
            return e.consumer.hasContentsOfAllSources();
          });
        }),
        (a.prototype.sourceContentFor = function (e, t) {
          for (var r = 0; r < this._sections.length; r++) {
            var n = this._sections[r],
              i = n.consumer.sourceContentFor(e, !0);
            if (i) return i;
          }
          if (t) return null;
          throw new Error('"' + e + '" is not in the SourceMap.');
        }),
        (a.prototype.generatedPositionFor = function (e) {
          for (var t = 0; t < this._sections.length; t++) {
            var r = this._sections[t];
            if (r.consumer.sources.indexOf(o.getArg(e, "source")) !== -1) {
              var n = r.consumer.generatedPositionFor(e);
              if (n) {
                var i = {
                  line: n.line + (r.generatedOffset.generatedLine - 1),
                  column:
                    n.column +
                    (r.generatedOffset.generatedLine === n.line
                      ? r.generatedOffset.generatedColumn - 1
                      : 0),
                };
                return i;
              }
            }
          }
          return { line: null, column: null };
        }),
        (a.prototype._parseMappings = function (e, t) {
          (this.__generatedMappings = []), (this.__originalMappings = []);
          for (var r = 0; r < this._sections.length; r++)
            for (
              var n = this._sections[r],
                i = n.consumer._generatedMappings,
                s = 0;
              s < i.length;
              s++
            ) {
              var a = i[s],
                u = n.consumer._sources.at(a.source);
              null !== n.consumer.sourceRoot &&
                (u = o.join(n.consumer.sourceRoot, u)),
                this._sources.add(u),
                (u = this._sources.indexOf(u));
              var l = n.consumer._names.at(a.name);
              this._names.add(l), (l = this._names.indexOf(l));
              var c = {
                source: u,
                generatedLine:
                  a.generatedLine + (n.generatedOffset.generatedLine - 1),
                generatedColumn:
                  a.generatedColumn +
                  (n.generatedOffset.generatedLine === a.generatedLine
                    ? n.generatedOffset.generatedColumn - 1
                    : 0),
                originalLine: a.originalLine,
                originalColumn: a.originalColumn,
                name: l,
              };
              this.__generatedMappings.push(c),
                "number" == typeof c.originalLine &&
                  this.__originalMappings.push(c);
            }
          f(this.__generatedMappings, o.compareByGeneratedPositionsDeflated),
            f(this.__originalMappings, o.compareByOriginalPositions);
        }),
        (t.IndexedSourceMapConsumer = a);
    },
    function (e, t, r) {
      function n(e, t, r, n, i) {
        (this.children = []),
          (this.sourceContents = {}),
          (this.line = null == e ? null : e),
          (this.column = null == t ? null : t),
          (this.source = null == r ? null : r),
          (this.name = null == i ? null : i),
          (this[u] = !0),
          null != n && this.add(n);
      }
      var i = r(223).SourceMapGenerator,
        s = r(61),
        a = /(\r?\n)/,
        o = 10,
        u = "$$$isSourceNode$$$";
      (n.fromStringWithSourceMap = function (e, t, r) {
        function i(e, t) {
          if (null === e || void 0 === e.source) o.add(t);
          else {
            var i = r ? s.join(r, e.source) : e.source;
            o.add(new n(e.originalLine, e.originalColumn, i, t, e.name));
          }
        }
        var o = new n(),
          u = e.split(a),
          l = function () {
            var e = u.shift(),
              t = u.shift() || "";
            return e + t;
          },
          c = 1,
          f = 0,
          p = null;
        return (
          t.eachMapping(function (e) {
            if (null !== p) {
              if (!(c < e.generatedLine)) {
                var t = u[0],
                  r = t.substr(0, e.generatedColumn - f);
                return (
                  (u[0] = t.substr(e.generatedColumn - f)),
                  (f = e.generatedColumn),
                  i(p, r),
                  void (p = e)
                );
              }
              i(p, l()), c++, (f = 0);
            }
            for (; c < e.generatedLine; ) o.add(l()), c++;
            if (f < e.generatedColumn) {
              var t = u[0];
              o.add(t.substr(0, e.generatedColumn)),
                (u[0] = t.substr(e.generatedColumn)),
                (f = e.generatedColumn);
            }
            p = e;
          }, this),
          u.length > 0 && (p && i(p, l()), o.add(u.join(""))),
          t.sources.forEach(function (e) {
            var n = t.sourceContentFor(e);
            null != n &&
              (null != r && (e = s.join(r, e)), o.setSourceContent(e, n));
          }),
          o
        );
      }),
        (n.prototype.add = function (e) {
          if (Array.isArray(e))
            e.forEach(function (e) {
              this.add(e);
            }, this);
          else {
            if (!e[u] && "string" != typeof e)
              throw new TypeError(
                "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                  e
              );
            e && this.children.push(e);
          }
          return this;
        }),
        (n.prototype.prepend = function (e) {
          if (Array.isArray(e))
            for (var t = e.length - 1; t >= 0; t--) this.prepend(e[t]);
          else {
            if (!e[u] && "string" != typeof e)
              throw new TypeError(
                "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " +
                  e
              );
            this.children.unshift(e);
          }
          return this;
        }),
        (n.prototype.walk = function (e) {
          for (var t, r = 0, n = this.children.length; r < n; r++)
            (t = this.children[r]),
              t[u]
                ? t.walk(e)
                : "" !== t &&
                  e(t, {
                    source: this.source,
                    line: this.line,
                    column: this.column,
                    name: this.name,
                  });
        }),
        (n.prototype.join = function (e) {
          var t,
            r,
            n = this.children.length;
          if (n > 0) {
            for (t = [], r = 0; r < n - 1; r++)
              t.push(this.children[r]), t.push(e);
            t.push(this.children[r]), (this.children = t);
          }
          return this;
        }),
        (n.prototype.replaceRight = function (e, t) {
          var r = this.children[this.children.length - 1];
          return (
            r[u]
              ? r.replaceRight(e, t)
              : "string" == typeof r
              ? (this.children[this.children.length - 1] = r.replace(e, t))
              : this.children.push("".replace(e, t)),
            this
          );
        }),
        (n.prototype.setSourceContent = function (e, t) {
          this.sourceContents[s.toSetString(e)] = t;
        }),
        (n.prototype.walkSourceContents = function (e) {
          for (var t = 0, r = this.children.length; t < r; t++)
            this.children[t][u] && this.children[t].walkSourceContents(e);
          for (
            var n = Object.keys(this.sourceContents), t = 0, r = n.length;
            t < r;
            t++
          )
            e(s.fromSetString(n[t]), this.sourceContents[n[t]]);
        }),
        (n.prototype.toString = function () {
          var e = "";
          return (
            this.walk(function (t) {
              e += t;
            }),
            e
          );
        }),
        (n.prototype.toStringWithSourceMap = function (e) {
          var t = { code: "", line: 1, column: 0 },
            r = new i(e),
            n = !1,
            s = null,
            a = null,
            u = null,
            l = null;
          return (
            this.walk(function (e, i) {
              (t.code += e),
                null !== i.source && null !== i.line && null !== i.column
                  ? ((s === i.source &&
                      a === i.line &&
                      u === i.column &&
                      l === i.name) ||
                      r.addMapping({
                        source: i.source,
                        original: { line: i.line, column: i.column },
                        generated: { line: t.line, column: t.column },
                        name: i.name,
                      }),
                    (s = i.source),
                    (a = i.line),
                    (u = i.column),
                    (l = i.name),
                    (n = !0))
                  : n &&
                    (r.addMapping({
                      generated: { line: t.line, column: t.column },
                    }),
                    (s = null),
                    (n = !1));
              for (var c = 0, f = e.length; c < f; c++)
                e.charCodeAt(c) === o
                  ? (t.line++,
                    (t.column = 0),
                    c + 1 === f
                      ? ((s = null), (n = !1))
                      : n &&
                        r.addMapping({
                          source: i.source,
                          original: { line: i.line, column: i.column },
                          generated: { line: t.line, column: t.column },
                          name: i.name,
                        }))
                  : t.column++;
            }),
            this.walkSourceContents(function (e, t) {
              r.setSourceContent(e, t);
            }),
            { code: t.code, map: r }
          );
        }),
        (t.SourceNode = n);
    },
    function (e, t, r) {
      "use strict";
      var n = r(146)();
      e.exports = function (e) {
        return "string" == typeof e ? e.replace(n, "") : e;
      };
    },
    function (e, t) {
      "use strict";
      e.exports = function e(t) {
        function r() {}
        (r.prototype = t), new r();
      };
    },
    function (e, t) {
      function r() {
        throw new Error("tty.ReadStream is not implemented");
      }
      function n() {
        throw new Error("tty.ReadStream is not implemented");
      }
      (t.isatty = function () {
        return !1;
      }),
        (t.ReadStream = r),
        (t.WriteStream = n);
    },
    function (e, t) {
      "function" == typeof Object.create
        ? (e.exports = function (e, t) {
            (e.super_ = t),
              (e.prototype = Object.create(t.prototype, {
                constructor: {
                  value: e,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0,
                },
              }));
          })
        : (e.exports = function (e, t) {
            e.super_ = t;
            var r = function () {};
            (r.prototype = t.prototype),
              (e.prototype = new r()),
              (e.prototype.constructor = e);
          });
    },
    function (e, t) {
      e.exports = function (e) {
        return (
          e &&
          "object" == typeof e &&
          "function" == typeof e.copy &&
          "function" == typeof e.fill &&
          "function" == typeof e.readUInt8
        );
      };
    },
  ])
);
/*
page: http://www.reactnativeexpress.com/
url: http://cdn.rawgit.com/dabbott/react-native-web-player/gh-v1.8.1/babel-worker-bundle.js
*/
